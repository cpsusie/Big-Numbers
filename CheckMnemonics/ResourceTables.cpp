/* DO NOT EDIT THIS FILE - it is machine generated */

#line 120 "C:\\Mytools2015\\CheckMnemonics\\Resource.y"
#include "stdafx.h"
#include "ResourceParser.h"

#line 44 "C:\\mytools2015\\ParserGen\\lib\\parsergencpp.par"

#pragma warning(disable : 4312)



typedef short TableType;

/******************************************************************************\
* The action matrix holds the parse action(state,terminal)                     *
* Used in LRParser::parserStep() tp determine what to do in the current state  *
* and a given terminal on input. The interpretation of action is:              *
*                                                                              *
*   action <  0   - Reduce by production p, p == -action.                      *
*   action == 0   - Accept. Reduce by production 0.                            *
*   action >  0   - Go to state s (=action),                                   *
*                   and push [s,input,pos] to parser stack.                    *
*                   Then read next symbol from input.                          *
*   action == _ParserError - not found (=unexpected input).                    *
*                                                                              *
* 3 different formats are used:1 Uncompressed and 2 Compressed.                *
* Uncompressed state:                                                          *
*   The array uncompressedActions[] holds a list of numbers for each state     *
*   starting with number of items, M, belonging to the state, followed by M    *
*   pairs, each consisting of (token,action)                                   *
*     Item list for state NNNN with 2 items             2, 1, 2, 2,-3          *
*     Number of pairs in list---------------------------+  |  |  |  |          *
*     Legal input symbol-----------------------------------+  |  |  |          *
*     Action-(> 0 => shift input and goto state 1)------------+  |  |          *
*     Legal input symbol-----------------------------------------+  |          *
*     Action-(< 0 => reduce by production 3)------------------------+          *
*   A line containing "#define _acNNNN Index" is added, where Index is a       *
*   reference to the first number in list of numbers belonging to the state    *
*                                                                              *
* Compressed state:                                                            *
*   Single-item-state (SIS) ot Multi-item-state (MIS)                          *
*   SIS:If there is only 1 possible action in the state:                       *
*     A line containing "#define _acNNNN code" is added, where code is         *
*     encoded as:          ((Action&0x7fff) << 16) | (Token&0x7fff) )          *
*     Bit[16-30] = Action-------+                       |                      *
*     Bit[0 -14] = Legal token--------------------------+                      *
*     Bit 31     = 1 Compressed state indicator                                *
*     Bit 15     = 0 SIS compression                                           *
*                                                                              *
*   MIS:If all actions in the state are reduce by the same production:         *
*     A line containing "#define _acNNNN code" is added, where code is         *
*     encoded as:          ((Action&0x7fff) << 16) | (Index&0x7fff))           *
*     Bit[16-30] = Action-------+                       |                      *
*     Bit[0 -14] = Index into compressedLasets----------+                      *
*     Bit 31     = 1 Compressed state indicator                                *
*     Bit 15     = 1 MIS compression                                           *
*                                                                              *
* CompressedLasets is a list of bitsets, containing 1-bits for all legal       *
* inputsymbols in the given state (MIS). Many MIS may refer to the same bitset *
* Number of bytes in each bitset = (terminalcount-1)/8+1                       *
* Index in MIS-code refer to the first byte in the bitset belonging the state  *
*                                                                              *
* If any uncompressed state N has the same actionarray as a previous           *
* generated uncompressed state M, a #define _acN _acM                          *
*                                                                              *
\******************************************************************************/
static const BYTE compressedLasets[1681] = {
  /*  0   6 tokens */  0x27,0x00,0x10,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /*  1   7 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /*  2  13 tokens */ ,0x04,0xa0,0x25,0x18,0x41,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /*  3  17 tokens */ ,0x14,0xa0,0x2d,0x18,0x43,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /*  4  57 tokens */ ,0xbf,0xbf,0x3f,0xf8,0xc3,0xbf,0x3f,0xf0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8e
  /*  5  59 tokens */ ,0x3f,0xe0,0x3f,0x58,0xe3,0xbf,0xff,0xff,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xee
  /*  6   7 tokens */ ,0x08,0x00,0x00,0x00,0x00,0x00,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /*  7   7 tokens */ ,0x02,0x00,0x00,0x00,0x00,0x00,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /*  8   8 tokens */ ,0x08,0x00,0x00,0x00,0x00,0x00,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /*  9  13 tokens */ ,0x00,0x00,0x00,0x00,0x80,0x3f,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /* 10  20 tokens */ ,0x3f,0x00,0x10,0x40,0x80,0xbf,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8e
  /* 11  25 tokens */ ,0x3f,0x00,0x16,0x40,0x80,0xbf,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8e
  /* 12  16 tokens */ ,0x0a,0x00,0x00,0x00,0x80,0x3f,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /* 13   7 tokens */ ,0x27,0x00,0x10,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20
  /* 14   6 tokens */ ,0x00,0x00,0x06,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /* 15   6 tokens */ ,0x1e,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 16   8 tokens */ ,0x00,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /* 17   2 tokens */ ,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 18   2 tokens */ ,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 19  11 tokens */ ,0x10,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8a
  /* 20   5 tokens */ ,0x00,0x00,0x06,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /* 21   7 tokens */ ,0x00,0x00,0x06,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  /* 22  21 tokens */ ,0x10,0x00,0x07,0x00,0x00,0x00,0x38,0xf0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e
  /* 23   3 tokens */ ,0x00,0x00,0x08,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 24   4 tokens */ ,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 25   3 tokens */ ,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 26   2 tokens */ ,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 27  13 tokens */ ,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0xf0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 28   3 tokens */ ,0x00,0x40,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 29   9 tokens */ ,0x27,0x00,0x18,0x40,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 30   2 tokens */ ,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /* 31   2 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 32  14 tokens */ ,0x10,0x00,0x01,0x00,0x00,0x00,0x00,0xf0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 33   4 tokens */ ,0x10,0x00,0x08,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 34   8 tokens */ ,0x90,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 35  15 tokens */ ,0x10,0x00,0x01,0x00,0x00,0x00,0x00,0xf0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c
  /* 36   5 tokens */ ,0x00,0x00,0x06,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /* 37   5 tokens */ ,0x10,0x00,0x08,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06
  /* 38   6 tokens */ ,0x10,0x00,0x08,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e
  /* 39   5 tokens */ ,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 40   2 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
}; // Size of table:1.684(x86)/1.688(x64) bytes.

static const TableType uncompressedActions[] = {
  /* state[0],Index=0                     */    5,   1,  28,   2,  29,   5,  22,  20,  23,  30,  25
  /* state[2],Index=11                    */ ,  6,   0,  -1,   1,  28,   2,  29,   5,  22,  20,  23
                                                 ,  30,  25
  /* state[21],Index=24                   */ , 13,   2,  29,  13,  36,  15,  31,  16,  32,  18,  43
                                                 ,  21,  39,  27,  40,  28,  38,  32,  44,  38,  41
                                                 ,  48,  34,  49,  35,  50,  42
  /* state[24],Index=51                   */ , 15,   2,-471,  13,-471,  15,-471,  16,-471,  18,-471
                                                 ,  21,-471,  27,-471,  28,-471,  29,  47,  31,  48
                                                 ,  32,-471,  38,-471,  48,-471,  49,-471,  50,-471
  /* state[25],Index=82                   */ ,  3,   1,  28,   2,  29,   3,  53
  /* state[46],Index=89                   */ ,  7,  54,  70,  55,  71,  56,  72,  57,  73,  58,  74
                                                 ,  59,  75, 321,  69
  /* state[48],Index=104                  */ ,  2,   2,  29,   3,  53
  /* state[51],Index=109                  */ , 21,   0,-464,   1,-464,   2,-464,   3,-464,   4,-464
                                                 ,   5,-464,  20,-464,  30,-464,  39,-464,  40,-464
                                                 ,  41,-464,  42,-464,  43,-464,  44,-464,  45,-464
                                                 ,  47,-464, 321,-464, 322,-464, 323,-464, 326,  82
                                                 , 327,-464
  /* state[54],Index=152                  */ ,  7,   3,  53,  54,  70,  55,  71,  56,  72,  57,  73
                                                 ,  58,  74,  59,  75
  /* state[57],Index=167                  */ ,  7,   1,  28,  54,  70,  55,  71,  56,  72,  57,  73
                                                 ,  58,  74,  59,  75
  /* state[58],Index=182                  */ ,  5,  17,  93,  18,  92,  51,  89,  52,  90,  53,  91
  /* state[61],Index=193                  */ ,  7,  54,  70,  55,  71,  56,  72,  57,  73,  58,  74
                                                 ,  59,  75, 321,  98
  /* state[62],Index=208                  */ ,  4,   1,  28,   2,  29,   3,  53,   4, 102
  /* state[63],Index=217                  */ ,  7,  54,  70,  55,  71,  56,  72,  57,  73,  58,  74
                                                 ,  59,  75, 321, 103
  /* state[64],Index=232                  */ ,  8,   3,  53,  54,  70,  55,  71,  56,  72,  57,  73
                                                 ,  58,  74,  59,  75, 321, 104
  /* state[65],Index=249                  */ , 13,  39, 108,  40, 109,  41, 110,  42, 111,  43, 112
                                                 ,  44, 113,  45, 114,  54,  70,  55,  71,  56,  72
                                                 ,  57,  73,  58,  74,  59,  75
  /* state[67],Index=276                  */ ,  7,  54,  70,  55,  71,  56,  72,  57,  73,  58,  74
                                                 ,  59,  75, 321, 118
  /* state[76],Index=291                  */ ,  7,  54,  70,  55,  71,  56,  72,  57,  73,  58,  74
                                                 ,  59,  75, 321, 122
  /* state[79],Index=306                  */ ,  7,   0,-456,   1,-456,   2,-456,   5,-456,  20,-456
                                                 ,  30,-456, 325, 123
  /* state[86],Index=321                  */ ,  4,  17, 133,  18, 132,  51, 130,  53, 131
  /* state[87],Index=330                  */ ,  6,  17,  93,  18,  92,  51,  89,  52,  90,  53,  91
                                                 , 321, 134
  /* state[89],Index=343                  */ , 34,  71, 154,  72, 155,  73, 156,  74, 157,  75, 158
                                                 ,  76, 159,  77, 160,  78, 161,  79, 162,  80, 163
                                                 ,  81, 164,  82, 165,  83, 166,  84, 167,  85, 168
                                                 ,  86, 169,  87, 170,  88, 171,  89, 172,  90, 173
                                                 , 284, 140, 285, 141, 286, 142, 287, 143, 288, 144
                                                 , 289, 145, 290, 146, 291, 147, 292, 148, 293, 149
                                                 , 294, 150, 295, 151, 296, 152, 297, 153
  /* state[90],Index=412                  */ , 19,  91, 177,  92, 178,  93, 179,  94, 180,  95, 181
                                                 ,  96, 182,  97, 183,  98, 184,  99, 185, 100, 186
                                                 , 101, 187, 102, 188, 103, 189, 104, 190, 105, 191
                                                 , 106, 192, 107, 193, 108, 194, 109, 195
  /* state[98],Index=451                  */ ,  2,  19, 209,  33, 208
  /* state[99],Index=456                  */ ,  5,   1,  28,   2,  29,   3,  53,   4, 102, 322, 210
  /* state[106],Index=467                 */ ,  8,  39, 108,  40, 109,  41, 110,  42, 111,  43, 112
                                                 ,  44, 113,  45, 114, 321, 217
  /* state[116],Index=484                 */ ,  2,   4, 227, 322,-454
  /* state[119],Index=489                 */ ,  2,   2,  29, 322, 233
  /* state[125],Index=494                 */ ,  2,   4, 239, 327, 240
  /* state[126],Index=499                 */ , 11,   4,-460,  39,-460,  40,-460,  41,-460,  42,-460
                                                 ,  43,-460,  44,-460,  45,-460, 321,-460, 323, 241
                                                 , 327,-460
  /* state[128],Index=522                 */ ,  5,  17, 133,  18, 132,  51, 130,  53, 131, 321, 242
  /* state[134],Index=533                 */ , 13,  16, 271,  60, 261,  61, 262,  62, 268,  63, 272
                                                 ,  64, 269,  65, 270,  66, 263,  67, 265,  68, 266
                                                 ,  69, 267,  70, 273, 322, -49
  /* state[136],Index=560                 */ ,  7,  17, -34,  18, -34,  51, -34,  52, -34,  53, -34
                                                 , 321, -34, 323, 274
  /* state[174],Index=575                 */ ,  7,  17, -35,  18, -35,  51, -35,  52, -35,  53, -35
                                                 , 321, -35, 323, 275
  /* state[202],Index=590                 */ ,  2,  14, 280,  37, 281
  /* state[204],Index=595                 */ ,  3,  19, 209,  33, 208, 322, 283
  /* state[209],Index=602                 */ ,  2,   3,  53,  37, 287
  /* state[213],Index=607                 */ ,  4,   1,  28,   2,  29,   3,  53, 322, 288
  /* state[216],Index=616                 */ ,  2,   4, 227, 322, 291
  /* state[219],Index=621                 */ ,  9,   4, 239,  39,-437,  40,-437,  41,-437,  42,-437
                                                 ,  43,-437,  44,-437,  45,-437, 321,-437
  /* state[220],Index=640                 */ ,  9,   4, 239,  39,-438,  40,-438,  41,-438,  42,-438
                                                 ,  43,-438,  44,-438,  45,-438, 321,-438
  /* state[221],Index=659                 */ ,  9,  39,-439,  40,-439,  41,-439,  42,-439,  43,-439
                                                 ,  44,-439,  45,-439, 321,-439, 323, 241
  /* state[222],Index=678                 */ ,  9,  39,-440,  40,-440,  41,-440,  42,-440,  43,-440
                                                 ,  44,-440,  45,-440, 321,-440, 323, 241
  /* state[223],Index=697                 */ ,  9,  39,-441,  40,-441,  41,-441,  42,-441,  43,-441
                                                 ,  44,-441,  45,-441, 321,-441, 323, 241
  /* state[224],Index=716                 */ ,  9,  39,-442,  40,-442,  41,-442,  42,-442,  43,-442
                                                 ,  44,-442,  45,-442, 321,-442, 323, 241
  /* state[225],Index=735                 */ ,  9,  39,-443,  40,-443,  41,-443,  42,-443,  43,-443
                                                 ,  44,-443,  45,-443, 321,-443, 323, 241
  /* state[228],Index=754                 */ ,  3,   2,  29,   3,  53, 322, 296
  /* state[236],Index=761                 */ ,  2,   3,  53, 322, 299
  /* state[244],Index=766                 */ ,  6,  17, -28,  18, -28,  51, -28,  53, -28, 321, -28
                                                 , 323, 274
  /* state[250],Index=779                 */ , 13,  16, 271,  60, 261,  61, 262,  62, 268,  63, 272
                                                 ,  64, 269,  65, 270,  66, 263,  67, 265,  68, 266
                                                 ,  69, 267,  70, 273, 322, -50
  /* state[278],Index=806                 */ ,  3,  14, 280,  37, 281, 322, 322
  /* state[292],Index=813                 */ ,  2,  46, 294, 322, 328
  /* state[301],Index=818                 */ , 11,   4,-459,  39,-459,  40,-459,  41,-459,  42,-459
                                                 ,  43,-459,  44,-459,  45,-459, 321,-459, 323, 241
                                                 , 327,-459
  /* state[320],Index=841                 */ ,  7,   4, 344,  17, -42,  18, -42,  51, -42,  52, -42
                                                 ,  53, -42, 321, -42
  /* state[325],Index=856                 */ ,  2,   4, 347, 321,  98
  /* state[326],Index=861                 */ ,  2,   1,  28,   2,  29
  /* state[327],Index=866                 */ ,  5,   1,-412,   2,-412,   3,-412,   4, 351, 322,-412
  /* state[336],Index=877                 */ , 14,   4, 338,  16, -69,  60, -69,  61, -69,  62, -69
                                                 ,  63, -69,  64, -69,  65, -69,  66, -69,  67, -69
                                                 ,  68, -69,  69, -69,  70, -69, 322, -69
  /* state[338],Index=906                 */ ,216,   1,  28,   2,  29,  71, 154,  72, 155,  73, 156
                                                 ,  74, 157,  75, 158,  76, 159,  77, 160,  78, 161
                                                 ,  79, 162,  80, 163,  81, 164,  82, 165,  83, 166
                                                 ,  84, 167,  85, 168,  86, 169,  87, 170,  88, 171
                                                 ,  89, 172,  90, 173,  91, 177,  92, 178,  93, 179
                                                 ,  94, 180,  95, 181,  96, 182,  97, 183,  98, 184
                                                 ,  99, 185, 100, 186, 101, 187, 102, 188, 103, 189
                                                 , 104, 190, 105, 191, 106, 192, 107, 193, 108, 194
                                                 , 109, 195, 110, 379, 111, 380, 112, 381, 113, 382
                                                 , 114, 383, 115, 384, 116, 385, 117, 386, 118, 387
                                                 , 119, 388, 120, 389, 121, 390, 122, 391, 123, 392
                                                 , 124, 393, 125, 394, 126, 395, 127, 396, 128, 397
                                                 , 129, 398, 130, 399, 131, 400, 132, 401, 133, 402
                                                 , 134, 403, 135, 404, 136, 405, 137, 406, 138, 407
                                                 , 139, 408, 140, 409, 141, 410, 142, 411, 143, 412
                                                 , 144, 413, 145, 414, 146, 415, 147, 416, 148, 417
                                                 , 149, 418, 150, 419, 151, 420, 152, 421, 153, 422
                                                 , 154, 451, 155, 452, 156, 453, 157, 454, 158, 455
                                                 , 159, 456, 160, 457, 161, 458, 162, 459, 163, 460
                                                 , 164, 461, 165, 462, 166, 463, 167, 464, 168, 465
                                                 , 169, 466, 170, 467, 171, 468, 172, 469, 173, 470
                                                 , 174, 471, 175, 472, 176, 473, 177, 474, 178, 475
                                                 , 179, 476, 180, 477, 181, 478, 182, 479, 183, 480
                                                 , 184, 481, 185, 482, 186, 483, 187, 484, 188, 485
                                                 , 189, 486, 190, 423, 191, 424, 192, 425, 193, 426
                                                 , 194, 427, 195, 428, 196, 429, 197, 430, 198, 431
                                                 , 199, 432, 200, 433, 201, 434, 202, 435, 203, 436
                                                 , 204, 437, 205, 438, 206, 439, 207, 440, 208, 441
                                                 , 209, 442, 210, 443, 211, 444, 212, 445, 213, 446
                                                 , 214, 447, 215, 448, 216, 449, 217, 450, 218, 487
                                                 , 219, 488, 220, 489, 221, 490, 222, 491, 223, 492
                                                 , 224, 493, 225, 494, 226, 495, 227, 496, 228, 497
                                                 , 229, 498, 230, 499, 231, 500, 232, 501, 233, 502
                                                 , 234, 503, 235, 504, 236, 505, 237, 506, 238, 507
                                                 , 239, 508, 240, 509, 241, 510, 242, 511, 243, 512
                                                 , 244, 513, 245, 514, 246, 515, 247, 516, 248, 517
                                                 , 249, 518, 250, 519, 251, 520, 252, 521, 253, 522
                                                 , 254, 523, 255, 524, 256, 525, 257, 526, 258, 527
                                                 , 259, 528, 260, 529, 261, 530, 262, 531, 263, 532
                                                 , 264, 533, 265, 534, 266, 535, 267, 536, 268, 537
                                                 , 269, 538, 270, 539, 271, 540, 272, 541, 273, 542
                                                 , 274, 543, 275, 544, 276, 545, 277, 546, 278, 547
                                                 , 279, 548, 280, 549, 281, 550, 282, 551, 283, 552
                                                 , 324, 365
  /* state[339],Index=1339                */ , 14,   4, 338,  16, -70,  60, -70,  61, -70,  62, -70
                                                 ,  63, -70,  64, -70,  65, -70,  66, -70,  67, -70
                                                 ,  68, -70,  69, -70,  70, -70, 322, -70
  /* state[340],Index=1368                */ , 14,   4, 338,  16, -71,  60, -71,  61, -71,  62, -71
                                                 ,  63, -71,  64, -71,  65, -71,  66, -71,  67, -71
                                                 ,  68, -71,  69, -71,  70, -71, 322, -71
  /* state[342],Index=1397                */ , 14,   4, 338,  16, -73,  60, -73,  61, -73,  62, -73
                                                 ,  63, -73,  64, -73,  65, -73,  66, -73,  67, -73
                                                 ,  68, -73,  69, -73,  70, -73, 322, -73
  /* state[347],Index=1426                */ , 27,   1,  28,  34, 559,  35, 560,  36, 561, 298, 564
                                                 , 299, 565, 300, 566, 301, 567, 302, 568, 303, 569
                                                 , 304, 570, 305, 571, 306, 572, 307, 573, 308, 574
                                                 , 309, 575, 310, 576, 311, 577, 312, 578, 313, 579
                                                 , 314, 580, 315, 581, 316, 582, 317, 583, 318, 584
                                                 , 319, 585, 320, 586
  /* state[351],Index=1481                */ ,  6,  22, 590,  23, 591,  24, 592,  25, 594,  26, 595
                                                 ,  70, 593
  /* state[352],Index=1494                */ ,  2,  46, 294,  47, 600
  /* state[360],Index=1499                */ , 15,   4, -83,  16, -83,  60, -83,  61, -83,  62, -83
                                                 ,  63, -83,  64, -83,  65, -83,  66, -83,  67, -83
                                                 ,  68, -83,  69, -83,  70, -83, 322, -83, 323, 604
  /* state[361],Index=1530                */ , 15,   4, -84,  16, -84,  60, -84,  61, -84,  62, -84
                                                 ,  63, -84,  64, -84,  65, -84,  66, -84,  67, -84
                                                 ,  68, -84,  69, -84,  70, -84, 322, -84, 323, 605
  /* state[365],Index=1561                */ ,194,  71, 154,  72, 155,  73, 156,  74, 157,  75, 158
                                                 ,  76, 159,  77, 160,  78, 161,  79, 162,  80, 163
                                                 ,  81, 164,  82, 165,  83, 166,  84, 167,  85, 168
                                                 ,  86, 169,  87, 170,  88, 171,  89, 172,  90, 173
                                                 , 110, 379, 111, 380, 112, 381, 113, 382, 114, 383
                                                 , 115, 384, 116, 385, 117, 386, 118, 387, 119, 388
                                                 , 120, 389, 121, 390, 122, 391, 123, 392, 124, 393
                                                 , 125, 394, 126, 395, 127, 396, 128, 397, 129, 398
                                                 , 130, 399, 131, 400, 132, 401, 133, 402, 134, 403
                                                 , 135, 404, 136, 405, 137, 406, 138, 407, 139, 408
                                                 , 140, 409, 141, 410, 142, 411, 143, 412, 144, 413
                                                 , 145, 414, 146, 415, 147, 416, 148, 417, 149, 418
                                                 , 150, 419, 151, 420, 152, 421, 153, 422, 154, 451
                                                 , 155, 452, 156, 453, 157, 454, 158, 455, 159, 456
                                                 , 160, 457, 161, 458, 162, 459, 163, 460, 164, 461
                                                 , 165, 462, 166, 463, 167, 464, 168, 465, 169, 466
                                                 , 170, 467, 171, 468, 172, 469, 173, 470, 174, 471
                                                 , 175, 472, 176, 473, 177, 474, 178, 475, 179, 476
                                                 , 180, 477, 181, 478, 182, 479, 183, 480, 184, 481
                                                 , 185, 482, 186, 483, 187, 484, 188, 485, 189, 486
                                                 , 190, 423, 191, 424, 192, 425, 193, 426, 194, 427
                                                 , 195, 428, 196, 429, 197, 430, 198, 431, 199, 432
                                                 , 200, 433, 201, 434, 202, 435, 203, 436, 204, 437
                                                 , 205, 438, 206, 439, 207, 440, 208, 441, 209, 442
                                                 , 210, 443, 211, 444, 212, 445, 213, 446, 214, 447
                                                 , 215, 448, 216, 449, 217, 450, 218, 487, 219, 488
                                                 , 220, 489, 221, 490, 222, 491, 223, 492, 224, 493
                                                 , 225, 494, 226, 495, 227, 496, 228, 497, 229, 498
                                                 , 230, 499, 231, 500, 232, 501, 233, 502, 234, 503
                                                 , 235, 504, 236, 505, 237, 506, 238, 507, 239, 508
                                                 , 240, 509, 241, 510, 242, 511, 243, 512, 244, 513
                                                 , 245, 514, 246, 515, 247, 516, 248, 517, 249, 518
                                                 , 250, 519, 251, 520, 252, 521, 253, 522, 254, 523
                                                 , 255, 524, 256, 525, 257, 526, 258, 527, 259, 528
                                                 , 260, 529, 261, 530, 262, 531, 263, 532, 264, 533
                                                 , 265, 534, 266, 535, 267, 536, 268, 537, 269, 538
                                                 , 270, 539, 271, 540, 272, 541, 273, 542, 274, 543
                                                 , 275, 544, 276, 545, 277, 546, 278, 547, 279, 548
                                                 , 280, 549, 281, 550, 282, 551, 283, 552
  /* state[562],Index=1950                */ ,  6,   4,-377,  19,-377,  33,-377, 321,-377, 322,-377
                                                 , 323, 610
  /* state[587],Index=1963                */ ,  4,   4, 347,  19,-369,  33,-369, 322,-369
  /* state[588],Index=1972                */ ,  5,   1,-413,   2,-413,   3,-413,   4, 611, 322,-413
  /* state[597],Index=1983                */ ,  2,  46, 294, 322,-447
  /* state[598],Index=1988                */ ,  2,  47, 600, 322,-448
  /* state[601],Index=1993                */ ,  8,   4,-348,   7, 618,   8, 619,   9, 620,  10, 621
                                                 ,  11, 622,  12, 623, 322, 615
  /* state[602],Index=2010                */ , 14,   4, 338,  16, -61,  60, -61,  61, -61,  62, -61
                                                 ,  63, -61,  64, -61,  65, -61,  66, -61,  67, -61
                                                 ,  68, -61,  69, -61,  70, -61, 322, -61
  /* state[603],Index=2039                */ , 14,   4, 338,  16, -65,  60, -65,  61, -65,  62, -65
                                                 ,  63, -65,  64, -65,  65, -65,  66, -65,  67, -65
                                                 ,  68, -65,  69, -65,  70, -65, 322, -65
  /* state[604],Index=2068                */ ,195,  71, 154,  72, 155,  73, 156,  74, 157,  75, 158
                                                 ,  76, 159,  77, 160,  78, 161,  79, 162,  80, 163
                                                 ,  81, 164,  82, 165,  83, 166,  84, 167,  85, 168
                                                 ,  86, 169,  87, 170,  88, 171,  89, 172,  90, 173
                                                 , 110, 379, 111, 380, 112, 381, 113, 382, 114, 383
                                                 , 115, 384, 116, 385, 117, 386, 118, 387, 119, 388
                                                 , 120, 389, 121, 390, 122, 391, 123, 392, 124, 393
                                                 , 125, 394, 126, 395, 127, 396, 128, 397, 129, 398
                                                 , 130, 399, 131, 400, 132, 401, 133, 402, 134, 403
                                                 , 135, 404, 136, 405, 137, 406, 138, 407, 139, 408
                                                 , 140, 409, 141, 410, 142, 411, 143, 412, 144, 413
                                                 , 145, 414, 146, 415, 147, 416, 148, 417, 149, 418
                                                 , 150, 419, 151, 420, 152, 421, 153, 422, 154, 451
                                                 , 155, 452, 156, 453, 157, 454, 158, 455, 159, 456
                                                 , 160, 457, 161, 458, 162, 459, 163, 460, 164, 461
                                                 , 165, 462, 166, 463, 167, 464, 168, 465, 169, 466
                                                 , 170, 467, 171, 468, 172, 469, 173, 470, 174, 471
                                                 , 175, 472, 176, 473, 177, 474, 178, 475, 179, 476
                                                 , 180, 477, 181, 478, 182, 479, 183, 480, 184, 481
                                                 , 185, 482, 186, 483, 187, 484, 188, 485, 189, 486
                                                 , 190, 423, 191, 424, 192, 425, 193, 426, 194, 427
                                                 , 195, 428, 196, 429, 197, 430, 198, 431, 199, 432
                                                 , 200, 433, 201, 434, 202, 435, 203, 436, 204, 437
                                                 , 205, 438, 206, 439, 207, 440, 208, 441, 209, 442
                                                 , 210, 443, 211, 444, 212, 445, 213, 446, 214, 447
                                                 , 215, 448, 216, 449, 217, 450, 218, 487, 219, 488
                                                 , 220, 489, 221, 490, 222, 491, 223, 492, 224, 493
                                                 , 225, 494, 226, 495, 227, 496, 228, 497, 229, 498
                                                 , 230, 499, 231, 500, 232, 501, 233, 502, 234, 503
                                                 , 235, 504, 236, 505, 237, 506, 238, 507, 239, 508
                                                 , 240, 509, 241, 510, 242, 511, 243, 512, 244, 513
                                                 , 245, 514, 246, 515, 247, 516, 248, 517, 249, 518
                                                 , 250, 519, 251, 520, 252, 521, 253, 522, 254, 523
                                                 , 255, 524, 256, 525, 257, 526, 258, 527, 259, 528
                                                 , 260, 529, 261, 530, 262, 531, 263, 532, 264, 533
                                                 , 265, 534, 266, 535, 267, 536, 268, 537, 269, 538
                                                 , 270, 539, 271, 540, 272, 541, 273, 542, 274, 543
                                                 , 275, 544, 276, 545, 277, 546, 278, 547, 279, 548
                                                 , 280, 549, 281, 550, 282, 551, 283, 552, 324, 365
  /* state[607],Index=2459                */ , 14,   4, 338,  16, -72,  60, -72,  61, -72,  62, -72
                                                 ,  63, -72,  64, -72,  65, -72,  66, -72,  67, -72
                                                 ,  68, -72,  69, -72,  70, -72, 322, -72
  /* state[610],Index=2488                */ , 23, 298, 564, 299, 565, 300, 566, 301, 567, 302, 568
                                                 , 303, 569, 304, 570, 305, 571, 306, 572, 307, 573
                                                 , 308, 574, 309, 575, 310, 576, 311, 577, 312, 578
                                                 , 313, 579, 314, 580, 315, 581, 316, 582, 317, 583
                                                 , 318, 584, 319, 585, 320, 586
  /* state[614],Index=2535                */ ,  6,   1,  28,   2,  29,   3,  53,   4, 102,  47,-451
                                                 , 322,-451
  /* state[631],Index=2548                */ , 14,   4, 338,  16, -74,  60, -74,  61, -74,  62, -74
                                                 ,  63, -74,  64, -74,  65, -74,  66, -74,  67, -74
                                                 ,  68, -74,  69, -74,  70, -74, 322, -74
}; // Size of table:5.156(x86)/5.160(x64) bytes.

#define _ac0000 0          /* Index of uncompressed state[0]          */
#define _ac0001 0x80000000 /* Reduce by 0 on EOI                      */
#define _ac0002 11         /* Index of uncompressed state[2]          */
#define _ac0003 0xfffd8000 /* Reduce by 3 on tokens in set[0]         */
#define _ac0004 0xfffc8000 /* Reduce by 4 on tokens in set[0]         */
#define _ac0005 0xfffb8000 /* Reduce by 5 on tokens in set[0]         */
#define _ac0006 0xfffa8000 /* Reduce by 6 on tokens in set[0]         */
#define _ac0007 0xfff98000 /* Reduce by 7 on tokens in set[0]         */
#define _ac0008 0xfff88000 /* Reduce by 8 on tokens in set[0]         */
#define _ac0009 0xfff78000 /* Reduce by 9 on tokens in set[0]         */
#define _ac0010 0xfff68000 /* Reduce by 10 on tokens in set[0]        */
#define _ac0011 0xfff58000 /* Reduce by 11 on tokens in set[0]        */
#define _ac0012 0xfff48000 /* Reduce by 12 on tokens in set[0]        */
#define _ac0013 0xfff38000 /* Reduce by 13 on tokens in set[0]        */
#define _ac0014 0xfff28000 /* Reduce by 14 on tokens in set[0]        */
#define _ac0015 0xfff18000 /* Reduce by 15 on tokens in set[0]        */
#define _ac0016 0xfff08000 /* Reduce by 16 on tokens in set[0]        */
#define _ac0017 0xffef8000 /* Reduce by 17 on tokens in set[0]        */
#define _ac0018 0xffee8000 /* Reduce by 18 on tokens in set[0]        */
#define _ac0019 0xffed8000 /* Reduce by 19 on tokens in set[0]        */
#define _ac0020 0xffec8000 /* Reduce by 20 on tokens in set[0]        */
#define _ac0021 24         /* Index of uncompressed state[21]         */
#define _ac0022 0x802d0006 /* Shift  to 45 on DESIGNINFO              */
#define _ac0023 0xff988029 /* Reduce by 104 on tokens in set[1]       */
#define _ac0024 51         /* Index of uncompressed state[24]         */
#define _ac0025 82         /* Index of uncompressed state[25]         */
#define _ac0026 0xfe2b8052 /* Reduce by 469 on tokens in set[2]       */
#define _ac0027 0xfe2a807b /* Reduce by 470 on tokens in set[3]       */
#define _ac0028 0xfe2880a4 /* Reduce by 472 on tokens in set[4]       */
#define _ac0029 0xfe2780cd /* Reduce by 473 on tokens in set[5]       */
#define _ac0030 0xfffe8000 /* Reduce by 2 on tokens in set[0]         */
#define _ac0031 0xff9880f6 /* Reduce by 104 on tokens in set[6]       */
#define _ac0032 0xff9880f6 /* Reduce by 104 on tokens in set[6]       */
#define _ac0033 0xff9880f6 /* Reduce by 104 on tokens in set[6]       */
#define _ac0034 0xff98811f /* Reduce by 104 on tokens in set[7]       */
#define _ac0035 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0036 0xff98811f /* Reduce by 104 on tokens in set[7]       */
#define _ac0037 0xff988029 /* Reduce by 104 on tokens in set[1]       */
#define _ac0038 0x803e0141 /* Shift  to 62 on BEGIN                   */
#define _ac0039 0xff988029 /* Reduce by 104 on tokens in set[1]       */
#define _ac0040 0xff988148 /* Reduce by 104 on tokens in set[8]       */
#define _ac0041 0xff988171 /* Reduce by 104 on tokens in set[9]       */
#define _ac0042 0x80420141 /* Shift  to 66 on BEGIN                   */
#define _ac0043 0xfe978029 /* Reduce by 361 on tokens in set[1]       */
#define _ac0044 0xfe968029 /* Reduce by 362 on tokens in set[1]       */
#define _ac0045 0xff988029 /* Reduce by 104 on tokens in set[1]       */
#define _ac0046 89         /* Index of uncompressed state[46]         */
#define _ac0047 0xff988029 /* Reduce by 104 on tokens in set[1]       */
#define _ac0048 104        /* Index of uncompressed state[48]         */
#define _ac0049 0x80510004 /* Shift  to 81 on COMMA                   */
#define _ac0050 0xfe31819a /* Reduce by 463 on tokens in set[10]      */
#define _ac0051 109        /* Index of uncompressed state[51]         */
#define _ac0052 0xfe2f819a /* Reduce by 465 on tokens in set[10]      */
#define _ac0053 0xfe2681c3 /* Reduce by 474 on tokens in set[11]      */
#define _ac0054 152        /* Index of uncompressed state[54]         */
#define _ac0055 _ac0054    /* Saved 30 bytes                          */
#define _ac0056 _ac0054    /* Saved 30 bytes                          */
#define _ac0057 167        /* Index of uncompressed state[57]         */
#define _ac0058 182        /* Index of uncompressed state[58]         */
#define _ac0059 0x805e0004 /* Shift  to 94 on COMMA                   */
#define _ac0060 _ac0057    /* Saved 30 bytes                          */
#define _ac0061 193        /* Index of uncompressed state[61]         */
#define _ac0062 208        /* Index of uncompressed state[62]         */
#define _ac0063 217        /* Index of uncompressed state[63]         */
#define _ac0064 232        /* Index of uncompressed state[64]         */
#define _ac0065 249        /* Index of uncompressed state[65]         */
#define _ac0066 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0067 276        /* Index of uncompressed state[67]         */
#define _ac0068 0xff9781ec /* Reduce by 105 on tokens in set[12]      */
#define _ac0069 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0070 0xff9681ec /* Reduce by 106 on tokens in set[12]      */
#define _ac0071 0xff9581ec /* Reduce by 107 on tokens in set[12]      */
#define _ac0072 0xff9481ec /* Reduce by 108 on tokens in set[12]      */
#define _ac0073 0xff9381ec /* Reduce by 109 on tokens in set[12]      */
#define _ac0074 0xff9281ec /* Reduce by 110 on tokens in set[12]      */
#define _ac0075 0xff9181ec /* Reduce by 111 on tokens in set[12]      */
#define _ac0076 291        /* Index of uncompressed state[76]         */
#define _ac0077 0xfe3c8000 /* Reduce by 452 on tokens in set[0]       */
#define _ac0078 0xfe398000 /* Reduce by 455 on tokens in set[0]       */
#define _ac0079 306        /* Index of uncompressed state[79]         */
#define _ac0080 0xfe378215 /* Reduce by 457 on tokens in set[13]      */
#define _ac0081 _ac0025    /* Saved 14 bytes                          */
#define _ac0082 _ac0025    /* Saved 14 bytes                          */
#define _ac0083 0xffeb8000 /* Reduce by 21 on tokens in set[0]        */
#define _ac0084 0xffea8000 /* Reduce by 22 on tokens in set[0]        */
#define _ac0085 0xffe98000 /* Reduce by 23 on tokens in set[0]        */
#define _ac0086 321        /* Index of uncompressed state[86]         */
#define _ac0087 330        /* Index of uncompressed state[87]         */
#define _ac0088 0xffdf823e /* Reduce by 33 on tokens in set[14]       */
#define _ac0089 343        /* Index of uncompressed state[89]         */
#define _ac0090 412        /* Index of uncompressed state[90]         */
#define _ac0091 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0092 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0093 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0094 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0095 0x80ca0141 /* Shift  to 202 on BEGIN                  */
#define _ac0096 0x80cb0004 /* Shift  to 203 on COMMA                  */
#define _ac0097 0xfe988000 /* Reduce by 360 on tokens in set[0]       */
#define _ac0098 451        /* Index of uncompressed state[98]         */
#define _ac0099 456        /* Index of uncompressed state[99]         */
#define _ac0100 0xfe6b8267 /* Reduce by 405 on tokens in set[15]      */
#define _ac0101 0xfe6a8267 /* Reduce by 406 on tokens in set[15]      */
#define _ac0102 _ac0025    /* Saved 14 bytes                          */
#define _ac0103 _ac0025    /* Saved 14 bytes                          */
#define _ac0104 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0105 0xfe598000 /* Reduce by 423 on tokens in set[0]       */
#define _ac0106 467        /* Index of uncompressed state[106]        */
#define _ac0107 0xfe4c8290 /* Reduce by 436 on tokens in set[16]      */
#define _ac0108 _ac0025    /* Saved 14 bytes                          */
#define _ac0109 _ac0025    /* Saved 14 bytes                          */
#define _ac0110 _ac0025    /* Saved 14 bytes                          */
#define _ac0111 _ac0025    /* Saved 14 bytes                          */
#define _ac0112 _ac0025    /* Saved 14 bytes                          */
#define _ac0113 _ac0025    /* Saved 14 bytes                          */
#define _ac0114 _ac0025    /* Saved 14 bytes                          */
#define _ac0115 0x80e20142 /* Shift  to 226 on END                    */
#define _ac0116 484        /* Index of uncompressed state[116]        */
#define _ac0117 0xfe5782b9 /* Reduce by 425 on tokens in set[17]      */
#define _ac0118 _ac0048    /* Saved 10 bytes                          */
#define _ac0119 489        /* Index of uncompressed state[119]        */
#define _ac0120 0xfe5482e2 /* Reduce by 428 on tokens in set[18]      */
#define _ac0121 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0122 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0123 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0124 0xfe4f8000 /* Reduce by 433 on tokens in set[0]       */
#define _ac0125 494        /* Index of uncompressed state[125]        */
#define _ac0126 499        /* Index of uncompressed state[126]        */
#define _ac0127 0xfe32830b /* Reduce by 462 on tokens in set[19]      */
#define _ac0128 522        /* Index of uncompressed state[128]        */
#define _ac0129 0xffe58334 /* Reduce by 27 on tokens in set[20]       */
#define _ac0130 _ac0089    /* Saved 138 bytes                         */
#define _ac0131 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0132 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0133 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0134 533        /* Index of uncompressed state[134]        */
#define _ac0135 0xffe0823e /* Reduce by 32 on tokens in set[14]       */
#define _ac0136 560        /* Index of uncompressed state[136]        */
#define _ac0137 0xffd2835d /* Reduce by 46 on tokens in set[21]       */
#define _ac0138 0xffd1835d /* Reduce by 47 on tokens in set[21]       */
#define _ac0139 0xffd0835d /* Reduce by 48 on tokens in set[21]       */
#define _ac0140 0xff90835d /* Reduce by 112 on tokens in set[21]      */
#define _ac0141 0xff8f835d /* Reduce by 113 on tokens in set[21]      */
#define _ac0142 0xff8e835d /* Reduce by 114 on tokens in set[21]      */
#define _ac0143 0xff8d835d /* Reduce by 115 on tokens in set[21]      */
#define _ac0144 0xff8c835d /* Reduce by 116 on tokens in set[21]      */
#define _ac0145 0xff8b835d /* Reduce by 117 on tokens in set[21]      */
#define _ac0146 0xff8a835d /* Reduce by 118 on tokens in set[21]      */
#define _ac0147 0xff89835d /* Reduce by 119 on tokens in set[21]      */
#define _ac0148 0xff88835d /* Reduce by 120 on tokens in set[21]      */
#define _ac0149 0xff87835d /* Reduce by 121 on tokens in set[21]      */
#define _ac0150 0xff86835d /* Reduce by 122 on tokens in set[21]      */
#define _ac0151 0xff85835d /* Reduce by 123 on tokens in set[21]      */
#define _ac0152 0xff84835d /* Reduce by 124 on tokens in set[21]      */
#define _ac0153 0xff83835d /* Reduce by 125 on tokens in set[21]      */
#define _ac0154 0xff828386 /* Reduce by 126 on tokens in set[22]      */
#define _ac0155 0xff818386 /* Reduce by 127 on tokens in set[22]      */
#define _ac0156 0xff808386 /* Reduce by 128 on tokens in set[22]      */
#define _ac0157 0xff7f8386 /* Reduce by 129 on tokens in set[22]      */
#define _ac0158 0xff7e8386 /* Reduce by 130 on tokens in set[22]      */
#define _ac0159 0xff7d8386 /* Reduce by 131 on tokens in set[22]      */
#define _ac0160 0xff7c8386 /* Reduce by 132 on tokens in set[22]      */
#define _ac0161 0xff7b8386 /* Reduce by 133 on tokens in set[22]      */
#define _ac0162 0xff7a8386 /* Reduce by 134 on tokens in set[22]      */
#define _ac0163 0xff798386 /* Reduce by 135 on tokens in set[22]      */
#define _ac0164 0xff788386 /* Reduce by 136 on tokens in set[22]      */
#define _ac0165 0xff778386 /* Reduce by 137 on tokens in set[22]      */
#define _ac0166 0xff768386 /* Reduce by 138 on tokens in set[22]      */
#define _ac0167 0xff758386 /* Reduce by 139 on tokens in set[22]      */
#define _ac0168 0xff748386 /* Reduce by 140 on tokens in set[22]      */
#define _ac0169 0xff738386 /* Reduce by 141 on tokens in set[22]      */
#define _ac0170 0xff728386 /* Reduce by 142 on tokens in set[22]      */
#define _ac0171 0xff718386 /* Reduce by 143 on tokens in set[22]      */
#define _ac0172 0xff708386 /* Reduce by 144 on tokens in set[22]      */
#define _ac0173 0xff6f8386 /* Reduce by 145 on tokens in set[22]      */
#define _ac0174 575        /* Index of uncompressed state[174]        */
#define _ac0175 0xffd8835d /* Reduce by 40 on tokens in set[21]       */
#define _ac0176 0xffd7835d /* Reduce by 41 on tokens in set[21]       */
#define _ac0177 0xff6e8386 /* Reduce by 146 on tokens in set[22]      */
#define _ac0178 0xff6d8386 /* Reduce by 147 on tokens in set[22]      */
#define _ac0179 0xff6c8386 /* Reduce by 148 on tokens in set[22]      */
#define _ac0180 0xff6b8386 /* Reduce by 149 on tokens in set[22]      */
#define _ac0181 0xff6a8386 /* Reduce by 150 on tokens in set[22]      */
#define _ac0182 0xff698386 /* Reduce by 151 on tokens in set[22]      */
#define _ac0183 0xff688386 /* Reduce by 152 on tokens in set[22]      */
#define _ac0184 0xff678386 /* Reduce by 153 on tokens in set[22]      */
#define _ac0185 0xff668386 /* Reduce by 154 on tokens in set[22]      */
#define _ac0186 0xff658386 /* Reduce by 155 on tokens in set[22]      */
#define _ac0187 0xff648386 /* Reduce by 156 on tokens in set[22]      */
#define _ac0188 0xff638386 /* Reduce by 157 on tokens in set[22]      */
#define _ac0189 0xff628386 /* Reduce by 158 on tokens in set[22]      */
#define _ac0190 0xff618386 /* Reduce by 159 on tokens in set[22]      */
#define _ac0191 0xff608386 /* Reduce by 160 on tokens in set[22]      */
#define _ac0192 0xff5f8386 /* Reduce by 161 on tokens in set[22]      */
#define _ac0193 0xff5e8386 /* Reduce by 162 on tokens in set[22]      */
#define _ac0194 0xff5d8386 /* Reduce by 163 on tokens in set[22]      */
#define _ac0195 0xff5c8386 /* Reduce by 164 on tokens in set[22]      */
#define _ac0196 0xffdc823e /* Reduce by 36 on tokens in set[14]       */
#define _ac0197 0xffdb823e /* Reduce by 37 on tokens in set[14]       */
#define _ac0198 0xffda823e /* Reduce by 38 on tokens in set[14]       */
#define _ac0199 0x81140004 /* Shift  to 276 on COMMA                  */
#define _ac0200 0xffd4823e /* Reduce by 44 on tokens in set[14]       */
#define _ac0201 0x81150004 /* Shift  to 277 on COMMA                  */
#define _ac0202 590        /* Index of uncompressed state[202]        */
#define _ac0203 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0204 595        /* Index of uncompressed state[204]        */
#define _ac0205 0xfe9383af /* Reduce by 365 on tokens in set[23]      */
#define _ac0206 0xfe9283af /* Reduce by 366 on tokens in set[23]      */
#define _ac0207 0xfe9183af /* Reduce by 367 on tokens in set[23]      */
#define _ac0208 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0209 602        /* Index of uncompressed state[209]        */
#define _ac0210 0xfe6d8000 /* Reduce by 403 on tokens in set[0]       */
#define _ac0211 0xfe6c8267 /* Reduce by 404 on tokens in set[15]      */
#define _ac0212 0xfe698267 /* Reduce by 407 on tokens in set[15]      */
#define _ac0213 607        /* Index of uncompressed state[213]        */
#define _ac0214 0xfe6683d8 /* Reduce by 410 on tokens in set[24]      */
#define _ac0215 0x81220004 /* Shift  to 290 on COMMA                  */
#define _ac0216 616        /* Index of uncompressed state[216]        */
#define _ac0217 0x8126002e /* Shift  to 294 on BLOCK                  */
#define _ac0218 0xfe4d8290 /* Reduce by 435 on tokens in set[16]      */
#define _ac0219 621        /* Index of uncompressed state[219]        */
#define _ac0220 640        /* Index of uncompressed state[220]        */
#define _ac0221 659        /* Index of uncompressed state[221]        */
#define _ac0222 678        /* Index of uncompressed state[222]        */
#define _ac0223 697        /* Index of uncompressed state[223]        */
#define _ac0224 716        /* Index of uncompressed state[224]        */
#define _ac0225 735        /* Index of uncompressed state[225]        */
#define _ac0226 0xfe3b8000 /* Reduce by 453 on tokens in set[0]       */
#define _ac0227 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0228 754        /* Index of uncompressed state[228]        */
#define _ac0229 0xfeab8401 /* Reduce by 341 on tokens in set[25]      */
#define _ac0230 0x812a0004 /* Shift  to 298 on COMMA                  */
#define _ac0231 0xfea90004 /* Reduce by 343 on COMMA                  */
#define _ac0232 0xfea80004 /* Reduce by 344 on COMMA                  */
#define _ac0233 0xfe568000 /* Reduce by 426 on tokens in set[0]       */
#define _ac0234 0xfe5582e2 /* Reduce by 427 on tokens in set[18]      */
#define _ac0235 0xfe5382e2 /* Reduce by 429 on tokens in set[18]      */
#define _ac0236 761        /* Index of uncompressed state[236]        */
#define _ac0237 0xfe50842a /* Reduce by 432 on tokens in set[26]      */
#define _ac0238 0xfe368215 /* Reduce by 458 on tokens in set[13]      */
#define _ac0239 _ac0025    /* Saved 14 bytes                          */
#define _ac0240 0xfe2e819a /* Reduce by 466 on tokens in set[10]      */
#define _ac0241 _ac0025    /* Saved 14 bytes                          */
#define _ac0242 _ac0134    /* Saved 54 bytes                          */
#define _ac0243 0xffe68334 /* Reduce by 26 on tokens in set[20]       */
#define _ac0244 766        /* Index of uncompressed state[244]        */
#define _ac0245 0xffe38334 /* Reduce by 29 on tokens in set[20]       */
#define _ac0246 0xffe28334 /* Reduce by 30 on tokens in set[20]       */
#define _ac0247 0xffe18334 /* Reduce by 31 on tokens in set[20]       */
#define _ac0248 0x81300004 /* Shift  to 304 on COMMA                  */
#define _ac0249 0x81310142 /* Shift  to 305 on END                    */
#define _ac0250 779        /* Index of uncompressed state[250]        */
#define _ac0251 0xffcd8453 /* Reduce by 51 on tokens in set[27]       */
#define _ac0252 0xffcb8453 /* Reduce by 53 on tokens in set[27]       */
#define _ac0253 0xffca8453 /* Reduce by 54 on tokens in set[27]       */
#define _ac0254 0xffc98453 /* Reduce by 55 on tokens in set[27]       */
#define _ac0255 0xffc88453 /* Reduce by 56 on tokens in set[27]       */
#define _ac0256 0xffc78453 /* Reduce by 57 on tokens in set[27]       */
#define _ac0257 0xffc68453 /* Reduce by 58 on tokens in set[27]       */
#define _ac0258 0xffc58453 /* Reduce by 59 on tokens in set[27]       */
#define _ac0259 0xffc48453 /* Reduce by 60 on tokens in set[27]       */
#define _ac0260 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0261 0xffc20003 /* Reduce by 62 on STRING                  */
#define _ac0262 0xffc10003 /* Reduce by 63 on STRING                  */
#define _ac0263 0xffc00003 /* Reduce by 64 on STRING                  */
#define _ac0264 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0265 0xffbe0003 /* Reduce by 66 on STRING                  */
#define _ac0266 0xffbd0003 /* Reduce by 67 on STRING                  */
#define _ac0267 0xffbc0003 /* Reduce by 68 on STRING                  */
#define _ac0268 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0269 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0270 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0271 _ac0048    /* Saved 10 bytes                          */
#define _ac0272 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0273 _ac0025    /* Saved 14 bytes                          */
#define _ac0274 _ac0089    /* Saved 138 bytes                         */
#define _ac0275 _ac0090    /* Saved 78 bytes                          */
#define _ac0276 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0277 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0278 806        /* Index of uncompressed state[278]        */
#define _ac0279 0xfe9b847c /* Reduce by 357 on tokens in set[28]      */
#define _ac0280 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0281 0xfe99847c /* Reduce by 359 on tokens in set[28]      */
#define _ac0282 0xfe2c0141 /* Reduce by 468 on BEGIN                  */
#define _ac0283 0xfe9584a5 /* Reduce by 363 on tokens in set[29]      */
#define _ac0284 0xfe9483af /* Reduce by 364 on tokens in set[23]      */
#define _ac0285 0xfe8d84ce /* Reduce by 371 on tokens in set[30]      */
#define _ac0286 0x81460004 /* Shift  to 326 on COMMA                  */
#define _ac0287 0xfe8e83af /* Reduce by 370 on tokens in set[23]      */
#define _ac0288 0xfe688000 /* Reduce by 408 on tokens in set[0]       */
#define _ac0289 0xfe6783d8 /* Reduce by 409 on tokens in set[24]      */
#define _ac0290 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0291 0xfe5a8000 /* Reduce by 422 on tokens in set[0]       */
#define _ac0292 813        /* Index of uncompressed state[292]        */
#define _ac0293 0xfe4384f7 /* Reduce by 445 on tokens in set[31]      */
#define _ac0294 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0295 0xfe5882b9 /* Reduce by 424 on tokens in set[17]      */
#define _ac0296 0xfead8000 /* Reduce by 339 on tokens in set[0]       */
#define _ac0297 0xfeac8401 /* Reduce by 340 on tokens in set[25]      */
#define _ac0298 0x814b0030 /* Shift  to 331 on DIALOG                 */
#define _ac0299 0xfe528000 /* Reduce by 430 on tokens in set[0]       */
#define _ac0300 0xfe51842a /* Reduce by 431 on tokens in set[26]      */
#define _ac0301 818        /* Index of uncompressed state[301]        */
#define _ac0302 0xfe33830b /* Reduce by 461 on tokens in set[19]      */
#define _ac0303 0x814c0142 /* Shift  to 332 on END                    */
#define _ac0304 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0305 0xffe78000 /* Reduce by 25 on tokens in set[0]        */
#define _ac0306 0xffcc8453 /* Reduce by 52 on tokens in set[27]       */
#define _ac0307 0x814e0004 /* Shift  to 334 on COMMA                  */
#define _ac0308 0x814f0004 /* Shift  to 335 on COMMA                  */
#define _ac0309 0x81520004 /* Shift  to 338 on COMMA                  */
#define _ac0310 0x81520004 /* Shift  to 338 on COMMA                  */
#define _ac0311 0x81520004 /* Shift  to 338 on COMMA                  */
#define _ac0312 0x81550004 /* Shift  to 341 on COMMA                  */
#define _ac0313 0x81520004 /* Shift  to 338 on COMMA                  */
#define _ac0314 0x81570004 /* Shift  to 343 on COMMA                  */
#define _ac0315 0xffb50004 /* Reduce by 75 on COMMA                   */
#define _ac0316 0xffb40004 /* Reduce by 76 on COMMA                   */
#define _ac0317 0xffb30004 /* Reduce by 77 on COMMA                   */
#define _ac0318 0xffd3835d /* Reduce by 45 on tokens in set[21]       */
#define _ac0319 0xffd9835d /* Reduce by 39 on tokens in set[21]       */
#define _ac0320 841        /* Index of uncompressed state[320]        */
#define _ac0321 0x81590004 /* Shift  to 345 on COMMA                  */
#define _ac0322 0xfe9d8000 /* Reduce by 355 on tokens in set[0]       */
#define _ac0323 0xfe9c847c /* Reduce by 356 on tokens in set[28]      */
#define _ac0324 0xfe9a847c /* Reduce by 358 on tokens in set[28]      */
#define _ac0325 856        /* Index of uncompressed state[325]        */
#define _ac0326 861        /* Index of uncompressed state[326]        */
#define _ac0327 866        /* Index of uncompressed state[327]        */
#define _ac0328 0xfe4e8000 /* Reduce by 434 on tokens in set[0]       */
#define _ac0329 0xfe4484f7 /* Reduce by 444 on tokens in set[31]      */
#define _ac0330 0x81600141 /* Shift  to 352 on BEGIN                  */
#define _ac0331 0x81610141 /* Shift  to 353 on BEGIN                  */
#define _ac0332 0xffe88000 /* Reduce by 24 on tokens in set[0]        */
#define _ac0333 0xffd68334 /* Reduce by 42 on tokens in set[20]       */
#define _ac0334 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0335 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0336 877        /* Index of uncompressed state[336]        */
#define _ac0337 0xffb18520 /* Reduce by 79 on tokens in set[32]       */
#define _ac0338 906        /* Index of uncompressed state[338]        */
#define _ac0339 1339       /* Index of uncompressed state[339]        */
#define _ac0340 1368       /* Index of uncompressed state[340]        */
#define _ac0341 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0342 1397       /* Index of uncompressed state[342]        */
#define _ac0343 0x801d0002 /* Shift  to 29 on IDENTIFIER              */
#define _ac0344 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0345 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0346 0xfe9083af /* Reduce by 368 on tokens in set[23]      */
#define _ac0347 1426       /* Index of uncompressed state[347]        */
#define _ac0348 0xfe8d8549 /* Reduce by 371 on tokens in set[33]      */
#define _ac0349 0xfe298549 /* Reduce by 471 on tokens in set[33]      */
#define _ac0350 0xfe6583d8 /* Reduce by 411 on tokens in set[24]      */
#define _ac0351 1481       /* Index of uncompressed state[351]        */
#define _ac0352 1494       /* Index of uncompressed state[352]        */
#define _ac0353 0xfea68572 /* Reduce by 346 on tokens in set[34]      */
#define _ac0354 0x81520004 /* Shift  to 338 on COMMA                  */
#define _ac0355 0x81520004 /* Shift  to 338 on COMMA                  */
#define _ac0356 0xffb28520 /* Reduce by 78 on tokens in set[32]       */
#define _ac0357 0xffb08520 /* Reduce by 80 on tokens in set[32]       */
#define _ac0358 0xffaf8520 /* Reduce by 81 on tokens in set[32]       */
#define _ac0359 0xffae8520 /* Reduce by 82 on tokens in set[32]       */
#define _ac0360 1499       /* Index of uncompressed state[360]        */
#define _ac0361 1530       /* Index of uncompressed state[361]        */
#define _ac0362 0xffaa859b /* Reduce by 86 on tokens in set[35]       */
#define _ac0363 0xffa8859b /* Reduce by 88 on tokens in set[35]       */
#define _ac0364 0xffa7859b /* Reduce by 89 on tokens in set[35]       */
#define _ac0365 1561       /* Index of uncompressed state[365]        */
#define _ac0366 0xffa5859b /* Reduce by 91 on tokens in set[35]       */
#define _ac0367 0xffa4859b /* Reduce by 92 on tokens in set[35]       */
#define _ac0368 0xffa3859b /* Reduce by 93 on tokens in set[35]       */
#define _ac0369 0xffa2859b /* Reduce by 94 on tokens in set[35]       */
#define _ac0370 0xffa1859b /* Reduce by 95 on tokens in set[35]       */
#define _ac0371 0xffa0859b /* Reduce by 96 on tokens in set[35]       */
#define _ac0372 0xff9f859b /* Reduce by 97 on tokens in set[35]       */
#define _ac0373 0xff9e859b /* Reduce by 98 on tokens in set[35]       */
#define _ac0374 0xff9d859b /* Reduce by 99 on tokens in set[35]       */
#define _ac0375 0xff9c859b /* Reduce by 100 on tokens in set[35]      */
#define _ac0376 0xff9b859b /* Reduce by 101 on tokens in set[35]      */
#define _ac0377 0xff9a859b /* Reduce by 102 on tokens in set[35]      */
#define _ac0378 0xff99859b /* Reduce by 103 on tokens in set[35]      */
#define _ac0379 0xff5b859b /* Reduce by 165 on tokens in set[35]      */
#define _ac0380 0xff5a859b /* Reduce by 166 on tokens in set[35]      */
#define _ac0381 0xff59859b /* Reduce by 167 on tokens in set[35]      */
#define _ac0382 0xff58859b /* Reduce by 168 on tokens in set[35]      */
#define _ac0383 0xff57859b /* Reduce by 169 on tokens in set[35]      */
#define _ac0384 0xff56859b /* Reduce by 170 on tokens in set[35]      */
#define _ac0385 0xff55859b /* Reduce by 171 on tokens in set[35]      */
#define _ac0386 0xff54859b /* Reduce by 172 on tokens in set[35]      */
#define _ac0387 0xff53859b /* Reduce by 173 on tokens in set[35]      */
#define _ac0388 0xff52859b /* Reduce by 174 on tokens in set[35]      */
#define _ac0389 0xff51859b /* Reduce by 175 on tokens in set[35]      */
#define _ac0390 0xff50859b /* Reduce by 176 on tokens in set[35]      */
#define _ac0391 0xff4f859b /* Reduce by 177 on tokens in set[35]      */
#define _ac0392 0xff4e859b /* Reduce by 178 on tokens in set[35]      */
#define _ac0393 0xff4d859b /* Reduce by 179 on tokens in set[35]      */
#define _ac0394 0xff4c859b /* Reduce by 180 on tokens in set[35]      */
#define _ac0395 0xff4b859b /* Reduce by 181 on tokens in set[35]      */
#define _ac0396 0xff4a859b /* Reduce by 182 on tokens in set[35]      */
#define _ac0397 0xff49859b /* Reduce by 183 on tokens in set[35]      */
#define _ac0398 0xff48859b /* Reduce by 184 on tokens in set[35]      */
#define _ac0399 0xff47859b /* Reduce by 185 on tokens in set[35]      */
#define _ac0400 0xff46859b /* Reduce by 186 on tokens in set[35]      */
#define _ac0401 0xff45859b /* Reduce by 187 on tokens in set[35]      */
#define _ac0402 0xff44859b /* Reduce by 188 on tokens in set[35]      */
#define _ac0403 0xff43859b /* Reduce by 189 on tokens in set[35]      */
#define _ac0404 0xff42859b /* Reduce by 190 on tokens in set[35]      */
#define _ac0405 0xff41859b /* Reduce by 191 on tokens in set[35]      */
#define _ac0406 0xff40859b /* Reduce by 192 on tokens in set[35]      */
#define _ac0407 0xff3f859b /* Reduce by 193 on tokens in set[35]      */
#define _ac0408 0xff3e859b /* Reduce by 194 on tokens in set[35]      */
#define _ac0409 0xff3d859b /* Reduce by 195 on tokens in set[35]      */
#define _ac0410 0xff3c859b /* Reduce by 196 on tokens in set[35]      */
#define _ac0411 0xff3b859b /* Reduce by 197 on tokens in set[35]      */
#define _ac0412 0xff3a859b /* Reduce by 198 on tokens in set[35]      */
#define _ac0413 0xff39859b /* Reduce by 199 on tokens in set[35]      */
#define _ac0414 0xff38859b /* Reduce by 200 on tokens in set[35]      */
#define _ac0415 0xff37859b /* Reduce by 201 on tokens in set[35]      */
#define _ac0416 0xff36859b /* Reduce by 202 on tokens in set[35]      */
#define _ac0417 0xff35859b /* Reduce by 203 on tokens in set[35]      */
#define _ac0418 0xff34859b /* Reduce by 204 on tokens in set[35]      */
#define _ac0419 0xff33859b /* Reduce by 205 on tokens in set[35]      */
#define _ac0420 0xff32859b /* Reduce by 206 on tokens in set[35]      */
#define _ac0421 0xff31859b /* Reduce by 207 on tokens in set[35]      */
#define _ac0422 0xff30859b /* Reduce by 208 on tokens in set[35]      */
#define _ac0423 0xff2f859b /* Reduce by 209 on tokens in set[35]      */
#define _ac0424 0xff2e859b /* Reduce by 210 on tokens in set[35]      */
#define _ac0425 0xff2d859b /* Reduce by 211 on tokens in set[35]      */
#define _ac0426 0xff2c859b /* Reduce by 212 on tokens in set[35]      */
#define _ac0427 0xff2b859b /* Reduce by 213 on tokens in set[35]      */
#define _ac0428 0xff2a859b /* Reduce by 214 on tokens in set[35]      */
#define _ac0429 0xff29859b /* Reduce by 215 on tokens in set[35]      */
#define _ac0430 0xff28859b /* Reduce by 216 on tokens in set[35]      */
#define _ac0431 0xff27859b /* Reduce by 217 on tokens in set[35]      */
#define _ac0432 0xff26859b /* Reduce by 218 on tokens in set[35]      */
#define _ac0433 0xff25859b /* Reduce by 219 on tokens in set[35]      */
#define _ac0434 0xff24859b /* Reduce by 220 on tokens in set[35]      */
#define _ac0435 0xff23859b /* Reduce by 221 on tokens in set[35]      */
#define _ac0436 0xff22859b /* Reduce by 222 on tokens in set[35]      */
#define _ac0437 0xff21859b /* Reduce by 223 on tokens in set[35]      */
#define _ac0438 0xff20859b /* Reduce by 224 on tokens in set[35]      */
#define _ac0439 0xff1f859b /* Reduce by 225 on tokens in set[35]      */
#define _ac0440 0xff1e859b /* Reduce by 226 on tokens in set[35]      */
#define _ac0441 0xff1d859b /* Reduce by 227 on tokens in set[35]      */
#define _ac0442 0xff1c859b /* Reduce by 228 on tokens in set[35]      */
#define _ac0443 0xff1b859b /* Reduce by 229 on tokens in set[35]      */
#define _ac0444 0xff1a859b /* Reduce by 230 on tokens in set[35]      */
#define _ac0445 0xff19859b /* Reduce by 231 on tokens in set[35]      */
#define _ac0446 0xff18859b /* Reduce by 232 on tokens in set[35]      */
#define _ac0447 0xff17859b /* Reduce by 233 on tokens in set[35]      */
#define _ac0448 0xff16859b /* Reduce by 234 on tokens in set[35]      */
#define _ac0449 0xff15859b /* Reduce by 235 on tokens in set[35]      */
#define _ac0450 0xff14859b /* Reduce by 236 on tokens in set[35]      */
#define _ac0451 0xff13859b /* Reduce by 237 on tokens in set[35]      */
#define _ac0452 0xff12859b /* Reduce by 238 on tokens in set[35]      */
#define _ac0453 0xff11859b /* Reduce by 239 on tokens in set[35]      */
#define _ac0454 0xff10859b /* Reduce by 240 on tokens in set[35]      */
#define _ac0455 0xff0f859b /* Reduce by 241 on tokens in set[35]      */
#define _ac0456 0xff0e859b /* Reduce by 242 on tokens in set[35]      */
#define _ac0457 0xff0d859b /* Reduce by 243 on tokens in set[35]      */
#define _ac0458 0xff0c859b /* Reduce by 244 on tokens in set[35]      */
#define _ac0459 0xff0b859b /* Reduce by 245 on tokens in set[35]      */
#define _ac0460 0xff0a859b /* Reduce by 246 on tokens in set[35]      */
#define _ac0461 0xff09859b /* Reduce by 247 on tokens in set[35]      */
#define _ac0462 0xff08859b /* Reduce by 248 on tokens in set[35]      */
#define _ac0463 0xff07859b /* Reduce by 249 on tokens in set[35]      */
#define _ac0464 0xff06859b /* Reduce by 250 on tokens in set[35]      */
#define _ac0465 0xff05859b /* Reduce by 251 on tokens in set[35]      */
#define _ac0466 0xff04859b /* Reduce by 252 on tokens in set[35]      */
#define _ac0467 0xff03859b /* Reduce by 253 on tokens in set[35]      */
#define _ac0468 0xff02859b /* Reduce by 254 on tokens in set[35]      */
#define _ac0469 0xff01859b /* Reduce by 255 on tokens in set[35]      */
#define _ac0470 0xff00859b /* Reduce by 256 on tokens in set[35]      */
#define _ac0471 0xfeff859b /* Reduce by 257 on tokens in set[35]      */
#define _ac0472 0xfefe859b /* Reduce by 258 on tokens in set[35]      */
#define _ac0473 0xfefd859b /* Reduce by 259 on tokens in set[35]      */
#define _ac0474 0xfefc859b /* Reduce by 260 on tokens in set[35]      */
#define _ac0475 0xfefb859b /* Reduce by 261 on tokens in set[35]      */
#define _ac0476 0xfefa859b /* Reduce by 262 on tokens in set[35]      */
#define _ac0477 0xfef9859b /* Reduce by 263 on tokens in set[35]      */
#define _ac0478 0xfef8859b /* Reduce by 264 on tokens in set[35]      */
#define _ac0479 0xfef7859b /* Reduce by 265 on tokens in set[35]      */
#define _ac0480 0xfef6859b /* Reduce by 266 on tokens in set[35]      */
#define _ac0481 0xfef5859b /* Reduce by 267 on tokens in set[35]      */
#define _ac0482 0xfef4859b /* Reduce by 268 on tokens in set[35]      */
#define _ac0483 0xfef3859b /* Reduce by 269 on tokens in set[35]      */
#define _ac0484 0xfef2859b /* Reduce by 270 on tokens in set[35]      */
#define _ac0485 0xfef1859b /* Reduce by 271 on tokens in set[35]      */
#define _ac0486 0xfef0859b /* Reduce by 272 on tokens in set[35]      */
#define _ac0487 0xfeef859b /* Reduce by 273 on tokens in set[35]      */
#define _ac0488 0xfeee859b /* Reduce by 274 on tokens in set[35]      */
#define _ac0489 0xfeed859b /* Reduce by 275 on tokens in set[35]      */
#define _ac0490 0xfeec859b /* Reduce by 276 on tokens in set[35]      */
#define _ac0491 0xfeeb859b /* Reduce by 277 on tokens in set[35]      */
#define _ac0492 0xfeea859b /* Reduce by 278 on tokens in set[35]      */
#define _ac0493 0xfee9859b /* Reduce by 279 on tokens in set[35]      */
#define _ac0494 0xfee8859b /* Reduce by 280 on tokens in set[35]      */
#define _ac0495 0xfee7859b /* Reduce by 281 on tokens in set[35]      */
#define _ac0496 0xfee6859b /* Reduce by 282 on tokens in set[35]      */
#define _ac0497 0xfee5859b /* Reduce by 283 on tokens in set[35]      */
#define _ac0498 0xfee4859b /* Reduce by 284 on tokens in set[35]      */
#define _ac0499 0xfee3859b /* Reduce by 285 on tokens in set[35]      */
#define _ac0500 0xfee2859b /* Reduce by 286 on tokens in set[35]      */
#define _ac0501 0xfee1859b /* Reduce by 287 on tokens in set[35]      */
#define _ac0502 0xfee0859b /* Reduce by 288 on tokens in set[35]      */
#define _ac0503 0xfedf859b /* Reduce by 289 on tokens in set[35]      */
#define _ac0504 0xfede859b /* Reduce by 290 on tokens in set[35]      */
#define _ac0505 0xfedd859b /* Reduce by 291 on tokens in set[35]      */
#define _ac0506 0xfedc859b /* Reduce by 292 on tokens in set[35]      */
#define _ac0507 0xfedb859b /* Reduce by 293 on tokens in set[35]      */
#define _ac0508 0xfeda859b /* Reduce by 294 on tokens in set[35]      */
#define _ac0509 0xfed9859b /* Reduce by 295 on tokens in set[35]      */
#define _ac0510 0xfed8859b /* Reduce by 296 on tokens in set[35]      */
#define _ac0511 0xfed7859b /* Reduce by 297 on tokens in set[35]      */
#define _ac0512 0xfed6859b /* Reduce by 298 on tokens in set[35]      */
#define _ac0513 0xfed5859b /* Reduce by 299 on tokens in set[35]      */
#define _ac0514 0xfed4859b /* Reduce by 300 on tokens in set[35]      */
#define _ac0515 0xfed3859b /* Reduce by 301 on tokens in set[35]      */
#define _ac0516 0xfed2859b /* Reduce by 302 on tokens in set[35]      */
#define _ac0517 0xfed1859b /* Reduce by 303 on tokens in set[35]      */
#define _ac0518 0xfed0859b /* Reduce by 304 on tokens in set[35]      */
#define _ac0519 0xfecf859b /* Reduce by 305 on tokens in set[35]      */
#define _ac0520 0xfece859b /* Reduce by 306 on tokens in set[35]      */
#define _ac0521 0xfecd859b /* Reduce by 307 on tokens in set[35]      */
#define _ac0522 0xfecc859b /* Reduce by 308 on tokens in set[35]      */
#define _ac0523 0xfecb859b /* Reduce by 309 on tokens in set[35]      */
#define _ac0524 0xfeca859b /* Reduce by 310 on tokens in set[35]      */
#define _ac0525 0xfec9859b /* Reduce by 311 on tokens in set[35]      */
#define _ac0526 0xfec8859b /* Reduce by 312 on tokens in set[35]      */
#define _ac0527 0xfec7859b /* Reduce by 313 on tokens in set[35]      */
#define _ac0528 0xfec6859b /* Reduce by 314 on tokens in set[35]      */
#define _ac0529 0xfec5859b /* Reduce by 315 on tokens in set[35]      */
#define _ac0530 0xfec4859b /* Reduce by 316 on tokens in set[35]      */
#define _ac0531 0xfec3859b /* Reduce by 317 on tokens in set[35]      */
#define _ac0532 0xfec2859b /* Reduce by 318 on tokens in set[35]      */
#define _ac0533 0xfec1859b /* Reduce by 319 on tokens in set[35]      */
#define _ac0534 0xfec0859b /* Reduce by 320 on tokens in set[35]      */
#define _ac0535 0xfebf859b /* Reduce by 321 on tokens in set[35]      */
#define _ac0536 0xfebe859b /* Reduce by 322 on tokens in set[35]      */
#define _ac0537 0xfebd859b /* Reduce by 323 on tokens in set[35]      */
#define _ac0538 0xfebc859b /* Reduce by 324 on tokens in set[35]      */
#define _ac0539 0xfebb859b /* Reduce by 325 on tokens in set[35]      */
#define _ac0540 0xfeba859b /* Reduce by 326 on tokens in set[35]      */
#define _ac0541 0xfeb9859b /* Reduce by 327 on tokens in set[35]      */
#define _ac0542 0xfeb8859b /* Reduce by 328 on tokens in set[35]      */
#define _ac0543 0xfeb7859b /* Reduce by 329 on tokens in set[35]      */
#define _ac0544 0xfeb6859b /* Reduce by 330 on tokens in set[35]      */
#define _ac0545 0xfeb5859b /* Reduce by 331 on tokens in set[35]      */
#define _ac0546 0xfeb4859b /* Reduce by 332 on tokens in set[35]      */
#define _ac0547 0xfeb3859b /* Reduce by 333 on tokens in set[35]      */
#define _ac0548 0xfeb2859b /* Reduce by 334 on tokens in set[35]      */
#define _ac0549 0xfeb1859b /* Reduce by 335 on tokens in set[35]      */
#define _ac0550 0xfeb0859b /* Reduce by 336 on tokens in set[35]      */
#define _ac0551 0xfeaf859b /* Reduce by 337 on tokens in set[35]      */
#define _ac0552 0xfeae859b /* Reduce by 338 on tokens in set[35]      */
#define _ac0553 0x81520004 /* Shift  to 338 on COMMA                  */
#define _ac0554 0x82600004 /* Shift  to 608 on COMMA                  */
#define _ac0555 0x82610004 /* Shift  to 609 on COMMA                  */
#define _ac0556 0xfe2d85c4 /* Reduce by 467 on tokens in set[36]      */
#define _ac0557 0xfe8c85ed /* Reduce by 372 on tokens in set[37]      */
#define _ac0558 0xfe8b85ed /* Reduce by 373 on tokens in set[37]      */
#define _ac0559 0xfe8a85ed /* Reduce by 374 on tokens in set[37]      */
#define _ac0560 0xfe8985ed /* Reduce by 375 on tokens in set[37]      */
#define _ac0561 0xfe8885ed /* Reduce by 376 on tokens in set[37]      */
#define _ac0562 1950       /* Index of uncompressed state[562]        */
#define _ac0563 0xfe858616 /* Reduce by 379 on tokens in set[38]      */
#define _ac0564 0xfe848616 /* Reduce by 380 on tokens in set[38]      */
#define _ac0565 0xfe838616 /* Reduce by 381 on tokens in set[38]      */
#define _ac0566 0xfe828616 /* Reduce by 382 on tokens in set[38]      */
#define _ac0567 0xfe818616 /* Reduce by 383 on tokens in set[38]      */
#define _ac0568 0xfe808616 /* Reduce by 384 on tokens in set[38]      */
#define _ac0569 0xfe7f8616 /* Reduce by 385 on tokens in set[38]      */
#define _ac0570 0xfe7e8616 /* Reduce by 386 on tokens in set[38]      */
#define _ac0571 0xfe7d8616 /* Reduce by 387 on tokens in set[38]      */
#define _ac0572 0xfe7c8616 /* Reduce by 388 on tokens in set[38]      */
#define _ac0573 0xfe7b8616 /* Reduce by 389 on tokens in set[38]      */
#define _ac0574 0xfe7a8616 /* Reduce by 390 on tokens in set[38]      */
#define _ac0575 0xfe798616 /* Reduce by 391 on tokens in set[38]      */
#define _ac0576 0xfe788616 /* Reduce by 392 on tokens in set[38]      */
#define _ac0577 0xfe778616 /* Reduce by 393 on tokens in set[38]      */
#define _ac0578 0xfe768616 /* Reduce by 394 on tokens in set[38]      */
#define _ac0579 0xfe758616 /* Reduce by 395 on tokens in set[38]      */
#define _ac0580 0xfe748616 /* Reduce by 396 on tokens in set[38]      */
#define _ac0581 0xfe738616 /* Reduce by 397 on tokens in set[38]      */
#define _ac0582 0xfe728616 /* Reduce by 398 on tokens in set[38]      */
#define _ac0583 0xfe718616 /* Reduce by 399 on tokens in set[38]      */
#define _ac0584 0xfe708616 /* Reduce by 400 on tokens in set[38]      */
#define _ac0585 0xfe6f8616 /* Reduce by 401 on tokens in set[38]      */
#define _ac0586 0xfe6e8616 /* Reduce by 402 on tokens in set[38]      */
#define _ac0587 1963       /* Index of uncompressed state[587]        */
#define _ac0588 1972       /* Index of uncompressed state[588]        */
#define _ac0589 0xfe62863f /* Reduce by 414 on tokens in set[39]      */
#define _ac0590 0xfe60863f /* Reduce by 416 on tokens in set[39]      */
#define _ac0591 0xfe5f863f /* Reduce by 417 on tokens in set[39]      */
#define _ac0592 0xfe5e863f /* Reduce by 418 on tokens in set[39]      */
#define _ac0593 0xfe5d863f /* Reduce by 419 on tokens in set[39]      */
#define _ac0594 0xfe5c863f /* Reduce by 420 on tokens in set[39]      */
#define _ac0595 0xfe5b863f /* Reduce by 421 on tokens in set[39]      */
#define _ac0596 0x82640142 /* Shift  to 612 on END                    */
#define _ac0597 1983       /* Index of uncompressed state[597]        */
#define _ac0598 1988       /* Index of uncompressed state[598]        */
#define _ac0599 0xfe3e8668 /* Reduce by 450 on tokens in set[40]      */
#define _ac0600 _ac0062    /* Saved 18 bytes                          */
#define _ac0601 1993       /* Index of uncompressed state[601]        */
#define _ac0602 2010       /* Index of uncompressed state[602]        */
#define _ac0603 2039       /* Index of uncompressed state[603]        */
#define _ac0604 2068       /* Index of uncompressed state[604]        */
#define _ac0605 _ac0090    /* Saved 78 bytes                          */
#define _ac0606 0xffa6859b /* Reduce by 90 on tokens in set[35]       */
#define _ac0607 2459       /* Index of uncompressed state[607]        */
#define _ac0608 0x80350003 /* Shift  to 53 on STRING                  */
#define _ac0609 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0610 2488       /* Index of uncompressed state[610]        */
#define _ac0611 _ac0351    /* Saved 26 bytes                          */
#define _ac0612 0xfe4284f7 /* Reduce by 446 on tokens in set[31]      */
#define _ac0613 0xfe3f8668 /* Reduce by 449 on tokens in set[40]      */
#define _ac0614 2535       /* Index of uncompressed state[614]        */
#define _ac0615 0xfeaa8401 /* Reduce by 342 on tokens in set[25]      */
#define _ac0616 0xfea78572 /* Reduce by 345 on tokens in set[34]      */
#define _ac0617 0x82760004 /* Shift  to 630 on COMMA                  */
#define _ac0618 0xfea30004 /* Reduce by 349 on COMMA                  */
#define _ac0619 0xfea20004 /* Reduce by 350 on COMMA                  */
#define _ac0620 0xfea10004 /* Reduce by 351 on COMMA                  */
#define _ac0621 0xfea00004 /* Reduce by 352 on COMMA                  */
#define _ac0622 0xfe9f0004 /* Reduce by 353 on COMMA                  */
#define _ac0623 0xfe9e0004 /* Reduce by 354 on COMMA                  */
#define _ac0624 0xffab859b /* Reduce by 85 on tokens in set[35]       */
#define _ac0625 0xffa9859b /* Reduce by 87 on tokens in set[35]       */
#define _ac0626 0x81520004 /* Shift  to 338 on COMMA                  */
#define _ac0627 0x82780004 /* Shift  to 632 on COMMA                  */
#define _ac0628 0xfe868616 /* Reduce by 378 on tokens in set[38]      */
#define _ac0629 0xfe61863f /* Reduce by 415 on tokens in set[39]      */
#define _ac0630 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0631 2548       /* Index of uncompressed state[631]        */
#define _ac0632 0x801c0001 /* Shift  to 28 on NUMBER                  */
#define _ac0633 0xfea58572 /* Reduce by 347 on tokens in set[34]      */
#define _ac0634 0xffd5823e /* Reduce by 43 on tokens in set[14]       */

static const unsigned int actionCode[635] = {
   _ac0000,_ac0001,_ac0002,_ac0003,_ac0004,_ac0005,_ac0006,_ac0007,_ac0008,_ac0009
  ,_ac0010,_ac0011,_ac0012,_ac0013,_ac0014,_ac0015,_ac0016,_ac0017,_ac0018,_ac0019
  ,_ac0020,_ac0021,_ac0022,_ac0023,_ac0024,_ac0025,_ac0026,_ac0027,_ac0028,_ac0029
  ,_ac0030,_ac0031,_ac0032,_ac0033,_ac0034,_ac0035,_ac0036,_ac0037,_ac0038,_ac0039
  ,_ac0040,_ac0041,_ac0042,_ac0043,_ac0044,_ac0045,_ac0046,_ac0047,_ac0048,_ac0049
  ,_ac0050,_ac0051,_ac0052,_ac0053,_ac0054,_ac0055,_ac0056,_ac0057,_ac0058,_ac0059
  ,_ac0060,_ac0061,_ac0062,_ac0063,_ac0064,_ac0065,_ac0066,_ac0067,_ac0068,_ac0069
  ,_ac0070,_ac0071,_ac0072,_ac0073,_ac0074,_ac0075,_ac0076,_ac0077,_ac0078,_ac0079
  ,_ac0080,_ac0081,_ac0082,_ac0083,_ac0084,_ac0085,_ac0086,_ac0087,_ac0088,_ac0089
  ,_ac0090,_ac0091,_ac0092,_ac0093,_ac0094,_ac0095,_ac0096,_ac0097,_ac0098,_ac0099
  ,_ac0100,_ac0101,_ac0102,_ac0103,_ac0104,_ac0105,_ac0106,_ac0107,_ac0108,_ac0109
  ,_ac0110,_ac0111,_ac0112,_ac0113,_ac0114,_ac0115,_ac0116,_ac0117,_ac0118,_ac0119
  ,_ac0120,_ac0121,_ac0122,_ac0123,_ac0124,_ac0125,_ac0126,_ac0127,_ac0128,_ac0129
  ,_ac0130,_ac0131,_ac0132,_ac0133,_ac0134,_ac0135,_ac0136,_ac0137,_ac0138,_ac0139
  ,_ac0140,_ac0141,_ac0142,_ac0143,_ac0144,_ac0145,_ac0146,_ac0147,_ac0148,_ac0149
  ,_ac0150,_ac0151,_ac0152,_ac0153,_ac0154,_ac0155,_ac0156,_ac0157,_ac0158,_ac0159
  ,_ac0160,_ac0161,_ac0162,_ac0163,_ac0164,_ac0165,_ac0166,_ac0167,_ac0168,_ac0169
  ,_ac0170,_ac0171,_ac0172,_ac0173,_ac0174,_ac0175,_ac0176,_ac0177,_ac0178,_ac0179
  ,_ac0180,_ac0181,_ac0182,_ac0183,_ac0184,_ac0185,_ac0186,_ac0187,_ac0188,_ac0189
  ,_ac0190,_ac0191,_ac0192,_ac0193,_ac0194,_ac0195,_ac0196,_ac0197,_ac0198,_ac0199
  ,_ac0200,_ac0201,_ac0202,_ac0203,_ac0204,_ac0205,_ac0206,_ac0207,_ac0208,_ac0209
  ,_ac0210,_ac0211,_ac0212,_ac0213,_ac0214,_ac0215,_ac0216,_ac0217,_ac0218,_ac0219
  ,_ac0220,_ac0221,_ac0222,_ac0223,_ac0224,_ac0225,_ac0226,_ac0227,_ac0228,_ac0229
  ,_ac0230,_ac0231,_ac0232,_ac0233,_ac0234,_ac0235,_ac0236,_ac0237,_ac0238,_ac0239
  ,_ac0240,_ac0241,_ac0242,_ac0243,_ac0244,_ac0245,_ac0246,_ac0247,_ac0248,_ac0249
  ,_ac0250,_ac0251,_ac0252,_ac0253,_ac0254,_ac0255,_ac0256,_ac0257,_ac0258,_ac0259
  ,_ac0260,_ac0261,_ac0262,_ac0263,_ac0264,_ac0265,_ac0266,_ac0267,_ac0268,_ac0269
  ,_ac0270,_ac0271,_ac0272,_ac0273,_ac0274,_ac0275,_ac0276,_ac0277,_ac0278,_ac0279
  ,_ac0280,_ac0281,_ac0282,_ac0283,_ac0284,_ac0285,_ac0286,_ac0287,_ac0288,_ac0289
  ,_ac0290,_ac0291,_ac0292,_ac0293,_ac0294,_ac0295,_ac0296,_ac0297,_ac0298,_ac0299
  ,_ac0300,_ac0301,_ac0302,_ac0303,_ac0304,_ac0305,_ac0306,_ac0307,_ac0308,_ac0309
  ,_ac0310,_ac0311,_ac0312,_ac0313,_ac0314,_ac0315,_ac0316,_ac0317,_ac0318,_ac0319
  ,_ac0320,_ac0321,_ac0322,_ac0323,_ac0324,_ac0325,_ac0326,_ac0327,_ac0328,_ac0329
  ,_ac0330,_ac0331,_ac0332,_ac0333,_ac0334,_ac0335,_ac0336,_ac0337,_ac0338,_ac0339
  ,_ac0340,_ac0341,_ac0342,_ac0343,_ac0344,_ac0345,_ac0346,_ac0347,_ac0348,_ac0349
  ,_ac0350,_ac0351,_ac0352,_ac0353,_ac0354,_ac0355,_ac0356,_ac0357,_ac0358,_ac0359
  ,_ac0360,_ac0361,_ac0362,_ac0363,_ac0364,_ac0365,_ac0366,_ac0367,_ac0368,_ac0369
  ,_ac0370,_ac0371,_ac0372,_ac0373,_ac0374,_ac0375,_ac0376,_ac0377,_ac0378,_ac0379
  ,_ac0380,_ac0381,_ac0382,_ac0383,_ac0384,_ac0385,_ac0386,_ac0387,_ac0388,_ac0389
  ,_ac0390,_ac0391,_ac0392,_ac0393,_ac0394,_ac0395,_ac0396,_ac0397,_ac0398,_ac0399
  ,_ac0400,_ac0401,_ac0402,_ac0403,_ac0404,_ac0405,_ac0406,_ac0407,_ac0408,_ac0409
  ,_ac0410,_ac0411,_ac0412,_ac0413,_ac0414,_ac0415,_ac0416,_ac0417,_ac0418,_ac0419
  ,_ac0420,_ac0421,_ac0422,_ac0423,_ac0424,_ac0425,_ac0426,_ac0427,_ac0428,_ac0429
  ,_ac0430,_ac0431,_ac0432,_ac0433,_ac0434,_ac0435,_ac0436,_ac0437,_ac0438,_ac0439
  ,_ac0440,_ac0441,_ac0442,_ac0443,_ac0444,_ac0445,_ac0446,_ac0447,_ac0448,_ac0449
  ,_ac0450,_ac0451,_ac0452,_ac0453,_ac0454,_ac0455,_ac0456,_ac0457,_ac0458,_ac0459
  ,_ac0460,_ac0461,_ac0462,_ac0463,_ac0464,_ac0465,_ac0466,_ac0467,_ac0468,_ac0469
  ,_ac0470,_ac0471,_ac0472,_ac0473,_ac0474,_ac0475,_ac0476,_ac0477,_ac0478,_ac0479
  ,_ac0480,_ac0481,_ac0482,_ac0483,_ac0484,_ac0485,_ac0486,_ac0487,_ac0488,_ac0489
  ,_ac0490,_ac0491,_ac0492,_ac0493,_ac0494,_ac0495,_ac0496,_ac0497,_ac0498,_ac0499
  ,_ac0500,_ac0501,_ac0502,_ac0503,_ac0504,_ac0505,_ac0506,_ac0507,_ac0508,_ac0509
  ,_ac0510,_ac0511,_ac0512,_ac0513,_ac0514,_ac0515,_ac0516,_ac0517,_ac0518,_ac0519
  ,_ac0520,_ac0521,_ac0522,_ac0523,_ac0524,_ac0525,_ac0526,_ac0527,_ac0528,_ac0529
  ,_ac0530,_ac0531,_ac0532,_ac0533,_ac0534,_ac0535,_ac0536,_ac0537,_ac0538,_ac0539
  ,_ac0540,_ac0541,_ac0542,_ac0543,_ac0544,_ac0545,_ac0546,_ac0547,_ac0548,_ac0549
  ,_ac0550,_ac0551,_ac0552,_ac0553,_ac0554,_ac0555,_ac0556,_ac0557,_ac0558,_ac0559
  ,_ac0560,_ac0561,_ac0562,_ac0563,_ac0564,_ac0565,_ac0566,_ac0567,_ac0568,_ac0569
  ,_ac0570,_ac0571,_ac0572,_ac0573,_ac0574,_ac0575,_ac0576,_ac0577,_ac0578,_ac0579
  ,_ac0580,_ac0581,_ac0582,_ac0583,_ac0584,_ac0585,_ac0586,_ac0587,_ac0588,_ac0589
  ,_ac0590,_ac0591,_ac0592,_ac0593,_ac0594,_ac0595,_ac0596,_ac0597,_ac0598,_ac0599
  ,_ac0600,_ac0601,_ac0602,_ac0603,_ac0604,_ac0605,_ac0606,_ac0607,_ac0608,_ac0609
  ,_ac0610,_ac0611,_ac0612,_ac0613,_ac0614,_ac0615,_ac0616,_ac0617,_ac0618,_ac0619
  ,_ac0620,_ac0621,_ac0622,_ac0623,_ac0624,_ac0625,_ac0626,_ac0627,_ac0628,_ac0629
  ,_ac0630,_ac0631,_ac0632,_ac0633,_ac0634
}; // Size of table:2.540(x86)/2.544(x64) bytes.

/******************************************************************************\
* The successor matrix is used when the parser has reduced by prod A -> alfa   *
* The number of elements popped from the stack is the length of the alfa, L.   *
* and the state is taken from stacktop. The nonterminal A is leftside of the   *
* reduce production                                                            *
* Used by LRParser to find newstate = successor(state,A).                      *
* For each relevant state the array stateSuccessors contains a list of numbers *
*                                                                              *
*   Item list for state NNNN with 3 items   3, 5,3 , 6,2, 8,5                  *
*   Number of pairs in list ----------------+  | |                             *
*   NonTerminal A------------------------------+ |                             *
*   Goto this state------------------------------+                             *
*                                                                              *
* The array successorsIndex contains an index for each of these states         *
* referering to the first number belonging to the state (as actionCode)        *
* or 0 if a state has no items of the form B -> beta . A gamma                 *
\******************************************************************************/
static const TableType stateSuccessors[] = {
  /* successors state[0], Index=0         */   24, 329,   1, 330,   2, 331,   3, 332,   4, 333,   5
                                                 , 334,   6, 335,   7, 336,   8, 337,   9, 338,  10
                                                 , 339,  11, 340,  12, 341,  13, 342,  14, 343,  15
                                                 , 344,  16, 345,  17, 346,  18, 347,  19, 348,  20
                                                 , 349,  21, 352,  27, 365,  24, 418,  26
  /* successors state[2], Index=49        */ , 22, 331,  30, 332,   4, 333,   5, 334,   6, 335,   7
                                                 , 336,   8, 337,   9, 338,  10, 339,  11, 340,  12
                                                 , 341,  13, 342,  14, 343,  15, 344,  16, 345,  17
                                                 , 346,  18, 347,  19, 348,  20, 349,  21, 352,  27
                                                 , 365,  24, 418,  26
  /* successors state[21], Index=94       */ ,  2, 352,  33, 411,  37
  /* successors state[23], Index=99       */ ,  1, 350,  46
  /* successors state[25], Index=102      */ ,  4, 351,  52, 352,  51, 365,  50, 424,  49
  /* successors state[31], Index=111      */ ,  1, 350,  54
  /* successors state[32], Index=114      */ ,  1, 350,  55
  /* successors state[33], Index=117      */ ,  1, 350,  56
  /* successors state[34], Index=120      */ ,  1, 350,  57
  /* successors state[35], Index=123      */ ,  2, 353,  58, 365,  59
  /* successors state[36], Index=128      */ ,  1, 350,  60
  /* successors state[37], Index=131      */ ,  1, 350,  61
  /* successors state[39], Index=134      */ ,  1, 350,  63
  /* successors state[40], Index=137      */ ,  1, 350,  64
  /* successors state[41], Index=140      */ ,  1, 350,  65
  /* successors state[45], Index=143      */ ,  1, 350,  67
  /* successors state[46], Index=146      */ ,  1, 402,  68
  /* successors state[47], Index=149      */ ,  1, 350,  76
  /* successors state[48], Index=152      */ ,  4, 351,  78, 352,  80, 443,  77, 445,  79
  /* successors state[54], Index=161      */ ,  2, 351,  83, 402,  68
  /* successors state[55], Index=166      */ ,  2, 351,  84, 402,  68
  /* successors state[56], Index=171      */ ,  2, 351,  85, 402,  68
  /* successors state[57], Index=176      */ ,  3, 353,  86, 365,  59, 402,  68
  /* successors state[58], Index=183      */ ,  2, 356,  87, 360,  88
  /* successors state[60], Index=188      */ ,  3, 365,  96, 402,  68, 408,  95
  /* successors state[61], Index=195      */ ,  2, 402,  68, 412,  97
  /* successors state[62], Index=200      */ ,  6, 351,  52, 352,  51, 365,  50, 422,  99, 423, 100
                                                 , 424, 101
  /* successors state[64], Index=213      */ ,  2, 351, 105, 402,  68
  /* successors state[65], Index=218      */ ,  3, 402,  68, 434, 106, 436, 107
  /* successors state[66], Index=225      */ ,  3, 365, 117, 430, 116, 444, 115
  /* successors state[69], Index=232      */ ,  3, 352, 121, 431, 119, 432, 120
  /* successors state[81], Index=239      */ ,  4, 351,  52, 352,  51, 365,  50, 424, 124
  /* successors state[82], Index=248      */ ,  6, 351,  52, 352,  51, 365,  50, 424, 127, 437, 125
                                                 , 438, 126
  /* successors state[86], Index=261      */ ,  2, 354, 128, 357, 129
  /* successors state[87], Index=266      */ ,  1, 360, 135
  /* successors state[89], Index=269      */ ,  4, 358, 136, 366, 137, 367, 138, 368, 139
  /* successors state[90], Index=278      */ ,  3, 361, 174, 363, 175, 364, 176
  /* successors state[91], Index=285      */ ,  1, 351, 196
  /* successors state[92], Index=288      */ ,  1, 352, 197
  /* successors state[93], Index=291      */ ,  3, 359, 200, 362, 198, 365, 199
  /* successors state[94], Index=298      */ ,  1, 365, 201
  /* successors state[98], Index=301      */ ,  4, 413, 204, 414, 205, 415, 206, 416, 207
  /* successors state[99], Index=310      */ ,  5, 351,  52, 352,  51, 365,  50, 423, 211, 424, 101
  /* successors state[102], Index=321     */ ,  4, 351,  52, 352,  51, 365,  50, 424, 212
  /* successors state[103], Index=330     */ ,  6, 351,  52, 352,  51, 365,  50, 424, 215, 425, 213
                                                 , 426, 214
  /* successors state[104], Index=343     */ ,  2, 365, 117, 430, 216
  /* successors state[106], Index=348     */ ,  1, 436, 218
  /* successors state[108], Index=351     */ ,  6, 351,  52, 352,  51, 365,  50, 424, 127, 437, 219
                                                 , 438, 126
  /* successors state[109], Index=364     */ ,  6, 351,  52, 352,  51, 365,  50, 424, 127, 437, 220
                                                 , 438, 126
  /* successors state[110], Index=377     */ ,  5, 351,  52, 352,  51, 365,  50, 424, 127, 438, 221
  /* successors state[111], Index=388     */ ,  5, 351,  52, 352,  51, 365,  50, 424, 127, 438, 222
  /* successors state[112], Index=399     */ ,  5, 351,  52, 352,  51, 365,  50, 424, 127, 438, 223
  /* successors state[113], Index=410     */ ,  5, 351,  52, 352,  51, 365,  50, 424, 127, 438, 224
  /* successors state[114], Index=421     */ ,  5, 351,  52, 352,  51, 365,  50, 424, 127, 438, 225
  /* successors state[118], Index=432     */ ,  5, 351, 232, 352, 231, 382, 230, 403, 228, 404, 229
  /* successors state[119], Index=443     */ ,  2, 352, 121, 432, 234
  /* successors state[121], Index=448     */ ,  1, 351, 235
  /* successors state[122], Index=451     */ ,  2, 351, 237, 433, 236
  /* successors state[123], Index=456     */ ,  1, 352, 238
  /* successors state[128], Index=459     */ ,  1, 357, 243
  /* successors state[130], Index=462     */ ,  4, 358, 244, 366, 137, 367, 138, 368, 139
  /* successors state[131], Index=471     */ ,  1, 351, 245
  /* successors state[132], Index=474     */ ,  1, 352, 246
  /* successors state[133], Index=477     */ ,  2, 359, 247, 365, 248
  /* successors state[134], Index=482     */ , 13, 355, 249, 369, 250, 370, 251, 371, 252, 372, 253
                                                 , 373, 254, 374, 255, 375, 256, 376, 257, 377, 258
                                                 , 378, 259, 379, 260, 381, 264
  /* successors state[202], Index=509     */ ,  2, 409, 278, 410, 279
  /* successors state[203], Index=514     */ ,  1, 365, 282
  /* successors state[204], Index=517     */ ,  3, 414, 284, 415, 206, 416, 207
  /* successors state[208], Index=524     */ ,  1, 351, 285
  /* successors state[209], Index=527     */ ,  1, 351, 286
  /* successors state[213], Index=530     */ ,  5, 351,  52, 352,  51, 365,  50, 424, 215, 426, 289
  /* successors state[217], Index=541     */ ,  2, 435, 292, 439, 293
  /* successors state[227], Index=546     */ ,  1, 365, 295
  /* successors state[228], Index=549     */ ,  4, 351, 232, 352, 231, 382, 230, 404, 297
  /* successors state[236], Index=558     */ ,  1, 351, 300
  /* successors state[239], Index=561     */ ,  5, 351,  52, 352,  51, 365,  50, 424, 127, 438, 301
  /* successors state[241], Index=572     */ ,  4, 351,  52, 352,  51, 365,  50, 424, 302
  /* successors state[242], Index=581     */ , 13, 355, 303, 369, 250, 370, 251, 371, 252, 372, 253
                                                 , 373, 254, 374, 255, 375, 256, 376, 257, 377, 258
                                                 , 378, 259, 379, 260, 381, 264
  /* successors state[250], Index=608     */ , 11, 370, 306, 371, 252, 372, 253, 373, 254, 374, 255
                                                 , 375, 256, 376, 257, 377, 258, 378, 259, 379, 260
                                                 , 381, 264
  /* successors state[260], Index=631     */ ,  1, 351, 307
  /* successors state[264], Index=634     */ ,  1, 351, 308
  /* successors state[268], Index=637     */ ,  1, 352, 309
  /* successors state[269], Index=640     */ ,  1, 352, 310
  /* successors state[270], Index=643     */ ,  1, 352, 311
  /* successors state[271], Index=646     */ ,  3, 351, 232, 352, 231, 382, 312
  /* successors state[272], Index=653     */ ,  1, 352, 313
  /* successors state[273], Index=656     */ ,  4, 351, 315, 352, 316, 365, 317, 383, 314
  /* successors state[274], Index=665     */ ,  3, 366, 318, 367, 138, 368, 139
  /* successors state[275], Index=672     */ ,  2, 363, 319, 364, 176
  /* successors state[276], Index=677     */ ,  1, 351, 320
  /* successors state[277], Index=680     */ ,  1, 365, 321
  /* successors state[278], Index=683     */ ,  1, 410, 323
  /* successors state[280], Index=686     */ ,  1, 352, 324
  /* successors state[285], Index=689     */ ,  1, 417, 325
  /* successors state[290], Index=692     */ ,  1, 352, 327
  /* successors state[292], Index=695     */ ,  1, 439, 329
  /* successors state[294], Index=698     */ ,  1, 351, 330
  /* successors state[304], Index=701     */ ,  1, 351, 333
  /* successors state[309], Index=704     */ ,  2, 380, 336, 384, 337
  /* successors state[310], Index=709     */ ,  2, 380, 339, 384, 337
  /* successors state[311], Index=714     */ ,  2, 380, 340, 384, 337
  /* successors state[313], Index=719     */ ,  2, 380, 342, 384, 337
  /* successors state[325], Index=724     */ ,  1, 412, 346
  /* successors state[326], Index=727     */ ,  3, 352,  27, 365, 349, 418, 348
  /* successors state[327], Index=734     */ ,  1, 427, 350
  /* successors state[334], Index=737     */ ,  1, 352, 354
  /* successors state[335], Index=740     */ ,  1, 352, 355
  /* successors state[336], Index=743     */ ,  1, 384, 356
  /* successors state[338], Index=746     */ , 21, 352, 359, 364, 363, 365, 358, 368, 366, 385, 357
                                                 , 386, 360, 387, 361, 388, 362, 389, 364, 390, 367
                                                 , 391, 368, 392, 369, 393, 370, 394, 371, 395, 372
                                                 , 396, 373, 397, 374, 398, 375, 399, 376, 400, 377
                                                 , 401, 378
  /* successors state[341], Index=789     */ ,  1, 352, 553
  /* successors state[343], Index=792     */ ,  1, 352, 554
  /* successors state[344], Index=795     */ ,  1, 365, 555
  /* successors state[345], Index=798     */ ,  1, 365, 556
  /* successors state[347], Index=801     */ ,  4, 365, 558, 419, 557, 420, 562, 421, 563
  /* successors state[348], Index=810     */ ,  1, 417, 587
  /* successors state[351], Index=813     */ ,  2, 428, 588, 429, 589
  /* successors state[352], Index=818     */ ,  5, 435, 597, 439, 293, 440, 596, 441, 598, 442, 599
  /* successors state[353], Index=829     */ ,  1, 405, 601
  /* successors state[354], Index=832     */ ,  2, 380, 602, 384, 337
  /* successors state[355], Index=837     */ ,  2, 380, 603, 384, 337
  /* successors state[365], Index=842     */ , 14, 368, 366, 389, 606, 390, 367, 391, 368, 392, 369
                                                 , 393, 370, 394, 371, 395, 372, 396, 373, 397, 374
                                                 , 398, 375, 399, 376, 400, 377, 401, 378
  /* successors state[553], Index=871     */ ,  2, 380, 607, 384, 337
  /* successors state[598], Index=876     */ ,  1, 442, 613
  /* successors state[600], Index=879     */ ,  6, 351,  52, 352,  51, 365,  50, 422, 614, 423, 100
                                                 , 424, 101
  /* successors state[601], Index=892     */ ,  2, 406, 616, 407, 617
  /* successors state[604], Index=897     */ , 15, 368, 366, 388, 624, 389, 364, 390, 367, 391, 368
                                                 , 392, 369, 393, 370, 394, 371, 395, 372, 396, 373
                                                 , 397, 374, 398, 375, 399, 376, 400, 377, 401, 378
  /* successors state[605], Index=928     */ ,  1, 364, 625
  /* successors state[608], Index=931     */ ,  1, 351, 626
  /* successors state[609], Index=934     */ ,  1, 365, 627
  /* successors state[610], Index=937     */ ,  1, 421, 628
  /* successors state[611], Index=940     */ ,  1, 429, 629
  /* successors state[626], Index=943     */ ,  2, 380, 631, 384, 337
  /* successors state[630], Index=948     */ ,  1, 365, 633
  /* successors state[632], Index=951     */ ,  1, 365, 634
}; // Size of table:1.908(x86)/1.912(x64) bytes.

#define nil (unsigned short)-1
static const unsigned short successorsIndex[635] = {
       0,  nil,   49,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,   94,  nil,   99,  nil,  102,  nil,  nil,  nil,  nil
  ,  nil,  111,  114,  117,  120,  123,  128,  131,  nil,  134
  ,  137,  140,  nil,  nil,  nil,  143,  146,  149,  152,  nil
  ,  nil,  nil,  nil,  nil,  161,  166,  171,  176,  183,  nil
  ,  188,  195,  200,  146,  213,  218,  225,  146,  nil,  232
  ,  nil,  nil,  nil,  nil,  nil,  nil,  146,  nil,  nil,  nil
  ,  nil,  239,  248,  nil,  nil,  nil,  261,  266,  nil,  269
  ,  278,  285,  288,  291,  298,  nil,  nil,  nil,  301,  310
  ,  nil,  nil,  321,  330,  343,  nil,  348,  nil,  351,  364
  ,  377,  388,  399,  410,  421,  nil,  nil,  nil,  432,  443
  ,  nil,  448,  451,  456,  nil,  nil,  nil,  nil,  459,  nil
  ,  462,  471,  474,  477,  482,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  509,  514,  517,  nil,  nil,  nil,  524,  527
  ,  nil,  nil,  nil,  530,  nil,  nil,  nil,  541,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  546,  549,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  558,  nil,  nil,  561
  ,  nil,  572,  581,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  608,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  631,  nil,  nil,  nil,  634,  nil,  nil,  nil,  637,  640
  ,  643,  646,  653,  656,  665,  672,  677,  680,  683,  nil
  ,  686,  nil,  nil,  nil,  nil,  689,  nil,  nil,  nil,  nil
  ,  692,  nil,  695,  nil,  698,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  701,  nil,  nil,  nil,  nil,  704
  ,  709,  714,  nil,  719,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  724,  727,  734,  nil,  nil
  ,  nil,  nil,  nil,  nil,  737,  740,  743,  nil,  746,  743
  ,  743,  789,  743,  792,  795,  798,  nil,  801,  810,  nil
  ,  nil,  813,  818,  829,  832,  837,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  842,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  871,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  nil,  695,  876,  nil
  ,  879,  892,  743,  743,  897,  928,  nil,  743,  931,  934
  ,  937,  940,  nil,  nil,  310,  nil,  nil,  nil,  nil,  nil
  ,  nil,  nil,  nil,  nil,  nil,  nil,  943,  nil,  nil,  nil
  ,  948,  743,  951,  nil,  nil
}; // Size of table:1.272(x86)/1.272(x64) bytes.

/******************************************************************************\
* The productionLength[] array is indexed by production number and holds       *
* the number of symbols on the right side of each production.                  *
\******************************************************************************/
static const unsigned char productionLength[475] = {
  /*   0 */    1,   1,   2,   1,   1,   1,   1,   1,   1,   1,
  /*  10 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /*  20 */    1,   4,   4,   4,   8,   7,   2,   1,   2,   2,
  /*  30 */    2,   2,   2,   1,   2,   2,   2,   2,   2,   3,
  /*  40 */    1,   1,   3,   9,   1,   3,   1,   1,   1,   0,
  /*  50 */    1,   1,   2,   1,   1,   1,   1,   1,   1,   1,
  /*  60 */    1,   5,   1,   1,   1,   5,   1,   1,   1,   3,
  /*  70 */    3,   3,   5,   3,   7,   1,   1,   1,   2,   1,
  /*  80 */    2,   1,   1,   1,   1,   3,   1,   3,   1,   1,
  /*  90 */    2,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 100 */    1,   1,   1,   1,   0,   2,   1,   1,   1,   1,
  /* 110 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 120 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 130 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 140 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 150 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 160 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 170 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 180 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 190 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 200 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 210 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 220 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 230 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 240 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 250 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 260 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 270 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 280 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 290 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 300 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 310 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 320 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 330 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   6,
  /* 340 */    2,   1,   6,   1,   1,   2,   0,   3,   0,   1,
  /* 350 */    1,   1,   1,   1,   1,   7,   2,   1,   2,   1,
  /* 360 */    4,   1,   1,   3,   2,   1,   1,   1,   4,   5,
  /* 370 */    2,   0,   3,   1,   1,   1,   1,   1,   3,   1,
  /* 380 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 390 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 400 */    1,   1,   1,   5,   2,   1,   1,   2,   6,   2,
  /* 410 */    1,   4,   0,   2,   1,   3,   1,   1,   1,   1,
  /* 420 */    1,   1,   6,   4,   3,   1,   5,   2,   1,   2,
  /* 430 */    6,   2,   1,   4,   7,   2,   1,   2,   2,   2,
  /* 440 */    2,   2,   2,   2,   2,   1,   5,   1,   1,   2,
  /* 450 */    1,   2,   3,   5,   1,   1,   1,   1,   3,   3,
  /* 460 */    1,   3,   1,   1,   1,   1,   4,   7,   3,   1,
  /* 470 */    1,   1,   1,   1,   1
}; // Size of table:476(x86)/480(x64) bytes.

/******************************************************************************\
* The leftSide[] array is indexed by production number, and holds the          *
* nonTerminal A on the left side of each production.                           *
\******************************************************************************/
static const TableType leftSide[475] = {
  /*   0 */  328, 329, 330, 330, 331, 331, 331, 331, 331, 331,
  /*  10 */  331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  /*  20 */  331, 332, 333, 334, 335, 336, 354, 354, 357, 357,
  /*  30 */  357, 357, 356, 356, 360, 360, 360, 360, 360, 361,
  /*  40 */  361, 363, 359, 362, 362, 358, 358, 366, 366, 355,
  /*  50 */  355, 369, 369, 370, 370, 370, 370, 370, 370, 370,
  /*  60 */  370, 371, 379, 379, 379, 372, 381, 381, 381, 373,
  /*  70 */  374, 375, 376, 377, 378, 383, 383, 383, 380, 380,
  /*  80 */  384, 385, 385, 385, 385, 386, 386, 387, 387, 388,
  /*  90 */  388, 389, 389, 389, 389, 389, 389, 389, 389, 389,
  /* 100 */  389, 389, 389, 389, 350, 350, 402, 402, 402, 402,
  /* 110 */  402, 402, 367, 367, 367, 367, 367, 367, 367, 367,
  /* 120 */  367, 367, 367, 367, 367, 367, 368, 368, 368, 368,
  /* 130 */  368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
  /* 140 */  368, 368, 368, 368, 368, 368, 364, 364, 364, 364,
  /* 150 */  364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
  /* 160 */  364, 364, 364, 364, 364, 390, 390, 390, 390, 390,
  /* 170 */  390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
  /* 180 */  390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
  /* 190 */  390, 390, 390, 390, 390, 391, 391, 391, 391, 391,
  /* 200 */  391, 391, 391, 391, 391, 391, 391, 391, 391, 393,
  /* 210 */  393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
  /* 220 */  393, 393, 395, 395, 395, 395, 395, 395, 395, 395,
  /* 230 */  395, 395, 395, 395, 395, 395, 395, 392, 392, 392,
  /* 240 */  392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
  /* 250 */  392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
  /* 260 */  392, 392, 392, 394, 394, 394, 394, 394, 394, 394,
  /* 270 */  394, 394, 394, 396, 396, 396, 396, 396, 396, 396,
  /* 280 */  396, 396, 396, 396, 396, 396, 397, 397, 397, 397,
  /* 290 */  397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
  /* 300 */  397, 398, 398, 398, 398, 398, 398, 398, 398, 398,
  /* 310 */  398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
  /* 320 */  398, 398, 398, 399, 399, 399, 399, 399, 399, 399,
  /* 330 */  399, 399, 400, 400, 401, 401, 401, 401, 401, 337,
  /* 340 */  403, 403, 404, 382, 382, 405, 405, 406, 407, 407,
  /* 350 */  407, 407, 407, 407, 407, 338, 409, 409, 410, 410,
  /* 360 */  339, 411, 411, 412, 413, 413, 414, 414, 415, 416,
  /* 370 */  416, 417, 417, 419, 419, 419, 419, 419, 420, 420,
  /* 380 */  421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
  /* 390 */  421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
  /* 400 */  421, 421, 421, 340, 422, 422, 423, 423, 341, 425,
  /* 410 */  425, 426, 427, 427, 428, 428, 429, 429, 429, 429,
  /* 420 */  429, 429, 342, 342, 430, 430, 343, 431, 431, 432,
  /* 430 */  344, 433, 433, 345, 346, 434, 434, 436, 436, 436,
  /* 440 */  436, 436, 436, 436, 435, 435, 439, 440, 440, 441,
  /* 450 */  441, 442, 347, 348, 444, 443, 443, 445, 445, 437,
  /* 460 */  437, 438, 438, 424, 424, 424, 424, 353, 408, 349,
  /* 470 */  418, 418, 365, 352, 351
}; // Size of table:952(x86)/952(x64) bytes.

/******************************************************************************\
* The rightSide[] matrix is indexed by production number and holds             *
* the right side symbols of each production.                                   *
* Compressed and only used for debugging.                                      *
\******************************************************************************/
static const TableType rightSideTable[679] = {
  /*   0 */  329
  /*   1 */ ,330
  /*   2 */ ,330,331
  /*   3 */ ,331
  /*   4 */ ,332
  /*   5 */ ,333
  /*   6 */ ,334
  /*   7 */ ,335
  /*   8 */ ,336
  /*   9 */ ,337
  /*  10 */ ,338
  /*  11 */ ,339
  /*  12 */ ,340
  /*  13 */ ,341
  /*  14 */ ,342
  /*  15 */ ,343
  /*  16 */ ,344
  /*  17 */ ,345
  /*  18 */ ,346
  /*  19 */ ,347
  /*  20 */ ,348
  /*  21 */ ,349, 15,350,351
  /*  22 */ ,349, 16,350,351
  /*  23 */ ,349,352,350,351
  /*  24 */ ,349, 48,350,353,354,321,355,322
  /*  25 */ ,349, 49,353,356,321,355,322
  /*  26 */ ,354,357
  /*  27 */ ,357
  /*  28 */ , 51,358
  /*  29 */ , 53,351
  /*  30 */ , 18,352
  /*  31 */ , 17,359
  /*  32 */ ,356,360
  /*  33 */ ,360
  /*  34 */ , 51,358
  /*  35 */ , 52,361
  /*  36 */ , 53,351
  /*  37 */ , 18,352
  /*  38 */ , 17,362
  /*  39 */ ,361,323,363
  /*  40 */ ,363
  /*  41 */ ,364
  /*  42 */ ,365,  4,351
  /*  43 */ ,365,  4,351,  4,365,  4,365,  4,365
  /*  44 */ ,359
  /*  45 */ ,358,323,366
  /*  46 */ ,366
  /*  47 */ ,367
  /*  48 */ ,368
  /*  50 */ ,369
  /*  51 */ ,370
  /*  52 */ ,369,370
  /*  53 */ ,371
  /*  54 */ ,372
  /*  55 */ ,373
  /*  56 */ ,374
  /*  57 */ ,375
  /*  58 */ ,376
  /*  59 */ ,377
  /*  60 */ ,378
  /*  61 */ ,379,351,  4,352,380
  /*  62 */ , 60
  /*  63 */ , 61
  /*  64 */ , 66
  /*  65 */ ,381,351,  4,352,380
  /*  66 */ , 67
  /*  67 */ , 68
  /*  68 */ , 69
  /*  69 */ , 62,352,380
  /*  70 */ , 64,352,380
  /*  71 */ , 65,352,380
  /*  72 */ , 16,382,  4,352,380
  /*  73 */ , 63,352,380
  /*  74 */ , 70,383,  4,352,  4,351,380
  /*  75 */ ,351
  /*  76 */ ,352
  /*  77 */ ,365
  /*  78 */ ,380,384
  /*  79 */ ,384
  /*  80 */ ,  4,385
  /*  81 */ ,365
  /*  82 */ ,352
  /*  83 */ ,386
  /*  84 */ ,387
  /*  85 */ ,386,323,388
  /*  86 */ ,388
  /*  87 */ ,387,323,364
  /*  88 */ ,364
  /*  89 */ ,389
  /*  90 */ ,324,389
  /*  91 */ ,368
  /*  92 */ ,390
  /*  93 */ ,391
  /*  94 */ ,392
  /*  95 */ ,393
  /*  96 */ ,394
  /*  97 */ ,395
  /*  98 */ ,396
  /*  99 */ ,397
  /* 100 */ ,398
  /* 101 */ ,399
  /* 102 */ ,400
  /* 103 */ ,401
  /* 105 */ ,350,402
  /* 106 */ , 54
  /* 107 */ , 55
  /* 108 */ , 56
  /* 109 */ , 57
  /* 110 */ , 58
  /* 111 */ , 59
  /* 112 */ ,284
  /* 113 */ ,285
  /* 114 */ ,286
  /* 115 */ ,287
  /* 116 */ ,288
  /* 117 */ ,289
  /* 118 */ ,290
  /* 119 */ ,291
  /* 120 */ ,292
  /* 121 */ ,293
  /* 122 */ ,294
  /* 123 */ ,295
  /* 124 */ ,296
  /* 125 */ ,297
  /* 126 */ , 71
  /* 127 */ , 72
  /* 128 */ , 73
  /* 129 */ , 74
  /* 130 */ , 75
  /* 131 */ , 76
  /* 132 */ , 77
  /* 133 */ , 78
  /* 134 */ , 79
  /* 135 */ , 80
  /* 136 */ , 81
  /* 137 */ , 82
  /* 138 */ , 83
  /* 139 */ , 84
  /* 140 */ , 85
  /* 141 */ , 86
  /* 142 */ , 87
  /* 143 */ , 88
  /* 144 */ , 89
  /* 145 */ , 90
  /* 146 */ , 91
  /* 147 */ , 92
  /* 148 */ , 93
  /* 149 */ , 94
  /* 150 */ , 95
  /* 151 */ , 96
  /* 152 */ , 97
  /* 153 */ , 98
  /* 154 */ , 99
  /* 155 */ ,100
  /* 156 */ ,101
  /* 157 */ ,102
  /* 158 */ ,103
  /* 159 */ ,104
  /* 160 */ ,105
  /* 161 */ ,106
  /* 162 */ ,107
  /* 163 */ ,108
  /* 164 */ ,109
  /* 165 */ ,110
  /* 166 */ ,111
  /* 167 */ ,112
  /* 168 */ ,113
  /* 169 */ ,114
  /* 170 */ ,115
  /* 171 */ ,116
  /* 172 */ ,117
  /* 173 */ ,118
  /* 174 */ ,119
  /* 175 */ ,120
  /* 176 */ ,121
  /* 177 */ ,122
  /* 178 */ ,123
  /* 179 */ ,124
  /* 180 */ ,125
  /* 181 */ ,126
  /* 182 */ ,127
  /* 183 */ ,128
  /* 184 */ ,129
  /* 185 */ ,130
  /* 186 */ ,131
  /* 187 */ ,132
  /* 188 */ ,133
  /* 189 */ ,134
  /* 190 */ ,135
  /* 191 */ ,136
  /* 192 */ ,137
  /* 193 */ ,138
  /* 194 */ ,139
  /* 195 */ ,140
  /* 196 */ ,141
  /* 197 */ ,142
  /* 198 */ ,143
  /* 199 */ ,144
  /* 200 */ ,145
  /* 201 */ ,146
  /* 202 */ ,147
  /* 203 */ ,148
  /* 204 */ ,149
  /* 205 */ ,150
  /* 206 */ ,151
  /* 207 */ ,152
  /* 208 */ ,153
  /* 209 */ ,190
  /* 210 */ ,191
  /* 211 */ ,192
  /* 212 */ ,193
  /* 213 */ ,194
  /* 214 */ ,195
  /* 215 */ ,196
  /* 216 */ ,197
  /* 217 */ ,198
  /* 218 */ ,199
  /* 219 */ ,200
  /* 220 */ ,201
  /* 221 */ ,202
  /* 222 */ ,203
  /* 223 */ ,204
  /* 224 */ ,205
  /* 225 */ ,206
  /* 226 */ ,207
  /* 227 */ ,208
  /* 228 */ ,209
  /* 229 */ ,210
  /* 230 */ ,211
  /* 231 */ ,212
  /* 232 */ ,213
  /* 233 */ ,214
  /* 234 */ ,215
  /* 235 */ ,216
  /* 236 */ ,217
  /* 237 */ ,154
  /* 238 */ ,155
  /* 239 */ ,156
  /* 240 */ ,157
  /* 241 */ ,158
  /* 242 */ ,159
  /* 243 */ ,160
  /* 244 */ ,161
  /* 245 */ ,162
  /* 246 */ ,163
  /* 247 */ ,164
  /* 248 */ ,165
  /* 249 */ ,166
  /* 250 */ ,167
  /* 251 */ ,168
  /* 252 */ ,169
  /* 253 */ ,170
  /* 254 */ ,171
  /* 255 */ ,172
  /* 256 */ ,173
  /* 257 */ ,174
  /* 258 */ ,175
  /* 259 */ ,176
  /* 260 */ ,177
  /* 261 */ ,178
  /* 262 */ ,179
  /* 263 */ ,180
  /* 264 */ ,181
  /* 265 */ ,182
  /* 266 */ ,183
  /* 267 */ ,184
  /* 268 */ ,185
  /* 269 */ ,186
  /* 270 */ ,187
  /* 271 */ ,188
  /* 272 */ ,189
  /* 273 */ ,218
  /* 274 */ ,219
  /* 275 */ ,220
  /* 276 */ ,221
  /* 277 */ ,222
  /* 278 */ ,223
  /* 279 */ ,224
  /* 280 */ ,225
  /* 281 */ ,226
  /* 282 */ ,227
  /* 283 */ ,228
  /* 284 */ ,229
  /* 285 */ ,230
  /* 286 */ ,231
  /* 287 */ ,232
  /* 288 */ ,233
  /* 289 */ ,234
  /* 290 */ ,235
  /* 291 */ ,236
  /* 292 */ ,237
  /* 293 */ ,238
  /* 294 */ ,239
  /* 295 */ ,240
  /* 296 */ ,241
  /* 297 */ ,242
  /* 298 */ ,243
  /* 299 */ ,244
  /* 300 */ ,245
  /* 301 */ ,246
  /* 302 */ ,247
  /* 303 */ ,248
  /* 304 */ ,249
  /* 305 */ ,250
  /* 306 */ ,251
  /* 307 */ ,252
  /* 308 */ ,253
  /* 309 */ ,254
  /* 310 */ ,255
  /* 311 */ ,256
  /* 312 */ ,257
  /* 313 */ ,258
  /* 314 */ ,259
  /* 315 */ ,260
  /* 316 */ ,261
  /* 317 */ ,262
  /* 318 */ ,263
  /* 319 */ ,264
  /* 320 */ ,265
  /* 321 */ ,266
  /* 322 */ ,267
  /* 323 */ ,268
  /* 324 */ ,269
  /* 325 */ ,270
  /* 326 */ ,271
  /* 327 */ ,272
  /* 328 */ ,273
  /* 329 */ ,274
  /* 330 */ ,275
  /* 331 */ ,276
  /* 332 */ ,277
  /* 333 */ ,278
  /* 334 */ ,279
  /* 335 */ ,280
  /* 336 */ ,281
  /* 337 */ ,282
  /* 338 */ ,283
  /* 339 */ ,  5,  6,350,321,403,322
  /* 340 */ ,403,404
  /* 341 */ ,404
  /* 342 */ ,382,  4, 48,321,405,322
  /* 343 */ ,352
  /* 344 */ ,351
  /* 345 */ ,405,406
  /* 347 */ ,407,  4,365
  /* 349 */ ,  7
  /* 350 */ ,  8
  /* 351 */ ,  9
  /* 352 */ , 10
  /* 353 */ , 11
  /* 354 */ , 12
  /* 355 */ ,349, 13,350,408,321,409,322
  /* 356 */ ,409,410
  /* 357 */ ,410
  /* 358 */ , 14,352
  /* 359 */ , 37
  /* 360 */ ,349,411,350,412
  /* 361 */ , 18
  /* 362 */ , 32
  /* 363 */ ,321,413,322
  /* 364 */ ,413,414
  /* 365 */ ,414
  /* 366 */ ,415
  /* 367 */ ,416
  /* 368 */ , 33,351,417,412
  /* 369 */ , 19,351,  4,418,417
  /* 370 */ , 19, 37
  /* 372 */ ,417,  4,419
  /* 373 */ ,365
  /* 374 */ , 34
  /* 375 */ , 35
  /* 376 */ , 36
  /* 377 */ ,420
  /* 378 */ ,420,323,421
  /* 379 */ ,421
  /* 380 */ ,298
  /* 381 */ ,299
  /* 382 */ ,300
  /* 383 */ ,301
  /* 384 */ ,302
  /* 385 */ ,303
  /* 386 */ ,304
  /* 387 */ ,305
  /* 388 */ ,306
  /* 389 */ ,307
  /* 390 */ ,308
  /* 391 */ ,309
  /* 392 */ ,310
  /* 393 */ ,311
  /* 394 */ ,312
  /* 395 */ ,313
  /* 396 */ ,314
  /* 397 */ ,315
  /* 398 */ ,316
  /* 399 */ ,317
  /* 400 */ ,318
  /* 401 */ ,319
  /* 402 */ ,320
  /* 403 */ ,349, 28,321,422,322
  /* 404 */ ,422,423
  /* 405 */ ,423
  /* 406 */ ,424
  /* 407 */ ,  4,424
  /* 408 */ ,349, 21,350,321,425,322
  /* 409 */ ,425,426
  /* 410 */ ,426
  /* 411 */ ,424,  4,352,427
  /* 413 */ ,  4,428
  /* 414 */ ,429
  /* 415 */ ,428,  4,429
  /* 416 */ , 22
  /* 417 */ , 23
  /* 418 */ , 24
  /* 419 */ , 70
  /* 420 */ , 25
  /* 421 */ , 26
  /* 422 */ ,349, 27,350,321,430,322
  /* 423 */ ,349, 27,350,351
  /* 424 */ ,430,  4,365
  /* 425 */ ,365
  /* 426 */ , 20,350,321,431,322
  /* 427 */ ,431,432
  /* 428 */ ,432
  /* 429 */ ,352,351
  /* 430 */ ,365, 29,350,321,433,322
  /* 431 */ ,433,351
  /* 432 */ ,351
  /* 433 */ , 30,424,  4,424
  /* 434 */ ,349, 38,350,434,321,435,322
  /* 435 */ ,434,436
  /* 436 */ ,436
  /* 437 */ , 39,437
  /* 438 */ , 40,437
  /* 439 */ , 41,438
  /* 440 */ , 42,438
  /* 441 */ , 43,438
  /* 442 */ , 44,438
  /* 443 */ , 45,438
  /* 444 */ ,435,439
  /* 445 */ ,439
  /* 446 */ , 46,351,321,440,322
  /* 447 */ ,435
  /* 448 */ ,441
  /* 449 */ ,441,442
  /* 450 */ ,442
  /* 451 */ , 47,422
  /* 452 */ ,365, 31,443
  /* 453 */ ,349, 50,321,444,322
  /* 454 */ ,430
  /* 455 */ ,351
  /* 456 */ ,445
  /* 457 */ ,352
  /* 458 */ ,445,325,352
  /* 459 */ ,437,  4,438
  /* 460 */ ,438
  /* 461 */ ,438,323,424
  /* 462 */ ,424
  /* 463 */ ,365
  /* 464 */ ,352
  /* 465 */ ,351
  /* 466 */ ,352,326,437,327
  /* 467 */ ,365,  4,365,  4,365,  4,365
  /* 468 */ ,365,  4,365
  /* 469 */ ,418
  /* 470 */ ,352
  /* 471 */ ,365
  /* 472 */ ,  1
  /* 473 */ ,  2
  /* 474 */ ,  3
}; // Size of table:1.360(x86)/1.360(x64) bytes.

/******************************************************************************\
* symbolNames contains names of terminal and nonTerminal separated by space    *
* Used for debugging.                                                          *
\******************************************************************************/
static const char *symbolNames = {
  "EOI"
  " NUMBER"
  " IDENTIFIER"
  " STRING"
  " COMMA"
  " GUIDELINES"
  " DESIGNINFO"
  " LEFTMARGIN"
  " RIGHTMARGIN"
  " TOPMARGIN"
  " BOTTOMMARGIN"
  " HORZGUIDE"
  " VERTGUIDE"
  " TOOLBAR"
  " BUTTON"
  " _BITMAP"
  " _ICON"
  " _FONT"
  " _MENU"
  " _MENUITEM"
  " STRINGTABLE"
  " ACCELERATORS"
  " VIRTKEY"
  " ASCII"
  " SHIFT"
  " ALT"
  " NOINVERT"
  " RCDATA"
  " DLGINIT"
  " TEXTINCLUDE"
  " LANGUAGE"
  " TYPELIB"
  " MENUEX"
  " POPUP"
  " GRAYED"
  " CHECKED"
  " INACTIVE"
  " SEPARATOR"
  " VERSIONINFO"
  " FILEVERSION"
  " PRODUCTVERSION"
  " FILEFLAGSMASK"
  " FILEFLAGS"
  " FILEOS"
  " FILETYPE"
  " FILESUBTYPE"
  " BLOCK"
  " VALUE"
  " DIALOG"
  " DIALOGEX"
  " AFX_DIALOG_LAYOUT"
  " STYLE"
  " EXSTYLE"
  " CAPTION"
  " DISCARDABLE"
  " MOVEABLE"
  " _PURE"
  " IMPURE"
  " PRELOAD"
  " LOADONCALL"
  " PUSHBUTTON"
  " DEFPUSHBUTTON"
  " EDITTEXT"
  " SCROLLBAR"
  " COMBOBOX"
  " LISTBOX"
  " GROUPBOX"
  " LTEXT"
  " RTEXT"
  " CTEXT"
  " CONTROL"
  " _WS_OVERLAPPED"
  " _WS_POPUP"
  " _WS_CHILD"
  " _WS_MINIMIZE"
  " _WS_VISIBLE"
  " _WS_DISABLED"
  " _WS_CLIPSIBLINGS"
  " _WS_CLIPCHILDREN"
  " _WS_MAXIMIZE"
  " _WS_CAPTION"
  " _WS_BORDER"
  " _WS_DLGFRAME"
  " _WS_VSCROLL"
  " _WS_HSCROLL"
  " _WS_SYSMENU"
  " _WS_THICKFRAME"
  " _WS_GROUP"
  " _WS_TABSTOP"
  " _WS_MINIMIZEBOX"
  " _WS_MAXIMIZEBOX"
  " _WS_EX_DLGMODALFRAME"
  " _WS_EX_NOPARENTNOTIFY"
  " _WS_EX_TOPMOST"
  " _WS_EX_ACCEPTFILES"
  " _WS_EX_TRANSPARENT"
  " _WS_EX_MDICHILD"
  " _WS_EX_TOOLWINDOW"
  " _WS_EX_WINDOWEDGE"
  " _WS_EX_CLIENTEDGE"
  " _WS_EX_CONTEXTHELP"
  " _WS_EX_RIGHT"
  " _WS_EX_LEFT"
  " _WS_EX_RTLREADING"
  " _WS_EX_LTRREADING"
  " _WS_EX_LEFTSCROLLBAR"
  " _WS_EX_RIGHTSCROLLBAR"
  " _WS_EX_CONTROLPARENT"
  " _WS_EX_STATICEDGE"
  " _WS_EX_APPWINDOW"
  " _SS_LEFT"
  " _SS_CENTER"
  " _SS_RIGHT"
  " _SS_ICON"
  " _SS_BLACKRECT"
  " _SS_GRAYRECT"
  " _SS_WHITERECT"
  " _SS_BLACKFRAME"
  " _SS_GRAYFRAME"
  " _SS_WHITEFRAME"
  " _SS_USERITEM"
  " _SS_SIMPLE"
  " _SS_LEFTNOWORDWRAP"
  " _SS_OWNERDRAW"
  " _SS_BITMAP"
  " _SS_ENHMETAFILE"
  " _SS_ETCHEDHORZ"
  " _SS_ETCHEDVERT"
  " _SS_ETCHEDFRAME"
  " _SS_TYPEMASK"
  " _SS_NOPREFIX"
  " _SS_NOTIFY"
  " _SS_CENTERIMAGE"
  " _SS_RIGHTJUST"
  " _SS_REALSIZEIMAGE"
  " _SS_SUNKEN"
  " _SS_ENDELLIPSIS"
  " _SS_PATHELLIPSIS"
  " _SS_WORDELLIPSIS"
  " _SS_ELLIPSISMASK"
  " _ES_LEFT"
  " _ES_CENTER"
  " _ES_RIGHT"
  " _ES_MULTILINE"
  " _ES_UPPERCASE"
  " _ES_LOWERCASE"
  " _ES_PASSWORD"
  " _ES_AUTOVSCROLL"
  " _ES_AUTOHSCROLL"
  " _ES_NOHIDESEL"
  " _ES_OEMCONVERT"
  " _ES_READONLY"
  " _ES_WANTRETURN"
  " _ES_NUMBER"
  " _BS_PUSHBUTTON"
  " _BS_DEFPUSHBUTTON"
  " _BS_CHECKBOX"
  " _BS_AUTOCHECKBOX"
  " _BS_RADIOBUTTON"
  " _BS_3STATE"
  " _BS_AUTO3STATE"
  " _BS_GROUPBOX"
  " _BS_USERBUTTON"
  " _BS_AUTORADIOBUTTON"
  " _BS_OWNERDRAW"
  " _BS_LEFTTEXT"
  " _BS_TEXT"
  " _BS_ICON"
  " _BS_BITMAP"
  " _BS_LEFT"
  " _BS_RIGHT"
  " _BS_CENTER"
  " _BS_TOP"
  " _BS_BOTTOM"
  " _BS_VCENTER"
  " _BS_PUSHLIKE"
  " _BS_MULTILINE"
  " _BS_NOTIFY"
  " _BS_FLAT"
  " _BS_RIGHTBUTTON"
  " _SBS_HORZ"
  " _SBS_VERT"
  " _SBS_TOPALIGN"
  " _SBS_LEFTALIGN"
  " _SBS_BOTTOMALIGN"
  " _SBS_RIGHTALIGN"
  " _SBS_SIZEBOXTOPLEFTALIGN"
  " _SBS_SIZEBOXBOTTOMRIGHTALIGN"
  " _SBS_SIZEBOX"
  " _SBS_SIZEGRIP"
  " _CBS_SIMPLE"
  " _CBS_DROPDOWN"
  " _CBS_DROPDOWNLIST"
  " _CBS_OWNERDRAWFIXED"
  " _CBS_OWNERDRAWVARIABLE"
  " _CBS_AUTOHSCROLL"
  " _CBS_OEMCONVERT"
  " _CBS_SORT"
  " _CBS_HASSTRINGS"
  " _CBS_NOINTEGRALHEIGHT"
  " _CBS_DISABLENOSCROLL"
  " _CBS_UPPERCASE"
  " _CBS_LOWERCASE"
  " _LBS_NOTIFY"
  " _LBS_SORT"
  " _LBS_NOREDRAW"
  " _LBS_MULTIPLESEL"
  " _LBS_OWNERDRAWFIXED"
  " _LBS_OWNERDRAWVARIABLE"
  " _LBS_HASSTRINGS"
  " _LBS_USETABSTOPS"
  " _LBS_NOINTEGRALHEIGHT"
  " _LBS_MULTICOLUMN"
  " _LBS_WANTKEYBOARDINPUT"
  " _LBS_EXTENDEDSEL"
  " _LBS_DISABLENOSCROLL"
  " _LBS_NODATA"
  " _LBS_NOSEL"
  " _TBS_AUTOTICKS"
  " _TBS_VERT"
  " _TBS_HORZ"
  " _TBS_TOP"
  " _TBS_BOTTOM"
  " _TBS_LEFT"
  " _TBS_RIGHT"
  " _TBS_BOTH"
  " _TBS_NOTICKS"
  " _TBS_ENABLESELRANGE"
  " _TBS_FIXEDLENGTH"
  " _TBS_NOTHUMB"
  " _TBS_TOOLTIPS"
  " _TVS_HASBUTTONS"
  " _TVS_HASLINES"
  " _TVS_LINESATROOT"
  " _TVS_EDITLABELS"
  " _TVS_DISABLEDRAGDROP"
  " _TVS_SHOWSELALWAYS"
  " _TVS_RTLREADING"
  " _TVS_NOTOOLTIPS"
  " _TVS_CHECKBOXES"
  " _TVS_TRACKSELECT"
  " _TVS_SINGLEEXPAND"
  " _TVS_INFOTIP"
  " _TVS_FULLROWSELECT"
  " _TVS_NOSCROLL"
  " _TVS_NONEVENHEIGHT"
  " _LVS_ICON"
  " _LVS_REPORT"
  " _LVS_SMALLICON"
  " _LVS_LIST"
  " _LVS_TYPEMASK"
  " _LVS_SINGLESEL"
  " _LVS_SHOWSELALWAYS"
  " _LVS_SORTASCENDING"
  " _LVS_SORTDESCENDING"
  " _LVS_SHAREIMAGELISTS"
  " _LVS_NOLABELWRAP"
  " _LVS_AUTOARRANGE"
  " _LVS_EDITLABELS"
  " _LVS_OWNERDATA"
  " _LVS_NOSCROLL"
  " _LVS_TYPESTYLEMASK"
  " _LVS_ALIGNTOP"
  " _LVS_ALIGNLEFT"
  " _LVS_ALIGNMASK"
  " _LVS_OWNERDRAWFIXED"
  " _LVS_NOCOLUMNHEADER"
  " _LVS_NOSORTHEADER"
  " _UDS_WRAP"
  " _UDS_SETBUDDYINT"
  " _UDS_ALIGNRIGHT"
  " _UDS_ALIGNLEFT"
  " _UDS_AUTOBUDDY"
  " _UDS_ARROWKEYS"
  " _UDS_HORZ"
  " _UDS_NOTHOUSANDS"
  " _UDS_HOTTRACK"
  " _PBS_SMOOTH"
  " _PBS_VERTICAL"
  " _MCS_DAYSTATE"
  " _MCS_MULTISELECT"
  " _MCS_WEEKNUMBERS"
  " _MCS_NOTODAYCIRCLE"
  " _MCS_NOTODAY"
  " _DS_ABSALIGN"
  " _DS_SYSMODAL"
  " _DS_LOCALEDIT"
  " _DS_SETFONT"
  " _DS_MODALFRAME"
  " _DS_NOIDLEMSG"
  " _DS_SETFOREGROUND"
  " _DS_3DLOOK"
  " _DS_FIXEDSYS"
  " _DS_NOFAILCREATE"
  " _DS_CONTROL"
  " _DS_CENTER"
  " _DS_CENTERMOUSE"
  " _DS_CONTEXTHELP"
  " _MFT_STRING"
  " _MFT_BITMAP"
  " _MFT_MENUBARBREAK"
  " _MFT_MENUBREAK"
  " _MFT_OWNERDRAW"
  " _MFT_RADIOCHECK"
  " _MFT_SEPARATOR"
  " _MFT_RIGHTORDER"
  " _MFT_RIGHTJUSTIFY"
  " _MFS_GRAYED"
  " _MFS_DISABLED"
  " _MFS_CHECKED"
  " _MFS_HILITE"
  " _MFS_ENABLED"
  " _MFS_UNCHECKED"
  " _MFS_UNHILITE"
  " _MFS_DEFAULT"
  " _MFS_MASK"
  " _MFS_HOTTRACKDRAWN"
  " _MFS_CACHEDBMP"
  " _MFS_BOTTOMGAPDROP"
  " _MFS_TOPGAPDROP"
  " _MFS_GAPDROP"
  " BEGIN"
  " END"
  " OR"
  " NOT"
  " DOT"
  " LPAR"
  " RPAR"
  " start"
  " resourceFile"
  " resourceDefinitionList"
  " resourceDefinition"
  " bitmapDefinition"
  " iconDefinition"
  " customTypeDefinition"
  " dialogDefinition"
  " extendedDialogDefinition"
  " guideLinesDefinition"
  " toolbarDefnition"
  " menuDefinition"
  " dialogInitDefinition"
  " acceleratorsDefinition"
  " rcdataDefinition"
  " stringTableDefinition"
  " textIncludeDirective"
  " languageDirective"
  " versionDefinition"
  " typelibDefinition"
  " afxDialogLayout"
  " resourceId"
  " resourceAttributeList"
  " string"
  " identifier"
  " rectangleSpec"
  " dialogSpecList"
  " opt_dialogControlSpecList"
  " extendedDialogSpecList"
  " dialogSpec"
  " dialogStyleExpr"
  " fontSpec"
  " extendedDialogSpec"
  " extendedDialogStyleExpr"
  " extendedFontSpec"
  " extendedDialogStyle"
  " ws_ex_style"
  " number"
  " dialogStyle"
  " ds_style"
  " ws_style"
  " dialogControlSpecList"
  " dialogControlSpec"
  " pushButtonSpec"
  " lrcTextSpec"
  " editSpec"
  " comboBoxSpec"
  " listBoxSpec"
  " iconSpec"
  " scrollBarSpec"
  " controlSpec"
  " buttonType"
  " controlAttributeList"
  " lrcText"
  " identifierOrString"
  " controlId"
  " controlAttribute"
  " ctrlAttribute"
  " controlStyleExpr"
  " extendedWindowStyleExpr"
  " ctrl_style"
  " add_ctrl_style"
  " ss_style"
  " es_style"
  " bs_style"
  " cbs_style"
  " sbs_style"
  " lbs_style"
  " tbs_style"
  " tvs_style"
  " lvs_style"
  " uds_style"
  " pbs_style"
  " mcs_style"
  " resourceAttribute"
  " designInfoList"
  " designInfo"
  " designSpecList"
  " designSpec"
  " marginSpec"
  " sizeSpec"
  " buttonSpecList"
  " buttonSpec"
  " menuType"
  " menuBody"
  " menuSpecList"
  " menuSpec"
  " popupMenu"
  " menuItem"
  " menuItemModifierList"
  " identifierOrNumber"
  " menuItemModifier"
  " menuItemFlagExpr"
  " menuItemFlag"
  " constantElementList"
  " constantElement"
  " constant"
  " acceleratorList"
  " accelerator"
  " opt_acceleratorSpecList"
  " acceleratorSpecList"
  " acceleratorModifier"
  " numberList"
  " stringSpecList"
  " stringSpec"
  " stringList"
  " versionSpecList"
  " blockList"
  " versionSpec"
  " exprList"
  " expr"
  " block"
  " blockBody"
  " valueList"
  " value"
  " fileName"
  " layoutInfo"
  " name"
}; // Total size of strings:6.028(x86)/6.032(x64) bytes

static const ParserTablesTemplate<TableType, unsigned short> ResourceTables_s(actionCode, compressedLasets, uncompressedActions
                                                                             ,successorsIndex , stateSuccessors
                                                                             ,productionLength, leftSide
                                                                             ,rightSideTable  , symbolNames
                                                                             ,328, 446, 475, 635, 21448, 21528);

const ParserTables *ResourceParser::ResourceTables = &ResourceTables_s;
// Size of ResourceTables_s: 68(x86)/120(x64) bytes. Size of ResourceTables:4(x86)/8(x64) bytes

// Total size of table data:21.448(x86)/21.528(x64) bytes.


