/* DO NOT EDIT THIS FILE - it is machine generated */

#line 81 "C:\\Mytools2015\\UnixTools\\sqlbeauty\\Sql.y"
#include "stdafx.h"
#include "SqlParser.h"
#line 44 "C:\\mytools2015\\ParserGen\\lib\\parsergencpp.par"

#pragma warning(disable : 4312)



typedef short TableType;

/****************************************************************************\
* Bitset containing 1-bits for compressed states and 0-bits for              *
* uncompressed states. Used by ParserTable to determine how to               *
* interpret the entry in the action-table                                    *
* Number of bytes in bitset = (statecount-1)/8+1                             *
\****************************************************************************/
static const BYTE compressedSet[42] = {
   0xbc,0x17,0xdc,0x57,0xb4,0x9f,0x19,0x7e,0xef,0xfb
  ,0xff,0x7b,0xe7,0x0c,0x10,0x07,0x00,0xb0,0xc0,0x56
  ,0x7e,0x8d,0x4e,0x0c,0xd8,0xff,0x4a,0x03,0x04,0x13
  ,0x52,0x06,0xd6,0xcb,0xd8,0x41,0xc3,0xc9,0x7f,0xa7
  ,0xeb,0x1e
}; // Size of table:44(x86)/48(x64) bytes.

/****************************************************************************\
* The action matrix holds the parse action(state,terminal)                   *
* Used in LRParser::parserStep().                                            *
* 2 different formats are used:Compressed and Uncompressed.                  *
*                                                                            *
* Compressed:When there is only 1 possible action in the state.              *
*            or all actions are reduce by the same production.               *
*   If bit 15 (0x8000) is 0, there is only one possible action which is      *
*   encoded as:                                                              *
*      #define   act0001  (void*)((action << 16) | (token&0x7fff)            *
*   State index------+               |                |                      *
*   Highorder 16 bits = action-------+                |                      *
*   Loworder  15 bits = legal token-------------------+                      *
*                                                                            *
*   If bit 15 is 1, the loworder 15 bits is an index.                        *
*      #define   act0002  (void*)((action<<16)  |  0x8000 | (index&0x7fff))  *
*   State index------+               |                |        |             *
*   Highorder 16 bits = action-------+                |        |             *
*   Indicates that this is a multi-item-action-state--+        |             *
*   Loworder  15 bits = index into compressedLasets------------+             *
*                                                                            *
* compressedLasets contains all unique legal lookahead-sets for all          *
* multi-item-action-states.                                                  *
* Number of bytes in each bitset = (terminalcount-1)/8+1                     *
*                                                                            *
* Uncompressed states:                                                       *
*      TableType act0004[] =      { 3, 1, 2, 2,-2, 6, 1 };                   *
*   State index------+              |  |  |                                  *
*   Number of pairs in list---------+  |  |                                  *
*   Legal input symbol-----------------+  |                                  *
*   Action--------------------------------+                                  *
*                                                                            *
* If any uncompressed state has the same actionarray as a previous           *
* generated uncompressed state, a #define is generated to save space.        *
*                                                                            *
*                                                                            *
*   action = getAction(current state, current inputSymbol);                  *
*                                                                            *
*   action <  0   - Reduce by production p, p == -action.                    *
*   action == 0   - Accept. Reduce by production 0.                          *
*   action >  0   - Go to state s (=action),                                 *
*                   and push [s,input,pos] to parser stack.                  *
*                   Then read next symbol from input.                        *
*   action == _ParserError - not found (=unexpected input).                  *
\****************************************************************************/
static const BYTE compressedLasets[209] = {
  /*  0   8 tokens */  0x01,0x00,0x44,0x40,0x00,0x24,0x12,0x00,0x00,0x00,0x00
  /*  1   2 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00
  /*  2  61 tokens */ ,0x81,0x03,0x4c,0xd7,0xbd,0x75,0xfe,0xff,0xff,0xff,0x3f
  /*  3  26 tokens */ ,0x01,0x00,0x44,0xc6,0x99,0x75,0x3a,0xf0,0x01,0x00,0x04
  /*  4  71 tokens */ ,0xbf,0xef,0xcf,0xdf,0xfd,0x7f,0x3a,0xf0,0xff,0xff,0x3f
  /*  5  43 tokens */ ,0x3f,0xec,0xc7,0x4f,0x50,0x37,0x3a,0xd0,0x01,0x3a,0x26
  /*  6  13 tokens */ ,0x01,0x00,0x44,0x40,0x00,0x24,0x32,0xc0,0x01,0x00,0x04
  /*  7  20 tokens */ ,0x01,0x00,0x44,0x47,0x00,0x25,0x3a,0xf0,0x01,0x00,0x04
  /*  8  30 tokens */ ,0x81,0x00,0x44,0xc7,0x99,0x75,0x3a,0xf0,0x81,0x01,0x04
  /*  9  50 tokens */ ,0x81,0x03,0x4c,0xd7,0xbd,0x75,0x3a,0xf0,0xff,0xff,0x05
  /* 10  52 tokens */ ,0x81,0x03,0x4c,0xd7,0xbd,0x75,0x3a,0xf0,0xff,0xff,0x1d
  /* 11   3 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x04
  /* 12   3 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x30,0x00,0x00,0x00
  /* 13   5 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x02,0x00,0x1c
  /* 14  36 tokens */ ,0x81,0x00,0x44,0xc7,0x99,0x75,0x3a,0xf0,0xff,0x01,0x04
  /* 15   2 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x04
  /* 16  14 tokens */ ,0x01,0x00,0x44,0x40,0x00,0x24,0x32,0xd0,0x01,0x00,0x04
  /* 17  17 tokens */ ,0x01,0x00,0x44,0x44,0x00,0x25,0x32,0xf0,0x01,0x00,0x04
  /* 18  15 tokens */ ,0x01,0x00,0x44,0x40,0x00,0x24,0x32,0xf0,0x01,0x00,0x04
}; // Size of table:212(x86)/216(x64) bytes.

#define act0002 (void*)0xfffe8000    /* reduce by 2 on tokens in set[0]          */
#define act0003 (void*)0x0013003c    /* shift to 19 on SEMI                      */
#define act0004 (void*)0xfffc8000    /* reduce by 4 on tokens in set[0]          */
#define act0005 (void*)0x0014003c    /* shift to 20 on SEMI                      */
#define act0007 (void*)0x0018003c    /* shift to 24 on SEMI                      */
#define act0008 (void*)0x0019003c    /* shift to 25 on SEMI                      */
#define act0009 (void*)0x001a003c    /* shift to 26 on SEMI                      */
#define act0010 (void*)0x001e0055    /* shift to 30 on NAME                      */
#define act0012 (void*)0x00250021    /* shift to 37 on INTO                      */
#define act0018 (void*)0xffff8000    /* reduce by 1 on tokens in set[0]          */
#define act0019 (void*)0xfffd8000    /* reduce by 3 on tokens in set[0]          */
#define act0020 (void*)0xfffb8000    /* reduce by 5 on tokens in set[0]          */
#define act0022 (void*)0x000f002d    /* shift to 15 on SELECT                    */
#define act0023 (void*)0x000f002d    /* shift to 15 on SELECT                    */
#define act0024 (void*)0xfff98000    /* reduce by 7 on tokens in set[0]          */
#define act0025 (void*)0xfff88000    /* reduce by 8 on tokens in set[0]          */
#define act0026 (void*)0xfff78000    /* reduce by 9 on tokens in set[0]          */
#define act0028 (void*)0xfff4800b    /* reduce by 12 on tokens in set[1]         */
#define act0030 (void*)0xff4b8016    /* reduce by 181 on tokens in set[2]        */
#define act0034 (void*)0xffbe8021    /* reduce by 66 on tokens in set[3]         */
#define act0036 (void*)0xff4a802c    /* reduce by 182 on tokens in set[4]        */
#define act0037 (void*)0x001e0055    /* shift to 30 on NAME                      */
#define act0039 (void*)0xffd38037    /* reduce by 45 on tokens in set[5]         */
#define act0040 (void*)0xffd28037    /* reduce by 46 on tokens in set[5]         */
#define act0041 (void*)0xffd18037    /* reduce by 47 on tokens in set[5]         */
#define act0042 (void*)0x00240002    /* shift to 36 on NUMBER                    */
#define act0043 (void*)0xffdb8042    /* reduce by 37 on tokens in set[6]         */
#define act0044 (void*)0xff678042    /* reduce by 153 on tokens in set[6]        */
#define act0047 (void*)0xffcb804d    /* reduce by 53 on tokens in set[7]         */
#define act0048 (void*)0xffca804d    /* reduce by 54 on tokens in set[7]         */
#define act0051 (void*)0x00790051    /* shift to 121 on LPAR                     */
#define act0052 (void*)0xff9d8058    /* reduce by 99 on tokens in set[8]         */
#define act0057 (void*)0xff838063    /* reduce by 125 on tokens in set[9]        */
#define act0058 (void*)0xff828063    /* reduce by 126 on tokens in set[9]        */
#define act0059 (void*)0xff818063    /* reduce by 127 on tokens in set[9]        */
#define act0060 (void*)0xff808063    /* reduce by 128 on tokens in set[9]        */
#define act0061 (void*)0xff7f8063    /* reduce by 129 on tokens in set[9]        */
#define act0062 (void*)0xff7e8063    /* reduce by 130 on tokens in set[9]        */
#define act0064 (void*)0xff7c8063    /* reduce by 132 on tokens in set[9]        */
#define act0065 (void*)0xff7b8063    /* reduce by 133 on tokens in set[9]        */
#define act0066 (void*)0xff7a8063    /* reduce by 134 on tokens in set[9]        */
#define act0067 (void*)0xff798063    /* reduce by 135 on tokens in set[9]        */
#define act0069 (void*)0x00920051    /* shift to 146 on LPAR                     */
#define act0070 (void*)0x00930051    /* shift to 147 on LPAR                     */
#define act0071 (void*)0x00940051    /* shift to 148 on LPAR                     */
#define act0072 (void*)0xff738063    /* reduce by 141 on tokens in set[9]        */
#define act0073 (void*)0x00950051    /* shift to 149 on LPAR                     */
#define act0075 (void*)0xff610051    /* reduce by 159 on LPAR                    */
#define act0076 (void*)0xff600051    /* reduce by 160 on LPAR                    */
#define act0077 (void*)0xff59806e    /* reduce by 167 on tokens in set[10]       */
#define act0078 (void*)0xff58806e    /* reduce by 168 on tokens in set[10]       */
#define act0079 (void*)0xff498063    /* reduce by 183 on tokens in set[9]        */
#define act0080 (void*)0xff488063    /* reduce by 184 on tokens in set[9]        */
#define act0081 (void*)0xff478063    /* reduce by 185 on tokens in set[9]        */
#define act0082 (void*)0xff468063    /* reduce by 186 on tokens in set[9]        */
#define act0083 (void*)0xff458063    /* reduce by 187 on tokens in set[9]        */
#define act0084 (void*)0xff448063    /* reduce by 188 on tokens in set[9]        */
#define act0085 (void*)0x001e0055    /* shift to 30 on NAME                      */
#define act0086 (void*)0x001e0055    /* shift to 30 on NAME                      */
#define act0087 (void*)0x000f002d    /* shift to 15 on SELECT                    */
#define act0088 (void*)0xffd5002d    /* reduce by 43 on SELECT                   */
#define act0089 (void*)0xffdd8042    /* reduce by 35 on tokens in set[6]         */
#define act0091 (void*)0x001e0055    /* shift to 30 on NAME                      */
#define act0092 (void*)0xfff3800b    /* reduce by 13 on tokens in set[1]         */
#define act0093 (void*)0xfff28079    /* reduce by 14 on tokens in set[11]        */
#define act0094 (void*)0xfff18079    /* reduce by 15 on tokens in set[11]        */
#define act0096 (void*)0xffee8079    /* reduce by 18 on tokens in set[11]        */
#define act0097 (void*)0xffed8079    /* reduce by 19 on tokens in set[11]        */
#define act0098 (void*)0xffec8079    /* reduce by 20 on tokens in set[11]        */
#define act0101 (void*)0x00a00023    /* shift to 160 on JOIN                     */
#define act0102 (void*)0xffba0023    /* reduce by 70 on JOIN                     */
#define act0103 (void*)0xffb90023    /* reduce by 71 on JOIN                     */
#define act0106 (void*)0x001e0055    /* shift to 30 on NAME                      */
#define act0107 (void*)0xffbf8021    /* reduce by 65 on tokens in set[3]         */
#define act0116 (void*)0xffc9804d    /* reduce by 55 on tokens in set[7]         */
#define act0120 (void*)0xff9f8058    /* reduce by 97 on tokens in set[8]         */
#define act0121 (void*)0x000f002d    /* shift to 15 on SELECT                    */
#define act0122 (void*)0x00b50051    /* shift to 181 on LPAR                     */
#define act0140 (void*)0xff858063    /* reduce by 123 on tokens in set[9]        */
#define act0141 (void*)0xff848063    /* reduce by 124 on tokens in set[9]        */
#define act0143 (void*)0x001e0055    /* shift to 30 on NAME                      */
#define act0150 (void*)0xff54003c    /* reduce by 172 on SEMI                    */
#define act0151 (void*)0xff53003c    /* reduce by 173 on SEMI                    */
#define act0153 (void*)0xfff5800b    /* reduce by 11 on tokens in set[1]         */
#define act0154 (void*)0x00240002    /* shift to 36 on NUMBER                    */
#define act0156 (void*)0xffe98084    /* reduce by 23 on tokens in set[12]        */
#define act0158 (void*)0xff5a808f    /* reduce by 166 on tokens in set[13]       */
#define act0161 (void*)0xffb40023    /* reduce by 76 on JOIN                     */
#define act0162 (void*)0xffb30023    /* reduce by 77 on JOIN                     */
#define act0163 (void*)0xffb60023    /* reduce by 74 on JOIN                     */
#define act0164 (void*)0xffb50023    /* reduce by 75 on JOIN                     */
#define act0165 (void*)0xffc08021    /* reduce by 64 on tokens in set[3]         */
#define act0166 (void*)0x00de0023    /* shift to 222 on JOIN                     */
#define act0168 (void*)0x00e30051    /* shift to 227 on LPAR                     */
#define act0170 (void*)0x001e0055    /* shift to 30 on NAME                      */
#define act0171 (void*)0xffcf8037    /* reduce by 49 on tokens in set[5]         */
#define act0175 (void*)0xffcc804d    /* reduce by 52 on tokens in set[7]         */
#define act0177 (void*)0xffa08058    /* reduce by 96 on tokens in set[8]         */
#define act0178 (void*)0xffc7804d    /* reduce by 57 on tokens in set[7]         */
#define act0179 (void*)0xffc6804d    /* reduce by 58 on tokens in set[7]         */
#define act0182 (void*)0x00ee0051    /* shift to 238 on LPAR                     */
#define act0186 (void*)0xff988058    /* reduce by 104 on tokens in set[8]        */
#define act0187 (void*)0x00f10026    /* shift to 241 on NULLVAL                  */
#define act0195 (void*)0xff868063    /* reduce by 122 on tokens in set[9]        */
#define act0196 (void*)0xff93809a    /* reduce by 109 on tokens in set[14]       */
#define act0198 (void*)0xff92809a    /* reduce by 110 on tokens in set[14]       */
#define act0199 (void*)0xff91809a    /* reduce by 111 on tokens in set[14]       */
#define act0200 (void*)0xff90809a    /* reduce by 112 on tokens in set[14]       */
#define act0201 (void*)0xff8f809a    /* reduce by 113 on tokens in set[14]       */
#define act0202 (void*)0xff8e809a    /* reduce by 114 on tokens in set[14]       */
#define act0203 (void*)0xff5d806e    /* reduce by 163 on tokens in set[10]       */
#define act0204 (void*)0xff5c806e    /* reduce by 164 on tokens in set[10]       */
#define act0205 (void*)0xff5b806e    /* reduce by 165 on tokens in set[10]       */
#define act0206 (void*)0xff788063    /* reduce by 136 on tokens in set[9]        */
#define act0207 (void*)0xff768063    /* reduce by 138 on tokens in set[9]        */
#define act0209 (void*)0x00f40052    /* shift to 244 on RPAR                     */
#define act0211 (void*)0xff5e0052    /* reduce by 162 on RPAR                    */
#define act0214 (void*)0xff7180a5    /* reduce by 143 on tokens in set[15]       */
#define act0216 (void*)0x00f90052    /* shift to 249 on RPAR                     */
#define act0217 (void*)0xffeb003c    /* reduce by 21 on SEMI                     */
#define act0226 (void*)0xff5780a5    /* reduce by 169 on tokens in set[15]       */
#define act0232 (void*)0xff9e8058    /* reduce by 98 on tokens in set[8]         */
#define act0233 (void*)0x01090052    /* shift to 265 on RPAR                     */
#define act0236 (void*)0xff6a0052    /* reduce by 150 on RPAR                    */
#define act0241 (void*)0xff978058    /* reduce by 105 on tokens in set[8]        */
#define act0244 (void*)0xff758063    /* reduce by 139 on tokens in set[9]        */
#define act0246 (void*)0xff748063    /* reduce by 140 on tokens in set[9]        */
#define act0249 (void*)0xffef8079    /* reduce by 17 on tokens in set[11]        */
#define act0250 (void*)0xffea8084    /* reduce by 22 on tokens in set[12]        */
#define act0257 (void*)0x0117003c    /* shift to 279 on SEMI                     */
#define act0258 (void*)0x01180052    /* shift to 280 on RPAR                     */
#define act0260 (void*)0xffdf003c    /* reduce by 33 on SEMI                     */
#define act0262 (void*)0x011b000c    /* shift to 283 on BY                       */
#define act0263 (void*)0xffd9003c    /* reduce by 39 on SEMI                     */
#define act0264 (void*)0x011c0051    /* shift to 284 on LPAR                     */
#define act0265 (void*)0xff9c8058    /* reduce by 100 on tokens in set[8]        */
#define act0267 (void*)0x011e0052    /* shift to 286 on RPAR                     */
#define act0270 (void*)0x01200052    /* shift to 288 on RPAR                     */
#define act0271 (void*)0xff7080a5    /* reduce by 144 on tokens in set[15]       */
#define act0275 (void*)0x01240051    /* shift to 292 on LPAR                     */
#define act0276 (void*)0x000f002d    /* shift to 15 on SELECT                    */
#define act0278 (void*)0xff5680a5    /* reduce by 170 on tokens in set[15]       */
#define act0279 (void*)0xffe48000    /* reduce by 28 on tokens in set[0]         */
#define act0280 (void*)0x0126003c    /* shift to 294 on SEMI                     */
#define act0286 (void*)0xff9b8058    /* reduce by 101 on tokens in set[8]        */
#define act0288 (void*)0xff778063    /* reduce by 137 on tokens in set[9]        */
#define act0289 (void*)0x01360052    /* shift to 310 on RPAR                     */
#define act0294 (void*)0xffe68000    /* reduce by 26 on tokens in set[0]         */
#define act0295 (void*)0xffda80b0    /* reduce by 38 on tokens in set[16]        */
#define act0296 (void*)0x013b000c    /* shift to 315 on BY                       */
#define act0299 (void*)0xffab80bb    /* reduce by 85 on tokens in set[17]        */
#define act0302 (void*)0xff6380a5    /* reduce by 157 on tokens in set[15]       */
#define act0303 (void*)0xff5280a5    /* reduce by 174 on tokens in set[15]       */
#define act0304 (void*)0x00240002    /* shift to 36 on NUMBER                    */
#define act0305 (void*)0xff5080a5    /* reduce by 176 on tokens in set[15]       */
#define act0306 (void*)0xff4f80a5    /* reduce by 177 on tokens in set[15]       */
#define act0307 (void*)0xff4e80a5    /* reduce by 178 on tokens in set[15]       */
#define act0308 (void*)0xff4d80a5    /* reduce by 179 on tokens in set[15]       */
#define act0309 (void*)0xff4c80a5    /* reduce by 180 on tokens in set[15]       */
#define act0310 (void*)0xff728063    /* reduce by 142 on tokens in set[9]        */
#define act0312 (void*)0xffbc8021    /* reduce by 68 on tokens in set[3]         */
#define act0313 (void*)0x01400052    /* shift to 320 on RPAR                     */
#define act0314 (void*)0x0141003c    /* shift to 321 on SEMI                     */
#define act0317 (void*)0xffd7003c    /* reduce by 41 on SEMI                     */
#define act0319 (void*)0xff5180a5    /* reduce by 175 on tokens in set[15]       */
#define act0320 (void*)0x0147003c    /* shift to 327 on SEMI                     */
#define act0321 (void*)0xffe58000    /* reduce by 27 on tokens in set[0]         */
#define act0323 (void*)0xffa680c6    /* reduce by 90 on tokens in set[18]        */
#define act0325 (void*)0xffac80bb    /* reduce by 84 on tokens in set[17]        */
#define act0326 (void*)0xff6480a5    /* reduce by 156 on tokens in set[15]       */
#define act0327 (void*)0xffe78000    /* reduce by 25 on tokens in set[0]         */
#define act0329 (void*)0xffa580c6    /* reduce by 91 on tokens in set[18]        */
#define act0330 (void*)0xffa380c6    /* reduce by 93 on tokens in set[18]        */
#define act0331 (void*)0xffa280c6    /* reduce by 94 on tokens in set[18]        */
#define act0332 (void*)0xffa780c6    /* reduce by 89 on tokens in set[18]        */

static const TableType act0000[] = {   7,  18,  13,  22,  17,  30,  12,  42,  10,  45,  15
                                        ,  49,  11,  52,  16};
static const TableType act0001[] = {   8,   0,   0,  18,  13,  22,  17,  30,  12,  42,  10
                                        ,  45,  15,  49,  11,  52,  16};
static const TableType act0006[] = {  11,   0,  -6,  18,  -6,  22,  -6,  30,  -6,  42,  -6
                                        ,  45,  -6,  49,  -6,  52,  -6,  62,  21,  63,  23
                                        ,  64,  22};
static const TableType act0011[] = {   3,   2,  36,  81,  35,  85,  30};
static const TableType act0013[] = {  28,   1, -44,   2, -44,   3, -44,   4, -44,   5, -44
                                        ,   6,  39,  10, -44,  11, -44,  13, -44,  14, -44
                                        ,  15, -44,  16, -44,  17, -44,  20,  40,  21,  41
                                        ,  23, -44,  27, -44,  36, -44,  38, -44,  41, -44
                                        ,  44, -44,  48,  42,  73, -44,  75, -44,  76, -44
                                        ,  77, -44,  81, -44,  85, -44};
static const TableType act0014[] = {  14,   0,-152,  18,-152,  22,-152,  30,-152,  42,-152
                                        ,  45,-152,  49,-152,  52,-152,  53,-152,  60,  44
                                        ,  62,-152,  63,-152,  64,-152,  82,-152};
static const TableType act0015[] = {  47,   0, -44,   1, -44,   2, -44,   3, -44,   4, -44
                                        ,   5, -44,   6,  39,  10, -44,  11, -44,  13, -44
                                        ,  14, -44,  15, -44,  16, -44,  17, -44,  18, -44
                                        ,  20,  40,  21,  41,  22, -44,  23, -44,  24, -44
                                        ,  25, -44,  26, -44,  27, -44,  30, -44,  36, -44
                                        ,  38, -44,  40, -44,  41, -44,  42, -44,  44, -44
                                        ,  45, -44,  48,  42,  49, -44,  51, -44,  52, -44
                                        ,  53, -44,  60, -44,  62, -44,  63, -44,  64, -44
                                        ,  73, -44,  75, -44,  76, -44,  77, -44,  81, -44
                                        ,  82, -44,  85, -44};
static const TableType act0016[] = {  24,   1,  79,   2,  36,   3,  80,   4,  81,   5,  82
                                        ,  10,  84,  11,  83,  13,  69,  14,  70,  15,  64
                                        ,  16,  65,  17,  66,  23,  51,  27,  73,  36,  75
                                        ,  38,  67,  41,  77,  44,  76,  73,  50,  75,  56
                                        ,  76,  55,  77,  48,  81,  68,  85,  30};
static const TableType act0017[] = {   2,  29,  86,  47,  85};
static const TableType act0021[] = {   2,   6,  88,  45, -42};
static const TableType act0027[] = {   2,  60, -10,  61,  91};
static const TableType act0029[] = {   6,  54,  96,  55,  95,  56,  98,  57,  97,  58,  94
                                        ,  59,  93};
static const TableType act0031[] = {   2,  46,  99,  61, 100};
static const TableType act0032[] = {  25,   0, -62,  18, -62,  22, -62,  25, -62,  26, -62
                                        ,  30, -62,  31, 103,  32, 102,  35, -69,  36, 105
                                        ,  40, -62,  42, -62,  44, 104,  45, -62,  46, -62
                                        ,  49, -62,  51, -62,  52, -62,  53, -62,  60, -62
                                        ,  61, -62,  62, -62,  63, -62,  64, -62,  82, -62};
static const TableType act0033[] = {  28,   0, -63,   7, 106,  18, -63,  22, -63,  25, -63
                                        ,  26, -63,  30, -63,  31, -63,  32, -63,  35, -63
                                        ,  36, -63,  39, -63,  40, -63,  42, -63,  44, -63
                                        ,  45, -63,  46, -63,  49, -63,  51, -63,  52, -63
                                        ,  53, -63,  60, -63,  61, -63,  62, -63,  63, -63
                                        ,  64, -63,  82, -63,  85,  30};
static const TableType act0045[] = {  43,   0, -50,   1,  79,   2,  36,   3,  80,   4,  81
                                        ,   5,  82,  10,  84,  11,  83,  13,  69,  14,  70
                                        ,  15,  64,  16,  65,  17,  66,  18, -50,  22, -50
                                        ,  23,  51,  24, -50,  25, -50,  26, -50,  27,  73
                                        ,  30, -50,  36,  75,  38,  67,  40, -50,  41,  77
                                        ,  42, -50,  44,  76,  45, -50,  49, -50,  51, -50
                                        ,  52, -50,  53, -50,  60, -50,  62, -50,  63, -50
                                        ,  64, -50,  73,  50,  75,  56,  76,  55,  77,  48
                                        ,  81,  68,  82, -50,  85,  30};
static const TableType act0046[] = {   2,  45,  15,  61, 115};
static const TableType act0049[] = {  23,   0, -56,   7, 119,  18, -56,  22, -56,  24, -56
                                        ,  25, -56,  26, -56,  30, -56,  40, -56,  42, -56
                                        ,  45, -56,  49, -56,  51, -56,  52, -56,  53, -56
                                        ,  60, -56,  61, -56,  62, -56,  63, -56,  64, -56
                                        ,  71, 117,  72, 118,  82, -56};
static const TableType act0050[] = {  23,   1,  79,   2,  36,   3,  80,   4,  81,   5,  82
                                        ,  10,  84,  11,  83,  13,  69,  14,  70,  15,  64
                                        ,  16,  65,  17,  66,  23,  51,  27,  73,  36,  75
                                        ,  38,  67,  41,  77,  44,  76,  73,  50,  75,  56
                                        ,  76,  55,  81,  68,  85,  30};
static const TableType act0053[] = {  48,   0,-115,   7,-115,   9, 126,  18,-115,  22,-115
                                        ,  24,-115,  25,-115,  26,-115,  28, 122,  30,-115
                                        ,  31,-115,  32,-115,  34, 125,  35,-115,  36,-115
                                        ,  37, 124,  39,-115,  40,-115,  42,-115,  44,-115
                                        ,  45,-115,  46,-115,  49,-115,  51,-115,  52,-115
                                        ,  53,-115,  60,-115,  61,-115,  62,-115,  63,-115
                                        ,  64,-115,  65,-115,  66,-115,  67,-115,  68,-115
                                        ,  69,-115,  70,-115,  71,-115,  72,-115,  73, 123
                                        ,  74, 129,  75, 127,  76, 128,  77, 130,  78, 131
                                        ,  79, 132,  80, 133,  82,-115};
static const TableType act0054[] = {  36,   0,-106,   7,-106,  18,-106,  22,-106,  24,-106
                                        ,  25,-106,  26,-106,  30,-106,  31,-106,  32,-106
                                        ,  35,-106,  36,-106,  39,-106,  40,-106,  42,-106
                                        ,  44,-106,  45,-106,  46,-106,  49,-106,  51,-106
                                        ,  52,-106,  53,-106,  60,-106,  61,-106,  62,-106
                                        ,  63,-106,  64,-106,  65, 138,  66, 139,  67, 135
                                        ,  68, 134,  69, 137,  70, 136,  71,-106,  72,-106
                                        ,  82,-106};
static const TableType act0055[] = {  19,   1,  79,   2,  36,   3,  80,   4,  81,   5,  82
                                        ,  10,  84,  11,  83,  13,  69,  14,  70,  15,  64
                                        ,  16,  65,  17,  66,  27,  73,  36,  75,  38,  67
                                        ,  41,  77,  44,  76,  81,  68,  85,  30};
static const TableType act0063[] = {  52,   0,-131,   7,-131,   8,-131,   9,-131,  18,-131
                                        ,  19,-131,  22,-131,  24,-131,  25,-131,  26,-131
                                        ,  28,-131,  30,-131,  31,-131,  32,-131,  34,-131
                                        ,  35,-131,  36,-131,  37,-131,  39,-131,  40,-131
                                        ,  42,-131,  44,-131,  45,-131,  46,-131,  49,-131
                                        ,  51,-131,  52,-131,  53,-131,  60,-131,  61,-131
                                        ,  62,-131,  63,-131,  64,-131,  65,-131,  66,-131
                                        ,  67,-131,  68,-131,  69,-131,  70,-131,  71,-131
                                        ,  72,-131,  73,-131,  74,-131,  75,-131,  76,-131
                                        ,  77,-131,  78,-131,  79,-131,  80,-131,  82,-131
                                        ,  83, 142,  84, 143};
static const TableType act0068[] = {  24,   1,  79,   2,  36,   3,  80,   4,  81,   5,  82
                                        ,  10,  84,  11,  83,  13,  69,  14,  70,  15,  64
                                        ,  16,  65,  17,  66,  23,  51,  27,  73,  36,  75
                                        ,  38,  67,  41,  77,  44,  76,  45,  15,  73,  50
                                        ,  75,  56,  76,  55,  81,  68,  85,  30};
static const TableType act0074[] = {  53,   0,-166,   7,-166,   8,-166,   9,-166,  18,-166
                                        ,  19,-166,  22,-166,  24,-166,  25,-166,  26,-166
                                        ,  28,-166,  30,-166,  31,-166,  32,-166,  34,-166
                                        ,  35,-166,  36,-166,  37,-166,  39,-166,  40,-166
                                        ,  42,-166,  44,-166,  45,-166,  46,-166,  49,-166
                                        ,  51,-166,  52,-166,  53,-166,  60,-166,  61,-166
                                        ,  62,-166,  63,-166,  64,-166,  65,-166,  66,-166
                                        ,  67,-166,  68,-166,  69,-166,  70,-166,  71,-166
                                        ,  72,-166,  73,-166,  74,-166,  75,-166,  76,-166
                                        ,  77,-166,  78,-166,  79,-166,  80,-166,  81,-158
                                        ,  82,-166,  83,-166,  84,-166};
static const TableType act0090[] = {  13,   0, -36,  18, -36,  22, -36,  30, -36,  42, -36
                                        ,  45, -36,  49, -36,  52, -36,  53, -36,  62, -36
                                        ,  63, -36,  64,  22,  82, -36};
static const TableType act0095[] = {   4,  60, -16,  61, -16,  81, 154,  82, -16};
static const TableType act0099[] = {   3,   2,  36,  41,  77,  85,  30};
static const TableType act0104[] = {   3,  31, 161,  32, 162,  35, -72};
static const TableType act0105[] = {   3,  31, 163,  32, 164,  35, -73};
static const TableType act0108[] = {   5,  31, 103,  32, 102,  35, -69,  36, 105,  44, 104};
static const TableType act0109[] = {   3,  45,  15,  50, 168,  81, 167};
static const TableType act0110[] = {   2,  24, 170,  61, 115};
static const TableType act0111[] = {  44,   0, -48,   1, -48,   2, -48,   3, -48,   4, -48
                                        ,   5, -48,  10, -48,  11, -48,  13, -48,  14, -48
                                        ,  15, -48,  16, -48,  17, -48,  18, -48,  22, -48
                                        ,  23, -48,  24, -48,  25, -48,  26, -48,  27, -48
                                        ,  30, -48,  36, -48,  38, -48,  40, -48,  41, -48
                                        ,  42, -48,  43, 171,  44, -48,  45, -48,  49, -48
                                        ,  51, -48,  52, -48,  53, -48,  60, -48,  62, -48
                                        ,  63, -48,  64, -48,  73, -48,  75, -48,  76, -48
                                        ,  77, -48,  81, -48,  82, -48,  85, -48};
static const TableType act0112[] = {  19,   0, -59,  18, -59,  22, -59,  24, 173,  25, -59
                                        ,  26, -59,  30, -59,  40, -59,  42, -59,  45, -59
                                        ,  49, -59,  51, -59,  52, -59,  53, -59,  60, -59
                                        ,  62, -59,  63, -59,  64, -59,  82, -59};
static const TableType act0113[] = {  20,   0, -51,  18, -51,  22, -51,  24, -51,  25, -51
                                        ,  26, -51,  30, -51,  40, -51,  42, -51,  45, -51
                                        ,  49, -51,  51, -51,  52, -51,  53, -51,  60, -51
                                        ,  61, 115,  62, -51,  63, -51,  64, -51,  82, -51};
static const TableType act0114[] = {   4,  53, 174,  62,  21,  63,  23,  64,  22};
static const TableType act0119[] = {   2,   2,  36,  85,  30};
static const TableType act0123[] = {   3,   9, 184,  28, 182,  37, 183};
static const TableType act0124[] = {  21,   1,  79,   2,  36,   3,  80,   4,  81,   5,  82
                                        ,  10,  84,  11,  83,  13,  69,  14,  70,  15,  64
                                        ,  16,  65,  17,  66,  27,  73,  36,  75,  38,  67
                                        ,  41,  77,  44,  76,  75,  56,  76,  55,  81,  68
                                        ,  85,  30};
static const TableType act0125[] = {   2,  38, 186,  73, 187};
static const TableType act0142[] = {   2,  77, 204,  85,  30};
static const TableType act0144[] = {   3,  71, 117,  72, 118,  82, 206};
static const TableType act0145[] = {   4,  62,  21,  63,  23,  64,  22,  82, 207};
static const TableType act0147[] = {  26,   1, -44,   2, -44,   3, -44,   4, -44,   5, -44
                                        ,   6,  39,  10, -44,  11, -44,  13, -44,  14, -44
                                        ,  15, -44,  16, -44,  17, -44,  20,  40,  21,  41
                                        ,  27, -44,  36, -44,  38, -44,  41, -44,  44, -44
                                        ,  48,  42,  75, -44,  76, -44,  77, 211,  81, -44
                                        ,  85, -44};
static const TableType act0148[] = {  23,   1,  79,   2,  36,   3,  80,   4,  81,   5,  82
                                        ,  10,  84,  11,  83,  13,  69,  14,  70,  15,  64
                                        ,  16,  65,  17,  66,  27,  73,  36,  75,  38,  67
                                        ,  41,  77,  44,  76,  61,-145,  75,  56,  76,  55
                                        ,  81,  68,  82,-145,  85,  30};
static const TableType act0152[] = {  13,   0, -34,  18, -34,  22, -34,  30, -34,  42, -34
                                        ,  45, -34,  49, -34,  52, -34,  53, -34,  62, -34
                                        ,  63, -34,  64,  22,  82, -34};
static const TableType act0155[] = {   3,  51, 219,  60, -78,  61, 218};
static const TableType act0157[] = {   3,  65, 220,  83, 142,  84, 143};
static const TableType act0159[] = {  25,   0, -61,  18, -61,  22, -61,  25, -61,  26, -61
                                        ,  30, -61,  31, 103,  32, 102,  35, -69,  36, 105
                                        ,  40, -61,  42, -61,  44, 104,  45, -61,  46, -61
                                        ,  49, -61,  51, -61,  52, -61,  53, -61,  60, -61
                                        ,  61, -61,  62, -61,  63, -61,  64, -61,  82, -61};
static const TableType act0167[] = {   4,   2,  36,  41,  77,  45,  15,  85,  30};
static const TableType act0169[] = {  11,   0, -30,  18, -30,  22, -30,  30, -30,  42, -30
                                        ,  45, -30,  49, -30,  52, -30,  62,  21,  63,  23
                                        ,  64,  22};
static const TableType act0172[] = {  18,   0, -78,  18, -78,  22, -78,  25, -78,  26, -78
                                        ,  30, -78,  40, -78,  42, -78,  45, -78,  49, -78
                                        ,  51, 219,  52, -78,  53, -78,  60, -78,  62, -78
                                        ,  63, -78,  64, -78,  82, -78};
static const TableType act0176[] = {  30,   0, -95,   7, -95,  18, -95,  22, -95,  24, -95
                                        ,  25, -95,  26, -95,  30, -95,  31, -95,  32, -95
                                        ,  35, -95,  36, -95,  39, -95,  40, -95,  42, -95
                                        ,  44, -95,  45, -95,  46, -95,  49, -95,  51, -95
                                        ,  52, -95,  53, -95,  60, -95,  61, -95,  62, -95
                                        ,  63, -95,  64, -95,  71, -95,  72, 118,  82, -95};
static const TableType act0180[] = {   4,  62,  21,  63,  23,  64,  22,  82, 232};
static const TableType act0181[] = {  22,   1,  79,   2,  36,   3,  80,   4,  81,   5,  82
                                        ,  10,  84,  11,  83,  13,  69,  14,  70,  15,  64
                                        ,  16,  65,  17,  66,  27,  73,  36,  75,  38,  67
                                        ,  41,  77,  44,  76,  45,  15,  75,  56,  76,  55
                                        ,  81,  68,  85,  30};
static const TableType act0185[] = {  37,   0,-102,   7,-102,  18,-102,  22,-102,  24,-102
                                        ,  25,-102,  26,-102,  30,-102,  31,-102,  32,-102
                                        ,  35,-102,  36,-102,  39,-102,  40,-102,  42,-102
                                        ,  44,-102,  45,-102,  46,-102,  49,-102,  51,-102
                                        ,  52,-102,  53,-102,  60,-102,  61,-102,  62,-102
                                        ,  63,-102,  64,-102,  71,-102,  72,-102,  74, 129
                                        ,  75, 127,  76, 128,  77, 130,  78, 131,  79, 132
                                        ,  80, 133,  82,-102};
static const TableType act0188[] = {   8,  72, 242,  74, 129,  75, 127,  76, 128,  77, 130
                                        ,  78, 131,  79, 132,  80, 133};
static const TableType act0189[] = {  50,   0,-116,   7,-116,   8,-116,   9,-116,  18,-116
                                        ,  19,-116,  22,-116,  24,-116,  25,-116,  26,-116
                                        ,  28,-116,  30,-116,  31,-116,  32,-116,  34,-116
                                        ,  35,-116,  36,-116,  37,-116,  39,-116,  40,-116
                                        ,  42,-116,  44,-116,  45,-116,  46,-116,  49,-116
                                        ,  51,-116,  52,-116,  53,-116,  60,-116,  61,-116
                                        ,  62,-116,  63,-116,  64,-116,  65,-116,  66,-116
                                        ,  67,-116,  68,-116,  69,-116,  70,-116,  71,-116
                                        ,  72,-116,  73,-116,  74,-116,  75,-116,  76,-116
                                        ,  77, 130,  78, 131,  79, 132,  80, 133,  82,-116};
static const TableType act0190[] = {  50,   0,-117,   7,-117,   8,-117,   9,-117,  18,-117
                                        ,  19,-117,  22,-117,  24,-117,  25,-117,  26,-117
                                        ,  28,-117,  30,-117,  31,-117,  32,-117,  34,-117
                                        ,  35,-117,  36,-117,  37,-117,  39,-117,  40,-117
                                        ,  42,-117,  44,-117,  45,-117,  46,-117,  49,-117
                                        ,  51,-117,  52,-117,  53,-117,  60,-117,  61,-117
                                        ,  62,-117,  63,-117,  64,-117,  65,-117,  66,-117
                                        ,  67,-117,  68,-117,  69,-117,  70,-117,  71,-117
                                        ,  72,-117,  73,-117,  74,-117,  75,-117,  76,-117
                                        ,  77, 130,  78, 131,  79, 132,  80, 133,  82,-117};
static const TableType act0191[] = {  50,   0,-118,   7,-118,   8,-118,   9,-118,  18,-118
                                        ,  19,-118,  22,-118,  24,-118,  25,-118,  26,-118
                                        ,  28,-118,  30,-118,  31,-118,  32,-118,  34,-118
                                        ,  35,-118,  36,-118,  37,-118,  39,-118,  40,-118
                                        ,  42,-118,  44,-118,  45,-118,  46,-118,  49,-118
                                        ,  51,-118,  52,-118,  53,-118,  60,-118,  61,-118
                                        ,  62,-118,  63,-118,  64,-118,  65,-118,  66,-118
                                        ,  67,-118,  68,-118,  69,-118,  70,-118,  71,-118
                                        ,  72,-118,  73,-118,  74,-118,  75, 127,  76, 128
                                        ,  77, 130,  78, 131,  79, 132,  80, 133,  82,-118};
static const TableType act0192[] = {  50,   0,-119,   7,-119,   8,-119,   9,-119,  18,-119
                                        ,  19,-119,  22,-119,  24,-119,  25,-119,  26,-119
                                        ,  28,-119,  30,-119,  31,-119,  32,-119,  34,-119
                                        ,  35,-119,  36,-119,  37,-119,  39,-119,  40,-119
                                        ,  42,-119,  44,-119,  45,-119,  46,-119,  49,-119
                                        ,  51,-119,  52,-119,  53,-119,  60,-119,  61,-119
                                        ,  62,-119,  63,-119,  64,-119,  65,-119,  66,-119
                                        ,  67,-119,  68,-119,  69,-119,  70,-119,  71,-119
                                        ,  72,-119,  73,-119,  74,-119,  75,-119,  76,-119
                                        ,  77,-119,  78,-119,  79,-119,  80, 133,  82,-119};
static const TableType act0193[] = {  50,   0,-120,   7,-120,   8,-120,   9,-120,  18,-120
                                        ,  19,-120,  22,-120,  24,-120,  25,-120,  26,-120
                                        ,  28,-120,  30,-120,  31,-120,  32,-120,  34,-120
                                        ,  35,-120,  36,-120,  37,-120,  39,-120,  40,-120
                                        ,  42,-120,  44,-120,  45,-120,  46,-120,  49,-120
                                        ,  51,-120,  52,-120,  53,-120,  60,-120,  61,-120
                                        ,  62,-120,  63,-120,  64,-120,  65,-120,  66,-120
                                        ,  67,-120,  68,-120,  69,-120,  70,-120,  71,-120
                                        ,  72,-120,  73,-120,  74,-120,  75,-120,  76,-120
                                        ,  77,-120,  78,-120,  79,-120,  80, 133,  82,-120};
static const TableType act0194[] = {  50,   0,-121,   7,-121,   8,-121,   9,-121,  18,-121
                                        ,  19,-121,  22,-121,  24,-121,  25,-121,  26,-121
                                        ,  28,-121,  30,-121,  31,-121,  32,-121,  34,-121
                                        ,  35,-121,  36,-121,  37,-121,  39,-121,  40,-121
                                        ,  42,-121,  44,-121,  45,-121,  46,-121,  49,-121
                                        ,  51,-121,  52,-121,  53,-121,  60,-121,  61,-121
                                        ,  62,-121,  63,-121,  64,-121,  65,-121,  66,-121
                                        ,  67,-121,  68,-121,  69,-121,  70,-121,  71,-121
                                        ,  72,-121,  73,-121,  74,-121,  75,-121,  76,-121
                                        ,  77,-121,  78,-121,  79,-121,  80, 133,  82,-121};
static const TableType act0197[] = {  43,   0,-115,   7,-115,  18,-115,  22,-115,  24,-115
                                        ,  25,-115,  26,-115,  30,-115,  31,-115,  32,-115
                                        ,  35,-115,  36,-115,  39,-115,  40,-115,  42,-115
                                        ,  44,-115,  45,-115,  46,-115,  49,-115,  51,-115
                                        ,  52,-115,  53,-115,  60,-115,  61,-115,  62,-115
                                        ,  63,-115,  64,-115,  65,-115,  66,-115,  67,-115
                                        ,  68,-115,  69,-115,  70,-115,  71,-115,  72,-115
                                        ,  74, 129,  75, 127,  76, 128,  77, 130,  78, 131
                                        ,  79, 132,  80, 133,  82,-115};
static const TableType act0208[] = {   8,   7, 243,  74, 129,  75, 127,  76, 128,  77, 130
                                        ,  78, 131,  79, 132,  80, 133};
static const TableType act0212[] = {   2,  61, 247,  82, 246};
static const TableType act0213[] = {   9,  61,-146,  74, 129,  75, 127,  76, 128,  77, 130
                                        ,  78, 131,  79, 132,  80, 133,  82,-146};
static const TableType act0215[] = {   3,  61, 248,  71, 117,  72, 118};
static const TableType act0221[] = {   6,  31, 103,  32, 102,  35, -69,  36, 105,  39, 253
                                        ,  44, 104};
static const TableType act0223[] = {   2,  61, 256,  82, 255};
static const TableType act0224[] = {   4,  62,  21,  63,  23,  64,  22,  82, 257};
static const TableType act0225[] = {   4,  61,-171,  82,-171,  83, 142,  84, 143};
static const TableType act0227[] = {  22,   1,  79,   2,  36,   3,  80,   4,  81,   5,  82
                                        ,  10,  84,  11,  83,  13,  69,  14,  70,  15,  64
                                        ,  16,  65,  17,  66,  27,  73,  36,  75,  38,  67
                                        ,  41,  77,  44,  76,  75,  56,  76,  55,  81,  68
                                        ,  82, -31,  85,  30};
static const TableType act0228[] = {   2,  51, 219,  60, -78};
static const TableType act0229[] = {  17,   0, -82,  18, -82,  22, -82,  25, 262,  26, -82
                                        ,  30, -82,  40, -82,  42, -82,  45, -82,  49, -82
                                        ,  52, -82,  53, -82,  60, -82,  62, -82,  63, -82
                                        ,  64, -82,  82, -82};
static const TableType act0230[] = {  19,   0, -60,  18, -60,  22, -60,  25, -60,  26, -60
                                        ,  30, -60,  40, -60,  42, -60,  45, -60,  49, -60
                                        ,  51, -60,  52, -60,  53, -60,  60, -60,  61, 100
                                        ,  62, -60,  63, -60,  64, -60,  82, -60};
static const TableType act0231[] = {   9,  28, 264,  60, -40,  74, 129,  75, 127,  76, 128
                                        ,  77, 130,  78, 131,  79, 132,  80, 133};
static const TableType act0234[] = {   4,  62,  21,  63,  23,  64,  22,  82,-149};
static const TableType act0235[] = {   9,  61,-155,  74, 129,  75, 127,  76, 128,  77, 130
                                        ,  78, 131,  79, 132,  80, 133,  82,-155};
static const TableType act0237[] = {   2,  61, 266,  82,-151};
static const TableType act0239[] = {  37,   0,-103,   7,-103,  18,-103,  22,-103,  24,-103
                                        ,  25,-103,  26,-103,  30,-103,  31,-103,  32,-103
                                        ,  35,-103,  36,-103,  39,-103,  40,-103,  42,-103
                                        ,  44,-103,  45,-103,  46,-103,  49,-103,  51,-103
                                        ,  52,-103,  53,-103,  60,-103,  61,-103,  62,-103
                                        ,  63,-103,  64,-103,  71,-103,  72,-103,  74, 129
                                        ,  75, 127,  76, 128,  77, 130,  78, 131,  79, 132
                                        ,  80, 133,  82,-103};
static const TableType act0240[] = {   8,  72, 268,  74, 129,  75, 127,  76, 128,  77, 130
                                        ,  78, 131,  79, 132,  80, 133};
static const TableType act0245[] = {   8,  74, 129,  75, 127,  76, 128,  77, 130,  78, 131
                                        ,  79, 132,  80, 133,  82,-161};
static const TableType act0251[] = {  19,   0, -79,  18, -79,  22, -79,  25, -79,  26, -79
                                        ,  30, -79,  40, -79,  42, -79,  45, -79,  49, -79
                                        ,  52, -79,  53, -79,  60, -79,  62, -79,  63, -79
                                        ,  64, -79,  71, 117,  72, 118,  82, -79};
static const TableType act0252[] = {  10,  51, -24,  60, -24,  61, -24,  74, 129,  75, 127
                                        ,  76, 128,  77, 130,  78, 131,  79, 132,  80, 133};
static const TableType act0254[] = {   6,  31, 103,  32, 102,  35, -69,  36, 105,  39, 274
                                        ,  44, 104};
static const TableType act0255[] = {   3,  45,  15,  50, 275,  81, 276};
static const TableType act0259[] = {   2,  61, 266,  82, -32};
static const TableType act0261[] = {  16,   0, -80,  18, -80,  22, -80,  26, 282,  30, -80
                                        ,  40, -80,  42, -80,  45, -80,  49, -80,  52, -80
                                        ,  53, -80,  60, -80,  62, -80,  63, -80,  64, -80
                                        ,  82, -80};
static const TableType act0269[] = {  37,   0,-107,   7,-107,  18,-107,  22,-107,  24,-107
                                        ,  25,-107,  26,-107,  30,-107,  31,-107,  32,-107
                                        ,  35,-107,  36,-107,  39,-107,  40,-107,  42,-107
                                        ,  44,-107,  45,-107,  46,-107,  49,-107,  51,-107
                                        ,  52,-107,  53,-107,  60,-107,  61,-107,  62,-107
                                        ,  63,-107,  64,-107,  71,-107,  72,-107,  74, 129
                                        ,  75, 127,  76, 128,  77, 130,  78, 131,  79, 132
                                        ,  80, 133,  82,-107};
static const TableType act0272[] = {   4,  61, 290,  71, 117,  72, 118,  82,-147};
static const TableType act0273[] = {  28,   0, -67,  18, -67,  22, -67,  25, -67,  26, -67
                                        ,  30, -67,  31, -67,  32, -67,  35, -67,  36, -67
                                        ,  39, -67,  40, -67,  42, -67,  44, -67,  45, -67
                                        ,  46, -67,  49, -67,  51, -67,  52, -67,  53, -67
                                        ,  60, -67,  61, -67,  62, -67,  63, -67,  64, -67
                                        ,  71, 117,  72, 118,  82, -67};
static const TableType act0277[] = {  11,   0, -29,  18, -29,  22, -29,  30, -29,  42, -29
                                        ,  45, -29,  49, -29,  52, -29,  62,  21,  63,  23
                                        ,  64,  22};
static const TableType act0281[] = {  15,   0, -87,  18, -87,  22, -87,  30, -87,  40, 296
                                        ,  42, -87,  45, -87,  49, -87,  52, -87,  53, -87
                                        ,  60, -87,  62, -87,  63, -87,  64, -87,  82, -87};
static const TableType act0284[] = {   8,   1,  79,   2,  36,   3,  80,   4,  81,   5,  82
                                        ,  10,  84,  11,  83,  76, 304};
static const TableType act0285[] = {   9,  61,-154,  74, 129,  75, 127,  76, 128,  77, 130
                                        ,  78, 131,  79, 132,  80, 133,  82,-154};
static const TableType act0287[] = {  37,   0,-108,   7,-108,  18,-108,  22,-108,  24,-108
                                        ,  25,-108,  26,-108,  30,-108,  31,-108,  32,-108
                                        ,  35,-108,  36,-108,  39,-108,  40,-108,  42,-108
                                        ,  44,-108,  45,-108,  46,-108,  49,-108,  51,-108
                                        ,  52,-108,  53,-108,  60,-108,  61,-108,  62,-108
                                        ,  63,-108,  64,-108,  71,-108,  72,-108,  74, 129
                                        ,  75, 127,  76, 128,  77, 130,  78, 131,  79, 132
                                        ,  80, 133,  82,-108};
static const TableType act0291[] = {   8,  31, -67,  32, -67,  35, -67,  36, -67,  44, -67
                                        ,  71, 117,  72, 118,  82, 312};
static const TableType act0293[] = {   4,  62,  21,  63,  23,  64,  22,  82, 314};
static const TableType act0297[] = {  17,   0, -81,  18, -81,  22, -81,  30, -81,  40, -81
                                        ,  42, -81,  45, -81,  49, -81,  52, -81,  53, -81
                                        ,  60, -81,  62, -81,  63, -81,  64, -81,  71, 117
                                        ,  72, 118,  82, -81};
static const TableType act0298[] = {  17,   0, -83,  18, -83,  22, -83,  26, -83,  30, -83
                                        ,  40, -83,  42, -83,  45, -83,  49, -83,  52, -83
                                        ,  53, -83,  60, -83,  61, 316,  62, -83,  63, -83
                                        ,  64, -83,  82, -83};
static const TableType act0300[] = {  19,   0, -86,  18, -86,  22, -86,  26, -86,  30, -86
                                        ,  40, -86,  42, -86,  45, -86,  49, -86,  52, -86
                                        ,  53, -86,  60, -86,  61, -86,  62, -86,  63, -86
                                        ,  64, -86,  71, 117,  72, 118,  82, -86};
static const TableType act0301[] = {   2,  61, 318,  82, 317};
static const TableType act0311[] = {   3,  71, 117,  72, 118,  82,-148};
static const TableType act0322[] = {  15,   0, -88,  18, -88,  22, -88,  30, -88,  42, -88
                                        ,  45, -88,  49, -88,  52, -88,  53, -88,  60, -88
                                        ,  61, 328,  62, -88,  63, -88,  64, -88,  82, -88};
static const TableType act0324[] = {  24,   0, -92,   8, 330,  18, -92,  19, 331,  22, -92
                                        ,  30, -92,  42, -92,  45, -92,  49, -92,  52, -92
                                        ,  53, -92,  60, -92,  61, -92,  62, -92,  63, -92
                                        ,  64, -92,  74, 129,  75, 127,  76, 128,  77, 130
                                        ,  78, 131,  79, 132,  80, 133,  82, -92};

// Total size of uncompressed actNNNN tables:7.432(x86)/7.672(x64) bytes.

#define act0035 act0011 /* Saved 16(x86)/16(x64) bytes */
#define act0038 act0016 /* Saved 100(x86)/104(x64) bytes */
#define act0056 act0055 /* Saved 80(x86)/80(x64) bytes */
#define act0100 act0011 /* Saved 16(x86)/16(x64) bytes */
#define act0115 act0016 /* Saved 100(x86)/104(x64) bytes */
#define act0117 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0118 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0126 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0127 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0128 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0129 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0130 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0131 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0132 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0133 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0134 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0135 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0136 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0137 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0138 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0139 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0146 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0149 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0160 act0011 /* Saved 16(x86)/16(x64) bytes */
#define act0173 act0011 /* Saved 16(x86)/16(x64) bytes */
#define act0174 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0183 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0184 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0210 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0218 act0099 /* Saved 16(x86)/16(x64) bytes */
#define act0219 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0220 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0222 act0011 /* Saved 16(x86)/16(x64) bytes */
#define act0238 act0181 /* Saved 92(x86)/96(x64) bytes */
#define act0242 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0243 act0029 /* Saved 28(x86)/32(x64) bytes */
#define act0247 act0148 /* Saved 96(x86)/96(x64) bytes */
#define act0248 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0253 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0256 act0099 /* Saved 16(x86)/16(x64) bytes */
#define act0266 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0268 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0274 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0282 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0283 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0290 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0292 act0227 /* Saved 92(x86)/96(x64) bytes */
#define act0315 act0124 /* Saved 88(x86)/88(x64) bytes */
#define act0316 act0050 /* Saved 96(x86)/96(x64) bytes */
#define act0318 act0284 /* Saved 36(x86)/40(x64) bytes */
#define act0328 act0124 /* Saved 88(x86)/88(x64) bytes */

static const void *action[333] = {
   act0000,act0001,act0002,act0003,act0004,act0005,act0006,act0007,act0008,act0009
  ,act0010,act0011,act0012,act0013,act0014,act0015,act0016,act0017,act0018,act0019
  ,act0020,act0021,act0022,act0023,act0024,act0025,act0026,act0027,act0028,act0029
  ,act0030,act0031,act0032,act0033,act0034,act0035,act0036,act0037,act0038,act0039
  ,act0040,act0041,act0042,act0043,act0044,act0045,act0046,act0047,act0048,act0049
  ,act0050,act0051,act0052,act0053,act0054,act0055,act0056,act0057,act0058,act0059
  ,act0060,act0061,act0062,act0063,act0064,act0065,act0066,act0067,act0068,act0069
  ,act0070,act0071,act0072,act0073,act0074,act0075,act0076,act0077,act0078,act0079
  ,act0080,act0081,act0082,act0083,act0084,act0085,act0086,act0087,act0088,act0089
  ,act0090,act0091,act0092,act0093,act0094,act0095,act0096,act0097,act0098,act0099
  ,act0100,act0101,act0102,act0103,act0104,act0105,act0106,act0107,act0108,act0109
  ,act0110,act0111,act0112,act0113,act0114,act0115,act0116,act0117,act0118,act0119
  ,act0120,act0121,act0122,act0123,act0124,act0125,act0126,act0127,act0128,act0129
  ,act0130,act0131,act0132,act0133,act0134,act0135,act0136,act0137,act0138,act0139
  ,act0140,act0141,act0142,act0143,act0144,act0145,act0146,act0147,act0148,act0149
  ,act0150,act0151,act0152,act0153,act0154,act0155,act0156,act0157,act0158,act0159
  ,act0160,act0161,act0162,act0163,act0164,act0165,act0166,act0167,act0168,act0169
  ,act0170,act0171,act0172,act0173,act0174,act0175,act0176,act0177,act0178,act0179
  ,act0180,act0181,act0182,act0183,act0184,act0185,act0186,act0187,act0188,act0189
  ,act0190,act0191,act0192,act0193,act0194,act0195,act0196,act0197,act0198,act0199
  ,act0200,act0201,act0202,act0203,act0204,act0205,act0206,act0207,act0208,act0209
  ,act0210,act0211,act0212,act0213,act0214,act0215,act0216,act0217,act0218,act0219
  ,act0220,act0221,act0222,act0223,act0224,act0225,act0226,act0227,act0228,act0229
  ,act0230,act0231,act0232,act0233,act0234,act0235,act0236,act0237,act0238,act0239
  ,act0240,act0241,act0242,act0243,act0244,act0245,act0246,act0247,act0248,act0249
  ,act0250,act0251,act0252,act0253,act0254,act0255,act0256,act0257,act0258,act0259
  ,act0260,act0261,act0262,act0263,act0264,act0265,act0266,act0267,act0268,act0269
  ,act0270,act0271,act0272,act0273,act0274,act0275,act0276,act0277,act0278,act0279
  ,act0280,act0281,act0282,act0283,act0284,act0285,act0286,act0287,act0288,act0289
  ,act0290,act0291,act0292,act0293,act0294,act0295,act0296,act0297,act0298,act0299
  ,act0300,act0301,act0302,act0303,act0304,act0305,act0306,act0307,act0308,act0309
  ,act0310,act0311,act0312,act0313,act0314,act0315,act0316,act0317,act0318,act0319
  ,act0320,act0321,act0322,act0323,act0324,act0325,act0326,act0327,act0328,act0329
  ,act0330,act0331,act0332
}; // Size of table:1.332(x86)/2.664(x64) bytes.

/****************************************************************************\
* The successor matrix is used when the parser has reduced by prod A -> alfa *
* Used by LRParser to find newstate = successor(state,A).                    *
*                                                                            *
*                  succ0007[] = { 3, 5,3 , 6,2, 8,5 };                       *
*   Current state-------+         |  | |                                     *
*   Number of pairs in list ------+  | |                                     *
*   NonTerminal A--------------------+ |                                     *
*   Go to this state-------------------+                                     *
\****************************************************************************/
static const TableType succ0000[] = { 10,  87,   1,  88,   2,  89,   3,  90,   4,  91,   5
                                        ,  92,   6,  93,   7,  94,   8,  95,   9, 113,  14};
static const TableType succ0001[] = {  9,  88,  18,  89,   3,  90,   4,  91,   5,  92,   6
                                        ,  93,   7,  94,   8,  95,   9, 113,  14};
static const TableType succ0010[] = {  3,  96,  27,  97,  28,  98,  29};
static const TableType succ0011[] = {  4,  98,  33, 100,  34, 101,  31, 125,  32};
static const TableType succ0013[] = {  1, 110,  38};
static const TableType succ0014[] = {  1, 114,  43};
static const TableType succ0015[] = {  1, 110,  45};
static const TableType succ0016[] = { 17,  98,  74, 100,  78, 105,  63, 106,  53, 111,  46
                                        , 122,  47, 123,  49, 132,  52, 134,  54, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0021[] = {  1, 112,  87};
static const TableType succ0022[] = {  2,  92,  89, 113,  14};
static const TableType succ0023[] = {  2,  92,  90, 113,  14};
static const TableType succ0029[] = {  1,  99,  92};
static const TableType succ0032[] = {  1, 126, 101};
static const TableType succ0033[] = {  1,  98, 107};
static const TableType succ0035[] = {  3,  98,  33, 100,  34, 125, 108};
static const TableType succ0037[] = {  1,  98, 109};
static const TableType succ0038[] = { 17,  98,  74, 100,  78, 105,  63, 106,  53, 111, 110
                                        , 122,  47, 123,  49, 132,  52, 134,  54, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0042[] = {  1, 100, 111};
static const TableType succ0045[] = { 18,  98,  74, 100,  78, 105,  63, 106,  53, 111, 113
                                        , 115, 112, 122,  47, 123,  49, 132,  52, 134,  54
                                        , 135,  57, 136,  58, 137,  59, 138,  60, 139,  61
                                        , 140,  62, 142,  71, 144,  72};
static const TableType succ0046[] = {  2,  92, 114, 113,  14};
static const TableType succ0049[] = {  1, 124, 116};
static const TableType succ0050[] = { 15,  98,  74, 100,  78, 105,  63, 106,  53, 123, 120
                                        , 132,  52, 134,  54, 135,  57, 136,  58, 137,  59
                                        , 138,  60, 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0055[] = { 11,  98,  74, 100,  78, 105,  63, 135, 140, 136,  58
                                        , 137,  59, 138,  60, 139,  61, 140,  62, 142,  71
                                        , 144,  72};
static const TableType succ0056[] = { 11,  98,  74, 100,  78, 105,  63, 135, 141, 136,  58
                                        , 137,  59, 138,  60, 139,  61, 140,  62, 142,  71
                                        , 144,  72};
static const TableType succ0068[] = { 17,  92, 145,  98,  74, 100,  78, 105,  63, 106,  53
                                        , 113,  14, 123, 144, 132,  52, 134,  54, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0085[] = {  1,  98, 150};
static const TableType succ0086[] = {  1,  98, 151};
static const TableType succ0087[] = {  2,  92, 152, 113,  14};
static const TableType succ0091[] = {  2,  97, 153,  98,  29};
static const TableType succ0099[] = {  5,  98, 158, 100,  78, 102, 155, 104, 156, 105, 157};
static const TableType succ0100[] = {  3,  98,  33, 100,  34, 125, 159};
static const TableType succ0106[] = {  1,  98, 165};
static const TableType succ0108[] = {  1, 126, 166};
static const TableType succ0109[] = {  2,  92, 169, 113,  14};
static const TableType succ0112[] = {  1, 116, 172};
static const TableType succ0115[] = { 16,  98,  74, 100,  78, 105,  63, 106,  53, 122, 175
                                        , 123,  49, 132,  52, 134,  54, 135,  57, 136,  58
                                        , 137,  59, 138,  60, 139,  61, 140,  62, 142,  71
                                        , 144,  72};
static const TableType succ0117[] = { 15,  98,  74, 100,  78, 105,  63, 106,  53, 123, 176
                                        , 132,  52, 134,  54, 135,  57, 136,  58, 137,  59
                                        , 138,  60, 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0118[] = { 15,  98,  74, 100,  78, 105,  63, 106,  53, 123, 177
                                        , 132,  52, 134,  54, 135,  57, 136,  58, 137,  59
                                        , 138,  60, 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0119[] = {  2,  98, 178, 100, 179};
static const TableType succ0121[] = {  2,  92, 180, 113,  14};
static const TableType succ0124[] = { 12,  98,  74, 100,  78, 105,  63, 106, 185, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0126[] = { 12,  98,  74, 100,  78, 105,  63, 106, 188, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0127[] = { 12,  98,  74, 100,  78, 105,  63, 106, 189, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0128[] = { 12,  98,  74, 100,  78, 105,  63, 106, 190, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0129[] = { 12,  98,  74, 100,  78, 105,  63, 106, 191, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0130[] = { 12,  98,  74, 100,  78, 105,  63, 106, 192, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0131[] = { 12,  98,  74, 100,  78, 105,  63, 106, 193, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0132[] = { 12,  98,  74, 100,  78, 105,  63, 106, 194, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0133[] = { 12,  98,  74, 100,  78, 105,  63, 106, 195, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0134[] = { 13,  98,  74, 100,  78, 105,  63, 106, 197, 134, 196
                                        , 135,  57, 136,  58, 137,  59, 138,  60, 139,  61
                                        , 140,  62, 142,  71, 144,  72};
static const TableType succ0135[] = { 13,  98,  74, 100,  78, 105,  63, 106, 197, 134, 198
                                        , 135,  57, 136,  58, 137,  59, 138,  60, 139,  61
                                        , 140,  62, 142,  71, 144,  72};
static const TableType succ0136[] = { 13,  98,  74, 100,  78, 105,  63, 106, 197, 134, 199
                                        , 135,  57, 136,  58, 137,  59, 138,  60, 139,  61
                                        , 140,  62, 142,  71, 144,  72};
static const TableType succ0137[] = { 13,  98,  74, 100,  78, 105,  63, 106, 197, 134, 200
                                        , 135,  57, 136,  58, 137,  59, 138,  60, 139,  61
                                        , 140,  62, 142,  71, 144,  72};
static const TableType succ0138[] = { 13,  98,  74, 100,  78, 105,  63, 106, 197, 134, 201
                                        , 135,  57, 136,  58, 137,  59, 138,  60, 139,  61
                                        , 140,  62, 142,  71, 144,  72};
static const TableType succ0139[] = { 13,  98,  74, 100,  78, 105,  63, 106, 197, 134, 202
                                        , 135,  57, 136,  58, 137,  59, 138,  60, 139,  61
                                        , 140,  62, 142,  71, 144,  72};
static const TableType succ0142[] = {  1,  98, 203};
static const TableType succ0143[] = {  1,  98, 205};
static const TableType succ0146[] = { 12,  98,  74, 100,  78, 105,  63, 106, 208, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0147[] = {  2, 110, 210, 141, 209};
static const TableType succ0148[] = { 14,  98,  74, 100,  78, 105,  63, 106, 213, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 143, 212, 144,  72, 146, 214};
static const TableType succ0149[] = { 15,  98,  74, 100,  78, 105,  63, 106,  53, 123, 215
                                        , 132,  52, 134,  54, 135,  57, 136,  58, 137,  59
                                        , 138,  60, 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0154[] = {  1, 100, 216};
static const TableType succ0155[] = {  1, 103, 217};
static const TableType succ0160[] = {  3,  98,  33, 100,  34, 125, 221};
static const TableType succ0167[] = {  7,  92, 224,  98, 158, 100,  78, 105, 225, 107, 223
                                        , 113,  14, 149, 226};
static const TableType succ0170[] = {  1,  98, 228};
static const TableType succ0172[] = {  1, 103, 229};
static const TableType succ0173[] = {  4,  98,  33, 100,  34, 101, 230, 125,  32};
static const TableType succ0174[] = { 12,  98,  74, 100,  78, 105,  63, 106, 231, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0181[] = { 17,  92, 234,  98,  74, 100,  78, 105,  63, 106, 235
                                        , 109, 237, 113,  14, 133, 233, 135,  57, 136,  58
                                        , 137,  59, 138,  60, 139,  61, 140,  62, 142,  71
                                        , 144,  72, 147, 236};
static const TableType succ0183[] = { 12,  98,  74, 100,  78, 105,  63, 106, 239, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0184[] = { 12,  98,  74, 100,  78, 105,  63, 106, 240, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0210[] = { 12,  98,  74, 100,  78, 105,  63, 106, 245, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0218[] = {  4,  98, 158, 100,  78, 104, 250, 105, 157};
static const TableType succ0219[] = { 15,  98,  74, 100,  78, 105,  63, 106,  53, 123, 251
                                        , 132,  52, 134,  54, 135,  57, 136,  58, 137,  59
                                        , 138,  60, 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0220[] = { 12,  98,  74, 100,  78, 105,  63, 106, 252, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0222[] = {  3,  98,  33, 100,  34, 125, 254};
static const TableType succ0227[] = { 14,  98,  74, 100,  78, 105,  63, 106, 235, 108, 258
                                        , 109, 259, 135,  57, 136,  58, 137,  59, 138,  60
                                        , 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0228[] = {  1, 103, 260};
static const TableType succ0229[] = {  1, 117, 261};
static const TableType succ0231[] = {  1, 120, 263};
static const TableType succ0238[] = { 17,  92, 234,  98,  74, 100,  78, 105,  63, 106, 235
                                        , 109, 237, 113,  14, 133, 267, 135,  57, 136,  58
                                        , 137,  59, 138,  60, 139,  61, 140,  62, 142,  71
                                        , 144,  72, 147, 236};
static const TableType succ0242[] = { 12,  98,  74, 100,  78, 105,  63, 106, 269, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0243[] = {  1,  99, 270};
static const TableType succ0247[] = { 13,  98,  74, 100,  78, 105,  63, 106, 213, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72, 146, 271};
static const TableType succ0248[] = { 15,  98,  74, 100,  78, 105,  63, 106,  53, 123, 272
                                        , 132,  52, 134,  54, 135,  57, 136,  58, 137,  59
                                        , 138,  60, 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0253[] = { 15,  98,  74, 100,  78, 105,  63, 106,  53, 123, 273
                                        , 132,  52, 134,  54, 135,  57, 136,  58, 137,  59
                                        , 138,  60, 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0255[] = {  2,  92, 277, 113,  14};
static const TableType succ0256[] = {  4,  98, 158, 100,  78, 105, 225, 149, 278};
static const TableType succ0261[] = {  1, 118, 281};
static const TableType succ0266[] = { 12,  98,  74, 100,  78, 105,  63, 106, 285, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0268[] = { 12,  98,  74, 100,  78, 105,  63, 106, 287, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0272[] = {  1, 145, 289};
static const TableType succ0274[] = { 15,  98,  74, 100,  78, 105,  63, 106,  53, 123, 291
                                        , 132,  52, 134,  54, 135,  57, 136,  58, 137,  59
                                        , 138,  60, 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0276[] = {  2,  92, 293, 113,  14};
static const TableType succ0281[] = {  1, 119, 295};
static const TableType succ0282[] = { 15,  98,  74, 100,  78, 105,  63, 106,  53, 123, 297
                                        , 132,  52, 134,  54, 135,  57, 136,  58, 137,  59
                                        , 138,  60, 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0283[] = { 17,  98,  74, 100,  78, 105,  63, 106,  53, 123, 300
                                        , 127, 298, 128, 299, 132,  52, 134,  54, 135,  57
                                        , 136,  58, 137,  59, 138,  60, 139,  61, 140,  62
                                        , 142,  71, 144,  72};
static const TableType succ0284[] = {  8, 100, 303, 121, 301, 136, 305, 137, 306, 138, 307
                                        , 139, 308, 140, 309, 148, 302};
static const TableType succ0290[] = { 15,  98,  74, 100,  78, 105,  63, 106,  53, 123, 311
                                        , 132,  52, 134,  54, 135,  57, 136,  58, 137,  59
                                        , 138,  60, 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0292[] = { 14,  98,  74, 100,  78, 105,  63, 106, 235, 108, 313
                                        , 109, 259, 135,  57, 136,  58, 137,  59, 138,  60
                                        , 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0304[] = {  1, 100, 319};
static const TableType succ0315[] = { 14,  98,  74, 100,  78, 105,  63, 106, 324, 129, 322
                                        , 130, 323, 135,  57, 136,  58, 137,  59, 138,  60
                                        , 139,  61, 140,  62, 142,  71, 144,  72};
static const TableType succ0316[] = { 16,  98,  74, 100,  78, 105,  63, 106,  53, 123, 300
                                        , 128, 325, 132,  52, 134,  54, 135,  57, 136,  58
                                        , 137,  59, 138,  60, 139,  61, 140,  62, 142,  71
                                        , 144,  72};
static const TableType succ0318[] = {  7, 100, 303, 136, 305, 137, 306, 138, 307, 139, 308
                                        , 140, 309, 148, 326};
static const TableType succ0324[] = {  1, 131, 329};
static const TableType succ0328[] = { 13,  98,  74, 100,  78, 105,  63, 106, 324, 130, 332
                                        , 135,  57, 136,  58, 137,  59, 138,  60, 139,  61
                                        , 140,  62, 142,  71, 144,  72};

// Total size of all succNNNN tables:3.744(x86)/3.912(x64) bytes.

#define succ0159 succ0032  /* Saved 8(x86)/8(x64) bytes */
#define succ0221 succ0032  /* Saved 8(x86)/8(x64) bytes */
#define succ0254 succ0032  /* Saved 8(x86)/8(x64) bytes */

static const TableType *successor[333] = {
   succ0000,succ0001,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL
  ,succ0010,succ0011,NULL    ,succ0013,succ0014,succ0015,succ0016,NULL    ,NULL    ,NULL
  ,NULL    ,succ0021,succ0022,succ0023,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0029
  ,NULL    ,NULL    ,succ0032,succ0033,NULL    ,succ0035,NULL    ,succ0037,succ0038,NULL
  ,NULL    ,NULL    ,succ0042,NULL    ,NULL    ,succ0045,succ0046,NULL    ,NULL    ,succ0049
  ,succ0050,NULL    ,NULL    ,NULL    ,NULL    ,succ0055,succ0056,NULL    ,NULL    ,NULL
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0068,NULL
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0085,succ0086,succ0087,NULL    ,NULL
  ,NULL    ,succ0091,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0099
  ,succ0100,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0106,NULL    ,succ0108,succ0109
  ,NULL    ,NULL    ,succ0112,NULL    ,NULL    ,succ0115,NULL    ,succ0117,succ0118,succ0119
  ,NULL    ,succ0121,NULL    ,NULL    ,succ0124,NULL    ,succ0126,succ0127,succ0128,succ0129
  ,succ0130,succ0131,succ0132,succ0133,succ0134,succ0135,succ0136,succ0137,succ0138,succ0139
  ,NULL    ,NULL    ,succ0142,succ0143,NULL    ,NULL    ,succ0146,succ0147,succ0148,succ0149
  ,NULL    ,NULL    ,NULL    ,NULL    ,succ0154,succ0155,NULL    ,NULL    ,NULL    ,succ0159
  ,succ0160,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0167,NULL    ,NULL
  ,succ0170,NULL    ,succ0172,succ0173,succ0174,NULL    ,NULL    ,NULL    ,NULL    ,NULL
  ,NULL    ,succ0181,NULL    ,succ0183,succ0184,NULL    ,NULL    ,NULL    ,NULL    ,NULL
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL
  ,succ0210,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0218,succ0219
  ,succ0220,succ0221,succ0222,NULL    ,NULL    ,NULL    ,NULL    ,succ0227,succ0228,succ0229
  ,NULL    ,succ0231,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0238,NULL
  ,NULL    ,NULL    ,succ0242,succ0243,NULL    ,NULL    ,NULL    ,succ0247,succ0248,NULL
  ,NULL    ,NULL    ,NULL    ,succ0253,succ0254,succ0255,succ0256,NULL    ,NULL    ,NULL
  ,NULL    ,succ0261,NULL    ,NULL    ,NULL    ,NULL    ,succ0266,NULL    ,succ0268,NULL
  ,NULL    ,NULL    ,succ0272,NULL    ,succ0274,NULL    ,succ0276,NULL    ,NULL    ,NULL
  ,NULL    ,succ0281,succ0282,succ0283,succ0284,NULL    ,NULL    ,NULL    ,NULL    ,NULL
  ,succ0290,NULL    ,succ0292,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL
  ,NULL    ,NULL    ,NULL    ,NULL    ,succ0304,NULL    ,NULL    ,NULL    ,NULL    ,NULL
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0315,succ0316,NULL    ,succ0318,NULL
  ,NULL    ,NULL    ,NULL    ,NULL    ,succ0324,NULL    ,NULL    ,NULL    ,succ0328,NULL
  ,NULL    ,NULL    ,NULL
}; // Size of pointertable:1.332(x86)/2.664(x64) bytes.

/****************************************************************************\
* The productionLength[] array is indexed by production number and holds     *
* the number of symbols on the right side of each production.                *
\****************************************************************************/
static const unsigned char productionLength[189] = {
  /*   0 */    1,   2,   1,   2,   1,   2,   1,   2,   2,   2,
  /*  10 */    2,   3,   1,   2,   1,   1,   1,   4,   1,   1,
  /*  20 */    1,   5,   3,   1,   3,  11,   8,  10,   7,   7,
  /*  30 */    4,   0,   1,   6,   4,   3,   3,   2,   8,   6,
  /*  40 */    0,   4,   0,   1,   0,   1,   1,   1,   2,   3,
  /*  50 */    0,   1,   3,   1,   1,   2,   0,   2,   2,   0,
  /*  60 */    2,   3,   1,   1,   3,   2,   1,   6,   8,   0,
  /*  70 */    1,   1,   1,   1,   2,   2,   2,   2,   0,   2,
  /*  80 */    0,   2,   0,   3,   3,   1,   1,   0,   3,   3,
  /*  90 */    1,   2,   0,   1,   1,   3,   3,   2,   4,   1,
  /* 100 */    5,   6,   3,   4,   3,   4,   1,   5,   6,   3,
  /* 110 */    3,   3,   3,   3,   3,   1,   3,   3,   3,   3,
  /* 120 */    3,   3,   3,   2,   2,   1,   1,   1,   1,   1,
  /* 130 */    1,   1,   1,   1,   1,   1,   3,   6,   3,   4,
  /* 140 */    4,   1,   7,   1,   3,   0,   1,   0,   2,   1,
  /* 150 */    1,   1,   0,   1,   3,   1,   3,   1,   1,   1,
  /* 160 */    1,   2,   1,   3,   3,   3,   1,   1,   1,   1,
  /* 170 */    3,   1,   3,   3,   1,   2,   1,   1,   1,   1,
  /* 180 */    1,   1,   1,   1,   1,   1,   1,   1,   1
}; // Size of table:192(x86)/192(x64) bytes.

/****************************************************************************\
* The leftSide[] array is indexed by production number, and holds the        *
* nonTerminal symbol on the left side of each production.                    *
\****************************************************************************/
static const TableType leftSide[189] = {
  /*   0 */   86,  87,  87,  88,  88,  88,  88,  88,  88,  88,
  /*  10 */   95,  96,  96,  97,  99,  99,  99,  99,  99,  99,
  /*  20 */   99,  89, 102, 102, 104,  90,  90,  90,  90,  90,
  /*  30 */   90, 108, 108,  91,  92,  92,  92,  92, 113,  93,
  /*  40 */  120, 120, 112, 112, 110, 110, 110, 110, 110, 110,
  /*  50 */  115, 115, 111, 111, 122, 122, 124, 124, 124, 116,
  /*  60 */  116, 101, 101, 125, 125, 125, 125, 125, 125, 126,
  /*  70 */  126, 126, 126, 126, 126, 126, 126, 126, 103, 103,
  /*  80 */  118, 118, 117, 117, 127, 127, 128, 119, 119, 129,
  /*  90 */  129, 130, 131, 131, 131, 123, 123, 123, 123, 123,
  /* 100 */  123, 123, 123, 123, 123, 123, 123, 132, 132, 134,
  /* 110 */  134, 134, 134, 134, 134, 134, 106, 106, 106, 106,
  /* 120 */  106, 106, 106, 106, 106, 106, 135, 135, 135, 135,
  /* 130 */  135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
  /* 140 */  135, 135, 144, 143, 143, 146, 146, 145, 145, 133,
  /* 150 */  133, 147, 114, 114, 109, 109, 121, 121, 142, 142,
  /* 160 */  142, 141, 141, 105, 105, 105, 105, 105, 105, 107,
  /* 170 */  107, 149,  94,  94, 148, 148, 148, 148, 148, 148,
  /* 180 */  148,  98, 100, 136, 137, 138, 139, 140, 140
}; // Size of table:380(x86)/384(x64) bytes.

/****************************************************************************\
* The rightSide[] matrix is indexed by production number and holds           *
* the right side symbols of each production.                                 *
* Compressed and only used for debugging.                                    *
\****************************************************************************/
static const TableType rightSideTable[410] = {
  /*   0 */   87
  /*   1 */ , 87, 88
  /*   2 */ , 88
  /*   3 */ , 89, 60
  /*   4 */ , 90
  /*   5 */ , 91, 60
  /*   6 */ , 92
  /*   7 */ , 93, 60
  /*   8 */ , 94, 60
  /*   9 */ , 95, 60
  /*  10 */ , 42, 96
  /*  11 */ , 96, 61, 97
  /*  12 */ , 97
  /*  13 */ , 98, 99
  /*  14 */ , 59
  /*  15 */ , 58
  /*  16 */ , 55
  /*  17 */ , 55, 81,100, 82
  /*  18 */ , 54
  /*  19 */ , 57
  /*  20 */ , 56
  /*  21 */ , 49,101, 46,102,103
  /*  22 */ ,102, 61,104
  /*  23 */ ,104
  /*  24 */ ,105, 65,106
  /*  25 */ , 30, 33, 98, 81,107, 82, 50, 81,108, 82, 60
  /*  26 */ , 30, 33, 98, 50, 81,108, 82, 60
  /*  27 */ , 30, 33, 98, 81,107, 82, 81, 92, 82, 60
  /*  28 */ , 30, 33, 98, 81, 92, 82, 60
  /*  29 */ , 30, 33, 98, 81,107, 82, 92
  /*  30 */ , 30, 33, 98, 92
  /*  32 */ ,109
  /*  33 */ , 18,110,111, 24, 98,103
  /*  34 */ , 92, 62,112, 92
  /*  35 */ , 92, 64, 92
  /*  36 */ , 92, 63, 92
  /*  37 */ ,113,114
  /*  38 */ , 45,110,115,116,103,117,118,119
  /*  39 */ , 52,111, 92, 53,106,120
  /*  41 */ , 28, 81,121, 82
  /*  43 */ ,  6
  /*  45 */ ,  6
  /*  46 */ , 20
  /*  47 */ , 21
  /*  48 */ , 48,100
  /*  49 */ , 48,100, 43
  /*  51 */ ,111
  /*  52 */ ,111, 61,122
  /*  53 */ ,122
  /*  54 */ , 77
  /*  55 */ ,123,124
  /*  57 */ ,  7, 98
  /*  58 */ ,  7,100
  /*  60 */ , 24,101
  /*  61 */ ,101, 61,125
  /*  62 */ ,125
  /*  63 */ , 98
  /*  64 */ , 98,  7, 98
  /*  65 */ , 98, 98
  /*  66 */ ,100
  /*  67 */ ,125,126, 35,125, 39,123
  /*  68 */ , 81,125,126, 35,125, 39,123, 82
  /*  70 */ , 32
  /*  71 */ , 31
  /*  72 */ , 44
  /*  73 */ , 36
  /*  74 */ , 36, 31
  /*  75 */ , 36, 32
  /*  76 */ , 44, 31
  /*  77 */ , 44, 32
  /*  79 */ , 51,123
  /*  81 */ , 26,123
  /*  83 */ , 25, 12,127
  /*  84 */ ,127, 61,128
  /*  85 */ ,128
  /*  86 */ ,123
  /*  88 */ , 40, 12,129
  /*  89 */ ,129, 61,130
  /*  90 */ ,130
  /*  91 */ ,106,131
  /*  93 */ ,  8
  /*  94 */ , 19
  /*  95 */ ,123, 71,123
  /*  96 */ ,123, 72,123
  /*  97 */ , 73,123
  /*  98 */ , 23, 81, 92, 82
  /*  99 */ ,132
  /* 100 */ ,106, 28, 81,133, 82
  /* 101 */ ,106, 73, 28, 81,133, 82
  /* 102 */ ,106, 37,106
  /* 103 */ ,106, 73, 37,106
  /* 104 */ ,106, 34, 38
  /* 105 */ ,106, 34, 73, 38
  /* 106 */ ,134
  /* 107 */ ,106,  9,106, 72,106
  /* 108 */ ,106, 73,  9,106, 72,106
  /* 109 */ ,134, 68,134
  /* 110 */ ,134, 67,134
  /* 111 */ ,134, 70,134
  /* 112 */ ,134, 69,134
  /* 113 */ ,134, 65,134
  /* 114 */ ,134, 66,134
  /* 115 */ ,106
  /* 116 */ ,106, 75,106
  /* 117 */ ,106, 76,106
  /* 118 */ ,106, 74,106
  /* 119 */ ,106, 77,106
  /* 120 */ ,106, 78,106
  /* 121 */ ,106, 79,106
  /* 122 */ ,106, 80,106
  /* 123 */ , 76,135
  /* 124 */ , 75,135
  /* 125 */ ,135
  /* 126 */ ,136
  /* 127 */ ,137
  /* 128 */ ,138
  /* 129 */ ,139
  /* 130 */ ,140
  /* 131 */ ,105
  /* 132 */ , 15
  /* 133 */ , 16
  /* 134 */ , 17
  /* 135 */ , 38
  /* 136 */ , 81,123, 82
  /* 137 */ , 13, 81,106,  7, 99, 82
  /* 138 */ , 81, 92, 82
  /* 139 */ , 14, 81,141, 82
  /* 140 */ ,142, 81,143, 82
  /* 141 */ ,144
  /* 142 */ , 27, 81,123, 61,123,145, 82
  /* 143 */ ,146
  /* 144 */ ,143, 61,146
  /* 146 */ ,106
  /* 148 */ , 61,123
  /* 149 */ , 92
  /* 150 */ ,147
  /* 151 */ ,109
  /* 153 */ , 60
  /* 154 */ ,109, 61,106
  /* 155 */ ,106
  /* 156 */ ,121, 61,148
  /* 157 */ ,148
  /* 158 */ , 98
  /* 159 */ , 36
  /* 160 */ , 44
  /* 161 */ ,110,106
  /* 162 */ , 77
  /* 163 */ ,105, 83, 98
  /* 164 */ ,105, 83, 77
  /* 165 */ ,105, 84, 98
  /* 166 */ , 98
  /* 167 */ , 41
  /* 168 */ ,100
  /* 169 */ ,149
  /* 170 */ ,107, 61,149
  /* 171 */ ,105
  /* 172 */ , 22, 47, 98
  /* 173 */ , 22, 29, 98
  /* 174 */ ,100
  /* 175 */ , 76,100
  /* 176 */ ,136
  /* 177 */ ,137
  /* 178 */ ,138
  /* 179 */ ,139
  /* 180 */ ,140
  /* 181 */ , 85
  /* 182 */ ,  2
  /* 183 */ ,  1
  /* 184 */ ,  3
  /* 185 */ ,  4
  /* 186 */ ,  5
  /* 187 */ , 11
  /* 188 */ , 10
}; // Size of table:820(x86)/824(x64) bytes.

/****************************************************************************\
* The symbolName[] array is indexed by symbol and holds                      *
* the name of each symbol (terminal or nonTerminal).                         *
* Used for debugging.                                                        *
\****************************************************************************/
static const TCHAR *symbolName[150] = {
  /*   0 */ _T("EOI"                   ),
  /*   1 */ _T("STRING"                ),
  /*   2 */ _T("NUMBER"                ),
  /*   3 */ _T("DATECONST"             ),
  /*   4 */ _T("TIMECONST"             ),
  /*   5 */ _T("TIMESTAMPCONST"        ),
  /*   6 */ _T("ALL"                   ),
  /*   7 */ _T("AS"                    ),
  /*   8 */ _T("ASCENDING"             ),
  /*   9 */ _T("BETWEEN"               ),
  /*  10 */ _T("BOOLFALSE"             ),
  /*  11 */ _T("BOOLTRUE"              ),
  /*  12 */ _T("BY"                    ),
  /*  13 */ _T("CAST"                  ),
  /*  14 */ _T("COUNT"                 ),
  /*  15 */ _T("CURRENTDATE"           ),
  /*  16 */ _T("CURRENTTIME"           ),
  /*  17 */ _T("CURRENTTIMESTAMP"      ),
  /*  18 */ _T("DELETESYM"             ),
  /*  19 */ _T("DESCENDING"            ),
  /*  20 */ _T("DISTINCT"              ),
  /*  21 */ _T("DISTINCTROW"           ),
  /*  22 */ _T("DROP"                  ),
  /*  23 */ _T("EXISTS"                ),
  /*  24 */ _T("FROM"                  ),
  /*  25 */ _T("GROUp"                 ),
  /*  26 */ _T("HAVING"                ),
  /*  27 */ _T("IIF"                   ),
  /*  28 */ _T("INSYM"                 ),
  /*  29 */ _T("INDEX"                 ),
  /*  30 */ _T("INSERT"                ),
  /*  31 */ _T("INNER"                 ),
  /*  32 */ _T("OUTER"                 ),
  /*  33 */ _T("INTO"                  ),
  /*  34 */ _T("IS"                    ),
  /*  35 */ _T("JOIN"                  ),
  /*  36 */ _T("LEFT"                  ),
  /*  37 */ _T("LIKE"                  ),
  /*  38 */ _T("NULLVAL"               ),
  /*  39 */ _T("ON"                    ),
  /*  40 */ _T("ORDER"                 ),
  /*  41 */ _T("PARAM"                 ),
  /*  42 */ _T("PARAMETERS"            ),
  /*  43 */ _T("PERCENT"               ),
  /*  44 */ _T("RIGHT"                 ),
  /*  45 */ _T("SELECT"                ),
  /*  46 */ _T("SET"                   ),
  /*  47 */ _T("TABLE"                 ),
  /*  48 */ _T("TOP"                   ),
  /*  49 */ _T("UPDATE"                ),
  /*  50 */ _T("VALUES"                ),
  /*  51 */ _T("WHERE"                 ),
  /*  52 */ _T("TRANSFORM"             ),
  /*  53 */ _T("PIVOT"                 ),
  /*  54 */ _T("TYPEBIT"               ),
  /*  55 */ _T("TYPETEXT"              ),
  /*  56 */ _T("TYPEVALUE"             ),
  /*  57 */ _T("TYPEDOUBLE"            ),
  /*  58 */ _T("TYPELONG"              ),
  /*  59 */ _T("TYPEDATETIME"          ),
  /*  60 */ _T("SEMI"                  ),
  /*  61 */ _T("COMMA"                 ),
  /*  62 */ _T("UNION"                 ),
  /*  63 */ _T("SETDIFFERENCE"         ),
  /*  64 */ _T("INTERSECT"             ),
  /*  65 */ _T("EQUAL"                 ),
  /*  66 */ _T("NOTEQ"                 ),
  /*  67 */ _T("RELOPLE"               ),
  /*  68 */ _T("RELOPLT"               ),
  /*  69 */ _T("RELOPGE"               ),
  /*  70 */ _T("RELOPGT"               ),
  /*  71 */ _T("OR"                    ),
  /*  72 */ _T("AND"                   ),
  /*  73 */ _T("NOT"                   ),
  /*  74 */ _T("CONCAT"                ),
  /*  75 */ _T("PLUS"                  ),
  /*  76 */ _T("MINUS"                 ),
  /*  77 */ _T("STAR"                  ),
  /*  78 */ _T("DIVOP"                 ),
  /*  79 */ _T("MODOP"                 ),
  /*  80 */ _T("EXPO"                  ),
  /*  81 */ _T("LPAR"                  ),
  /*  82 */ _T("RPAR"                  ),
  /*  83 */ _T("DOT"                   ),
  /*  84 */ _T("EXCLAMATION"           ),
  /*  85 */ _T("NAME"                  ),
  /*  86 */ _T("start"                 ),
  /*  87 */ _T("stmt_list"             ),
  /*  88 */ _T("stmt"                  ),
  /*  89 */ _T("update_stmt"           ),
  /*  90 */ _T("insert_stmt"           ),
  /*  91 */ _T("delete_stmt"           ),
  /*  92 */ _T("select_stmt"           ),
  /*  93 */ _T("transform_stmt"        ),
  /*  94 */ _T("drop_stmt"             ),
  /*  95 */ _T("parameter_stmt"        ),
  /*  96 */ _T("parameter_list"        ),
  /*  97 */ _T("parameter"             ),
  /*  98 */ _T("name"                  ),
  /*  99 */ _T("type"                  ),
  /* 100 */ _T("number_const"          ),
  /* 101 */ _T("from_table_list"       ),
  /* 102 */ _T("assign_list"           ),
  /* 103 */ _T("opt_where"             ),
  /* 104 */ _T("assign"                ),
  /* 105 */ _T("tab_col"               ),
  /* 106 */ _T("expr"                  ),
  /* 107 */ _T("insert_elem_list"      ),
  /* 108 */ _T("opt_expr_list"         ),
  /* 109 */ _T("expr_list"             ),
  /* 110 */ _T("opt_alldistinct"       ),
  /* 111 */ _T("select_list"           ),
  /* 112 */ _T("opt_all"               ),
  /* 113 */ _T("simple_select"         ),
  /* 114 */ _T("opt_semi"              ),
  /* 115 */ _T("opt_select_list"       ),
  /* 116 */ _T("opt_from"              ),
  /* 117 */ _T("opt_groupby"           ),
  /* 118 */ _T("opt_having"            ),
  /* 119 */ _T("opt_orderby"           ),
  /* 120 */ _T("opt_pivotlist"         ),
  /* 121 */ _T("const_list"            ),
  /* 122 */ _T("select_elem"           ),
  /* 123 */ _T("search_condition"      ),
  /* 124 */ _T("opt_alias"             ),
  /* 125 */ _T("from_table"            ),
  /* 126 */ _T("opt_join_type"         ),
  /* 127 */ _T("groupby_list"          ),
  /* 128 */ _T("group_elem"            ),
  /* 129 */ _T("order_elem_list"       ),
  /* 130 */ _T("order_elem"            ),
  /* 131 */ _T("opt_ascdesc"           ),
  /* 132 */ _T("between_condition"     ),
  /* 133 */ _T("set_expr"              ),
  /* 134 */ _T("bool_expr"             ),
  /* 135 */ _T("unary"                 ),
  /* 136 */ _T("string_const"          ),
  /* 137 */ _T("date_const"            ),
  /* 138 */ _T("time_const"            ),
  /* 139 */ _T("timestamp_const"       ),
  /* 140 */ _T("bool_const"            ),
  /* 141 */ _T("count_arg"             ),
  /* 142 */ _T("funcname"              ),
  /* 143 */ _T("opt_funcparameter_list"),
  /* 144 */ _T("iif_expression"        ),
  /* 145 */ _T("opt_falsepart"         ),
  /* 146 */ _T("funcparameter"         ),
  /* 147 */ _T("set_expr_list"         ),
  /* 148 */ _T("constsymbol"           ),
  /* 149 */ _T("insert_elem"           )
}; // Total size of strings:2.738(x86)/2.738(x64) bytes, size of pointertable:600(x86)/1.200(x64) bytes.

static const ParserShortTables SqlTables_s(compressedSet, compressedLasets
                                          ,action, successor, productionLength, leftSide
                                          ,rightSideTable, symbolName
                                          ,86, 150, 189, 333);

const ParserTables *SqlParser::SqlTables = &SqlTables_s;
// Size of SqlTables_s: 48(x86)/88(x64) bytes. Size of SqlTables:4(x86)/8(x64) bytes


// Total size of table data:18.878(x86)/22.610(x64) bytes.


