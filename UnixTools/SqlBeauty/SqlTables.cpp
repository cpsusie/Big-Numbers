/* DO NOT EDIT THIS FILE - it is machine generated */
#line 81 "C:\\Mytools2015\\UnixTools\\sqlbeauty\\Sql.y"
#include "stdafx.h"
#include "SqlParser.h"
#line 36 "C:\\mytools2015\\ParserGen\\lib\\parsergencpp.par"
/**********************************************************************************\
* The 4 arrays actionCode, termListTable, actionListTable and termSetTable         *
* holds a compressed action-matrix, used by LRParser to find                       *
* action = getAction(S,T), where S is current state, T is next terminal on input   *
*                                                                                  *
* The interpretation of action is:                                                 *
*   action <  0 - Reduce by production p, p == -action.                            *
*   action == 0 - Accept. Reduce by production 0.                                  *
*   action >  0 - Shift to newstate (=action),                                     *
*                 ie. push(newstate), set current state=newstate                   *
*                 and advance input 1 symbol.                                      *
*   action == _ParserError - Unexpected input. Do some recovery, to try to         *
*                 synchronize input and stack, in order to continue parse.         *
*                 (See LRParser::recover() in LRParser.cpp)                        *
*                                                                                  *
* For each state S, a #define is generated and used as element S in array          *
* actionCode. Each define looks as:                                                *
*                                                                                  *
* #define _acDDDD Code                                                             *
*                                                                                  *
* where DDDD is the statenumber S and Code is an unsigned int with the following   *
* format:                                                                          *
*                   0         1         2         3                                *
* Bit index:        01234567890123456789012345678901                               *
* Code     :        tttttttttttttttIFaaaaaaaaaaaaaaa                               *
*                                                                                  *
* t          : Bit[ 0-14]: unsigned short                                          *
* a          : Bit[17-31]: signed short                                            *
* F          : Bit 16    : Indicates how to interpret t and a.                     *
* I          : Bit 15    : In case F==1, indicates how to interpret t.             *
*                                                                                  *
* F == 0: Uncompressed Format.                                                     *
*      t: Index into array termListTable, pointing at the first element of         *
*         termList (see below).                                                    *
*      a: Index into array actionListTable, pointing at the first element of       *
*         actionList (see below).                                                  *
* F == 1: Compressed Format, used if there is only 1 possible action, a.           *
*         I==0: There is only 1 legal terminal in the state.                       *
*            t: Legal terminal.                                                    *
*            a: Action.                                                            *
*                                                                                  *
*         I==1: All actions in the state are reduce by the same production P = -a. *
*            t: Index into termSetTable, pointing at the first element of termSet  *
*               (see below).                                                       *
*            a: Action.                                                            *
*                                                                                  *
* F == 0: Use arrays termListTable and actionListTable to find action.             *
*      n                 : termListTable[t] = number of elements in termList.      *
*      termList[0..n-1]  : termListTable[t+1..t+n]                                 *
*                          Ordered list of legal terminals                         *
*      actionList[0..n-1]: actionListTable[a..a+n-1] (same length as termList).    *
*                                                                                  *
*      To get action, find index k in termList, so termList[k] == T                *
*      and set action = actionList[k]. If T is not found, set action = _ParseError.*
*      Note that both termList and actionList may be shared by several states.     *
*                                                                                  *
* F == 1 and I==1: Use array termSetTable which is a list of termSet, bitsets,     *
*                  each with terminalCount bits, 1-bits for legal terminals, and   *
*                  0-bits for illegal terminals.                                   *
*                                                                                  *
*      b                 : Number of bytes in each termSet = (terminalCount-1)/8+1 *
*      termSet[0..b-1]   : termSetTable[t..t+b-1]                                  *
*                                                                                  *
*      As for uncompressed states, the same check for existence is done.           *
*      If terminal T is not present in termSet, set action = _ParseError.          *
*      Note that each termSet may be shared by several states.                     *
\**********************************************************************************/

#define _ac0000 0x00000000 /* termList   0, actionList   0            */
#define _ac0001 0x000e0008 /* termList   1, actionList   1            */
#define _ac0002 0xfffd8000 /* Reduce by 2 on tokens in termSet[0]     */
#define _ac0003 0x0027003c /* Shift  to 19 on SEMI                    */
#define _ac0004 0xfff98000 /* Reduce by 4 on tokens in termSet[0]     */
#define _ac0005 0x0029003c /* Shift  to 20 on SEMI                    */
#define _ac0006 0x001e0011 /* termList   2, actionList   2            */
#define _ac0007 0x0031003c /* Shift  to 24 on SEMI                    */
#define _ac0008 0x0033003c /* Shift  to 25 on SEMI                    */
#define _ac0009 0x0035003c /* Shift  to 26 on SEMI                    */
#define _ac0010 0x003d0055 /* Shift  to 30 on NAME                    */
#define _ac0011 0x0034001d /* termList   3, actionList   3            */
#define _ac0012 0x004b0021 /* Shift  to 37 on INTO                    */
#define _ac0013 0x003a0021 /* termList   4, actionList   4            */
#define _ac0014 0x0072003e /* termList   5, actionList   5            */
#define _ac0015 0x008e004d /* termList   6, actionList   6            */
#define _ac0016 0x00ec007d /* termList   7, actionList   7            */
#define _ac0017 0x011c0096 /* termList   8, actionList   8            */
#define _ac0018 0xffff8000 /* Reduce by 1 on tokens in termSet[0]     */
#define _ac0019 0xfffb8000 /* Reduce by 3 on tokens in termSet[0]     */
#define _ac0020 0xfff78000 /* Reduce by 5 on tokens in termSet[0]     */
#define _ac0021 0x01200099 /* termList   9, actionList   9            */
#define _ac0022 0x001f002d /* Shift  to 15 on SELECT                  */
#define _ac0023 0x001f002d /* Shift  to 15 on SELECT                  */
#define _ac0024 0xfff38000 /* Reduce by 7 on tokens in termSet[0]     */
#define _ac0025 0xfff18000 /* Reduce by 8 on tokens in termSet[0]     */
#define _ac0026 0xffef8000 /* Reduce by 9 on tokens in termSet[0]     */
#define _ac0027 0x0124009c /* termList  10, actionList  10            */
#define _ac0028 0xffe9800b /* Reduce by 12 on tokens in termSet[1]    */
#define _ac0029 0x0128009f /* termList  11, actionList  11            */
#define _ac0030 0xfe978016 /* Reduce by 181 on tokens in termSet[2]   */
#define _ac0031 0x013400a6 /* termList  12, actionList  12            */
#define _ac0032 0x013800a9 /* termList  13, actionList  13            */
#define _ac0033 0x016a00c3 /* termList  14, actionList  14            */
#define _ac0034 0xff7d8021 /* Reduce by 66 on tokens in termSet[3]    */
#define _ac0035 0x0034001d /* termList   3, actionList   3            */
#define _ac0036 0xfe95802c /* Reduce by 182 on tokens in termSet[4]   */
#define _ac0037 0x003d0055 /* Shift  to 30 on NAME                    */
#define _ac0038 0x00ec007d /* termList   7, actionList   7            */
#define _ac0039 0xffa78037 /* Reduce by 45 on tokens in termSet[5]    */
#define _ac0040 0xffa58037 /* Reduce by 46 on tokens in termSet[5]    */
#define _ac0041 0xffa38037 /* Reduce by 47 on tokens in termSet[5]    */
#define _ac0042 0x00490002 /* Shift  to 36 on NUMBER                  */
#define _ac0043 0xffb78042 /* Reduce by 37 on tokens in termSet[6]    */
#define _ac0044 0xfecf8042 /* Reduce by 153 on tokens in termSet[6]   */
#define _ac0045 0x01a200e0 /* termList  15, actionList  15            */
#define _ac0046 0x01f8010c /* termList  16, actionList  16            */
#define _ac0047 0xff97804d /* Reduce by 53 on tokens in termSet[7]    */
#define _ac0048 0xff95804d /* Reduce by 54 on tokens in termSet[7]    */
#define _ac0049 0x01fc010f /* termList  17, actionList  17            */
#define _ac0050 0x022a0127 /* termList  18, actionList  18            */
#define _ac0051 0x00f30051 /* Shift  to 121 on LPAR                   */
#define _ac0052 0xff3b8058 /* Reduce by 99 on tokens in termSet[8]    */
#define _ac0053 0x0258013f /* termList  19, actionList  19            */
#define _ac0054 0x02b80170 /* termList  20, actionList  20            */
#define _ac0055 0x03000195 /* termList  21, actionList  21            */
#define _ac0056 0x03000195 /* termList  21, actionList  21            */
#define _ac0057 0xff078063 /* Reduce by 125 on tokens in termSet[9]   */
#define _ac0058 0xff058063 /* Reduce by 126 on tokens in termSet[9]   */
#define _ac0059 0xff038063 /* Reduce by 127 on tokens in termSet[9]   */
#define _ac0060 0xff018063 /* Reduce by 128 on tokens in termSet[9]   */
#define _ac0061 0xfeff8063 /* Reduce by 129 on tokens in termSet[9]   */
#define _ac0062 0xfefd8063 /* Reduce by 130 on tokens in termSet[9]   */
#define _ac0063 0x032601a9 /* termList  22, actionList  22            */
#define _ac0064 0xfef98063 /* Reduce by 132 on tokens in termSet[9]   */
#define _ac0065 0xfef78063 /* Reduce by 133 on tokens in termSet[9]   */
#define _ac0066 0xfef58063 /* Reduce by 134 on tokens in termSet[9]   */
#define _ac0067 0xfef38063 /* Reduce by 135 on tokens in termSet[9]   */
#define _ac0068 0x038e01de /* termList  23, actionList  23            */
#define _ac0069 0x01250051 /* Shift  to 146 on LPAR                   */
#define _ac0070 0x01270051 /* Shift  to 147 on LPAR                   */
#define _ac0071 0x01290051 /* Shift  to 148 on LPAR                   */
#define _ac0072 0xfee78063 /* Reduce by 141 on tokens in termSet[9]   */
#define _ac0073 0x012b0051 /* Shift  to 149 on LPAR                   */
#define _ac0074 0x03be01f7 /* termList  24, actionList  24            */
#define _ac0075 0xfec30051 /* Reduce by 159 on LPAR                   */
#define _ac0076 0xfec10051 /* Reduce by 160 on LPAR                   */
#define _ac0077 0xfeb3806e /* Reduce by 167 on tokens in termSet[10]  */
#define _ac0078 0xfeb1806e /* Reduce by 168 on tokens in termSet[10]  */
#define _ac0079 0xfe938063 /* Reduce by 183 on tokens in termSet[9]   */
#define _ac0080 0xfe918063 /* Reduce by 184 on tokens in termSet[9]   */
#define _ac0081 0xfe8f8063 /* Reduce by 185 on tokens in termSet[9]   */
#define _ac0082 0xfe8d8063 /* Reduce by 186 on tokens in termSet[9]   */
#define _ac0083 0xfe8b8063 /* Reduce by 187 on tokens in termSet[9]   */
#define _ac0084 0xfe898063 /* Reduce by 188 on tokens in termSet[9]   */
#define _ac0085 0x003d0055 /* Shift  to 30 on NAME                    */
#define _ac0086 0x003d0055 /* Shift  to 30 on NAME                    */
#define _ac0087 0x001f002d /* Shift  to 15 on SELECT                  */
#define _ac0088 0xffab002d /* Reduce by 43 on SELECT                  */
#define _ac0089 0xffbb8042 /* Reduce by 35 on tokens in termSet[6]    */
#define _ac0090 0x0428022d /* termList  25, actionList  25            */
#define _ac0091 0x003d0055 /* Shift  to 30 on NAME                    */
#define _ac0092 0xffe7800b /* Reduce by 13 on tokens in termSet[1]    */
#define _ac0093 0xffe58079 /* Reduce by 14 on tokens in termSet[11]   */
#define _ac0094 0xffe38079 /* Reduce by 15 on tokens in termSet[11]   */
#define _ac0095 0x0442023b /* termList  26, actionList  26            */
#define _ac0096 0xffdd8079 /* Reduce by 18 on tokens in termSet[11]   */
#define _ac0097 0xffdb8079 /* Reduce by 19 on tokens in termSet[11]   */
#define _ac0098 0xffd98079 /* Reduce by 20 on tokens in termSet[11]   */
#define _ac0099 0x044a0240 /* termList  27, actionList  27            */
#define _ac0100 0x0034001d /* termList   3, actionList   3            */
#define _ac0101 0x01410023 /* Shift  to 160 on JOIN                   */
#define _ac0102 0xff750023 /* Reduce by 70 on JOIN                    */
#define _ac0103 0xff730023 /* Reduce by 71 on JOIN                    */
#define _ac0104 0x04500244 /* termList  28, actionList  28            */
#define _ac0105 0x04560244 /* termList  28, actionList  29            */
#define _ac0106 0x003d0055 /* Shift  to 30 on NAME                    */
#define _ac0107 0xff7f8021 /* Reduce by 65 on tokens in termSet[3]    */
#define _ac0108 0x045c0248 /* termList  29, actionList  30            */
#define _ac0109 0x0466024e /* termList  30, actionList  31            */
#define _ac0110 0x046c0252 /* termList  31, actionList  32            */
#define _ac0111 0x04700255 /* termList  32, actionList  33            */
#define _ac0112 0x04c80282 /* termList  33, actionList  34            */
#define _ac0113 0x04ee0296 /* termList  34, actionList  35            */
#define _ac0114 0x051602ab /* termList  35, actionList  36            */
#define _ac0115 0x00ec007d /* termList   7, actionList   7            */
#define _ac0116 0xff93804d /* Reduce by 55 on tokens in termSet[7]    */
#define _ac0117 0x022a0127 /* termList  18, actionList  18            */
#define _ac0118 0x022a0127 /* termList  18, actionList  18            */
#define _ac0119 0x051e02b0 /* termList  36, actionList  37            */
#define _ac0120 0xff3f8058 /* Reduce by 97 on tokens in termSet[8]    */
#define _ac0121 0x001f002d /* Shift  to 15 on SELECT                  */
#define _ac0122 0x016b0051 /* Shift  to 181 on LPAR                   */
#define _ac0123 0x052202b3 /* termList  37, actionList  38            */
#define _ac0124 0x052802b7 /* termList  38, actionList  39            */
#define _ac0125 0x055202cd /* termList  39, actionList  40            */
#define _ac0126 0x052802b7 /* termList  38, actionList  39            */
#define _ac0127 0x052802b7 /* termList  38, actionList  39            */
#define _ac0128 0x052802b7 /* termList  38, actionList  39            */
#define _ac0129 0x052802b7 /* termList  38, actionList  39            */
#define _ac0130 0x052802b7 /* termList  38, actionList  39            */
#define _ac0131 0x052802b7 /* termList  38, actionList  39            */
#define _ac0132 0x052802b7 /* termList  38, actionList  39            */
#define _ac0133 0x052802b7 /* termList  38, actionList  39            */
#define _ac0134 0x052802b7 /* termList  38, actionList  39            */
#define _ac0135 0x052802b7 /* termList  38, actionList  39            */
#define _ac0136 0x052802b7 /* termList  38, actionList  39            */
#define _ac0137 0x052802b7 /* termList  38, actionList  39            */
#define _ac0138 0x052802b7 /* termList  38, actionList  39            */
#define _ac0139 0x052802b7 /* termList  38, actionList  39            */
#define _ac0140 0xff0b8063 /* Reduce by 123 on tokens in termSet[9]   */
#define _ac0141 0xff098063 /* Reduce by 124 on tokens in termSet[9]   */
#define _ac0142 0x055602d0 /* termList  40, actionList  41            */
#define _ac0143 0x003d0055 /* Shift  to 30 on NAME                    */
#define _ac0144 0x055a02d3 /* termList  41, actionList  42            */
#define _ac0145 0x056002d7 /* termList  42, actionList  43            */
#define _ac0146 0x052802b7 /* termList  38, actionList  39            */
#define _ac0147 0x056802dc /* termList  43, actionList  44            */
#define _ac0148 0x059c02f7 /* termList  44, actionList  45            */
#define _ac0149 0x022a0127 /* termList  18, actionList  18            */
#define _ac0150 0xfea9003c /* Reduce by 172 on SEMI                   */
#define _ac0151 0xfea7003c /* Reduce by 173 on SEMI                   */
#define _ac0152 0x05ca022d /* termList  25, actionList  46            */
#define _ac0153 0xffeb800b /* Reduce by 11 on tokens in termSet[1]    */
#define _ac0154 0x00490002 /* Shift  to 36 on NUMBER                  */
#define _ac0155 0x05e4030f /* termList  45, actionList  47            */
#define _ac0156 0xffd38084 /* Reduce by 23 on tokens in termSet[12]   */
#define _ac0157 0x05ea0313 /* termList  46, actionList  48            */
#define _ac0158 0xfeb5808f /* Reduce by 166 on tokens in termSet[13]  */
#define _ac0159 0x05f000a9 /* termList  13, actionList  49            */
#define _ac0160 0x0034001d /* termList   3, actionList   3            */
#define _ac0161 0xff690023 /* Reduce by 76 on JOIN                    */
#define _ac0162 0xff670023 /* Reduce by 77 on JOIN                    */
#define _ac0163 0xff6d0023 /* Reduce by 74 on JOIN                    */
#define _ac0164 0xff6b0023 /* Reduce by 75 on JOIN                    */
#define _ac0165 0xff818021 /* Reduce by 64 on tokens in termSet[3]    */
#define _ac0166 0x01bd0023 /* Shift  to 222 on JOIN                   */
#define _ac0167 0x06220317 /* termList  47, actionList  50            */
#define _ac0168 0x01c70051 /* Shift  to 227 on LPAR                   */
#define _ac0169 0x062a0011 /* termList   2, actionList  51            */
#define _ac0170 0x003d0055 /* Shift  to 30 on NAME                    */
#define _ac0171 0xff9f8037 /* Reduce by 49 on tokens in termSet[5]    */
#define _ac0172 0x0640031c /* termList  48, actionList  52            */
#define _ac0173 0x0034001d /* termList   3, actionList   3            */
#define _ac0174 0x052802b7 /* termList  38, actionList  39            */
#define _ac0175 0xff99804d /* Reduce by 52 on tokens in termSet[7]    */
#define _ac0176 0x0664032f /* termList  49, actionList  53            */
#define _ac0177 0xff418058 /* Reduce by 96 on tokens in termSet[8]    */
#define _ac0178 0xff8f804d /* Reduce by 57 on tokens in termSet[7]    */
#define _ac0179 0xff8d804d /* Reduce by 58 on tokens in termSet[7]    */
#define _ac0180 0x06a002d7 /* termList  42, actionList  54            */
#define _ac0181 0x06a8034e /* termList  50, actionList  55            */
#define _ac0182 0x01dd0051 /* Shift  to 238 on LPAR                   */
#define _ac0183 0x052802b7 /* termList  38, actionList  39            */
#define _ac0184 0x052802b7 /* termList  38, actionList  39            */
#define _ac0185 0x06d40365 /* termList  51, actionList  56            */
#define _ac0186 0xff318058 /* Reduce by 104 on tokens in termSet[8]   */
#define _ac0187 0x01e30026 /* Shift  to 241 on NULLVAL                */
#define _ac0188 0x071e038b /* termList  52, actionList  57            */
#define _ac0189 0x072e0394 /* termList  53, actionList  58            */
#define _ac0190 0x07920394 /* termList  53, actionList  59            */
#define _ac0191 0x07f60394 /* termList  53, actionList  60            */
#define _ac0192 0x085a0394 /* termList  53, actionList  61            */
#define _ac0193 0x08be0394 /* termList  53, actionList  62            */
#define _ac0194 0x09220394 /* termList  53, actionList  63            */
#define _ac0195 0xff0d8063 /* Reduce by 122 on tokens in termSet[9]   */
#define _ac0196 0xff27809a /* Reduce by 109 on tokens in termSet[14]  */
#define _ac0197 0x098603c7 /* termList  54, actionList  64            */
#define _ac0198 0xff25809a /* Reduce by 110 on tokens in termSet[14]  */
#define _ac0199 0xff23809a /* Reduce by 111 on tokens in termSet[14]  */
#define _ac0200 0xff21809a /* Reduce by 112 on tokens in termSet[14]  */
#define _ac0201 0xff1f809a /* Reduce by 113 on tokens in termSet[14]  */
#define _ac0202 0xff1d809a /* Reduce by 114 on tokens in termSet[14]  */
#define _ac0203 0xfebb806e /* Reduce by 163 on tokens in termSet[10]  */
#define _ac0204 0xfeb9806e /* Reduce by 164 on tokens in termSet[10]  */
#define _ac0205 0xfeb7806e /* Reduce by 165 on tokens in termSet[10]  */
#define _ac0206 0xfef18063 /* Reduce by 136 on tokens in termSet[9]   */
#define _ac0207 0xfeed8063 /* Reduce by 138 on tokens in termSet[9]   */
#define _ac0208 0x09dc03f3 /* termList  55, actionList  65            */
#define _ac0209 0x01e90052 /* Shift  to 244 on RPAR                   */
#define _ac0210 0x052802b7 /* termList  38, actionList  39            */
#define _ac0211 0xfebd0052 /* Reduce by 162 on RPAR                   */
#define _ac0212 0x09ec03fc /* termList  56, actionList  66            */
#define _ac0213 0x09f003ff /* termList  57, actionList  67            */
#define _ac0214 0xfee380a5 /* Reduce by 143 on tokens in termSet[15]  */
#define _ac0215 0x0a020409 /* termList  58, actionList  68            */
#define _ac0216 0x01f30052 /* Shift  to 249 on RPAR                   */
#define _ac0217 0xffd7003c /* Reduce by 21 on SEMI                    */
#define _ac0218 0x044a0240 /* termList  27, actionList  27            */
#define _ac0219 0x022a0127 /* termList  18, actionList  18            */
#define _ac0220 0x052802b7 /* termList  38, actionList  39            */
#define _ac0221 0x0a08040d /* termList  59, actionList  69            */
#define _ac0222 0x0034001d /* termList   3, actionList   3            */
#define _ac0223 0x0a1403fc /* termList  56, actionList  70            */
#define _ac0224 0x0a1802d7 /* termList  42, actionList  71            */
#define _ac0225 0x0a200414 /* termList  60, actionList  72            */
#define _ac0226 0xfeaf80a5 /* Reduce by 169 on tokens in termSet[15]  */
#define _ac0227 0x0a280419 /* termList  61, actionList  73            */
#define _ac0228 0x0a540430 /* termList  62, actionList  74            */
#define _ac0229 0x0a580433 /* termList  63, actionList  75            */
#define _ac0230 0x0a7a0445 /* termList  64, actionList  76            */
#define _ac0231 0x0aa00459 /* termList  65, actionList  77            */
#define _ac0232 0xff3d8058 /* Reduce by 98 on tokens in termSet[8]    */
#define _ac0233 0x02130052 /* Shift  to 265 on RPAR                   */
#define _ac0234 0x0ab202d7 /* termList  42, actionList  78            */
#define _ac0235 0x0aba03ff /* termList  57, actionList  79            */
#define _ac0236 0xfed50052 /* Reduce by 150 on RPAR                   */
#define _ac0237 0x0acc03fc /* termList  56, actionList  80            */
#define _ac0238 0x06a8034e /* termList  50, actionList  55            */
#define _ac0239 0x0ad00365 /* termList  51, actionList  81            */
#define _ac0240 0x0b1a038b /* termList  52, actionList  82            */
#define _ac0241 0xff2f8058 /* Reduce by 105 on tokens in termSet[8]   */
#define _ac0242 0x052802b7 /* termList  38, actionList  39            */
#define _ac0243 0x0128009f /* termList  11, actionList  11            */
#define _ac0244 0xfeeb8063 /* Reduce by 139 on tokens in termSet[9]   */
#define _ac0245 0x0b2a0463 /* termList  66, actionList  83            */
#define _ac0246 0xfee98063 /* Reduce by 140 on tokens in termSet[9]   */
#define _ac0247 0x059c02f7 /* termList  44, actionList  45            */
#define _ac0248 0x022a0127 /* termList  18, actionList  18            */
#define _ac0249 0xffdf8079 /* Reduce by 17 on tokens in termSet[11]   */
#define _ac0250 0xffd58084 /* Reduce by 22 on tokens in termSet[12]   */
#define _ac0251 0x0b3a046c /* termList  67, actionList  84            */
#define _ac0252 0x0b600480 /* termList  68, actionList  85            */
#define _ac0253 0x022a0127 /* termList  18, actionList  18            */
#define _ac0254 0x0b74040d /* termList  59, actionList  86            */
#define _ac0255 0x0b80024e /* termList  30, actionList  87            */
#define _ac0256 0x044a0240 /* termList  27, actionList  27            */
#define _ac0257 0x022f003c /* Shift  to 279 on SEMI                   */
#define _ac0258 0x02310052 /* Shift  to 280 on RPAR                   */
#define _ac0259 0x0b8603fc /* termList  56, actionList  88            */
#define _ac0260 0xffbf003c /* Reduce by 33 on SEMI                    */
#define _ac0261 0x0b8a048b /* termList  69, actionList  89            */
#define _ac0262 0x0237000c /* Shift  to 283 on BY                     */
#define _ac0263 0xffb3003c /* Reduce by 39 on SEMI                    */
#define _ac0264 0x02390051 /* Shift  to 284 on LPAR                   */
#define _ac0265 0xff398058 /* Reduce by 100 on tokens in termSet[8]   */
#define _ac0266 0x052802b7 /* termList  38, actionList  39            */
#define _ac0267 0x023d0052 /* Shift  to 286 on RPAR                   */
#define _ac0268 0x052802b7 /* termList  38, actionList  39            */
#define _ac0269 0x0baa0365 /* termList  51, actionList  90            */
#define _ac0270 0x02410052 /* Shift  to 288 on RPAR                   */
#define _ac0271 0xfee180a5 /* Reduce by 144 on tokens in termSet[15]  */
#define _ac0272 0x0bf4049c /* termList  70, actionList  91            */
#define _ac0273 0x0bfc04a1 /* termList  71, actionList  92            */
#define _ac0274 0x022a0127 /* termList  18, actionList  18            */
#define _ac0275 0x02490051 /* Shift  to 292 on LPAR                   */
#define _ac0276 0x001f002d /* Shift  to 15 on SELECT                  */
#define _ac0277 0x0c340011 /* termList   2, actionList  93            */
#define _ac0278 0xfead80a5 /* Reduce by 170 on tokens in termSet[15]  */
#define _ac0279 0xffc98000 /* Reduce by 28 on tokens in termSet[0]    */
#define _ac0280 0x024d003c /* Shift  to 294 on SEMI                   */
#define _ac0281 0x0c4a04be /* termList  72, actionList  94            */
#define _ac0282 0x022a0127 /* termList  18, actionList  18            */
#define _ac0283 0x022a0127 /* termList  18, actionList  18            */
#define _ac0284 0x0c6804ce /* termList  73, actionList  95            */
#define _ac0285 0x0c7803ff /* termList  57, actionList  96            */
#define _ac0286 0xff378058 /* Reduce by 101 on tokens in termSet[8]   */
#define _ac0287 0x0c8a0365 /* termList  51, actionList  97            */
#define _ac0288 0xfeef8063 /* Reduce by 137 on tokens in termSet[9]   */
#define _ac0289 0x026d0052 /* Shift  to 310 on RPAR                   */
#define _ac0290 0x022a0127 /* termList  18, actionList  18            */
#define _ac0291 0x0cd404d7 /* termList  74, actionList  98            */
#define _ac0292 0x0a280419 /* termList  61, actionList  73            */
#define _ac0293 0x0ce402d7 /* termList  42, actionList  99            */
#define _ac0294 0xffcd8000 /* Reduce by 26 on tokens in termSet[0]    */
#define _ac0295 0xffb580b0 /* Reduce by 38 on tokens in termSet[16]   */
#define _ac0296 0x0277000c /* Shift  to 315 on BY                     */
#define _ac0297 0x0cec04e0 /* termList  75, actionList 100            */
#define _ac0298 0x0d0e04f2 /* termList  76, actionList 101            */
#define _ac0299 0xff5780bb /* Reduce by 85 on tokens in termSet[17]   */
#define _ac0300 0x0d300504 /* termList  77, actionList 102            */
#define _ac0301 0x0d5603fc /* termList  56, actionList 103            */
#define _ac0302 0xfec780a5 /* Reduce by 157 on tokens in termSet[15]  */
#define _ac0303 0xfea580a5 /* Reduce by 174 on tokens in termSet[15]  */
#define _ac0304 0x00490002 /* Shift  to 36 on NUMBER                  */
#define _ac0305 0xfea180a5 /* Reduce by 176 on tokens in termSet[15]  */
#define _ac0306 0xfe9f80a5 /* Reduce by 177 on tokens in termSet[15]  */
#define _ac0307 0xfe9d80a5 /* Reduce by 178 on tokens in termSet[15]  */
#define _ac0308 0xfe9b80a5 /* Reduce by 179 on tokens in termSet[15]  */
#define _ac0309 0xfe9980a5 /* Reduce by 180 on tokens in termSet[15]  */
#define _ac0310 0xfee58063 /* Reduce by 142 on tokens in termSet[9]   */
#define _ac0311 0x0d5a02d3 /* termList  41, actionList 104            */
#define _ac0312 0xff798021 /* Reduce by 68 on tokens in termSet[3]    */
#define _ac0313 0x02810052 /* Shift  to 320 on RPAR                   */
#define _ac0314 0x0283003c /* Shift  to 321 on SEMI                   */
#define _ac0315 0x052802b7 /* termList  38, actionList  39            */
#define _ac0316 0x022a0127 /* termList  18, actionList  18            */
#define _ac0317 0xffaf003c /* Reduce by 41 on SEMI                    */
#define _ac0318 0x0c6804ce /* termList  73, actionList  95            */
#define _ac0319 0xfea380a5 /* Reduce by 175 on tokens in termSet[15]  */
#define _ac0320 0x028f003c /* Shift  to 327 on SEMI                   */
#define _ac0321 0xffcb8000 /* Reduce by 27 on tokens in termSet[0]    */
#define _ac0322 0x0d600518 /* termList  78, actionList 105            */
#define _ac0323 0xff4d80c6 /* Reduce by 90 on tokens in termSet[18]   */
#define _ac0324 0x0d7e0528 /* termList  79, actionList 106            */
#define _ac0325 0xff5980bb /* Reduce by 84 on tokens in termSet[17]   */
#define _ac0326 0xfec980a5 /* Reduce by 156 on tokens in termSet[15]  */
#define _ac0327 0xffcf8000 /* Reduce by 25 on tokens in termSet[0]    */
#define _ac0328 0x052802b7 /* termList  38, actionList  39            */
#define _ac0329 0xff4b80c6 /* Reduce by 91 on tokens in termSet[18]   */
#define _ac0330 0xff4780c6 /* Reduce by 93 on tokens in termSet[18]   */
#define _ac0331 0xff4580c6 /* Reduce by 94 on tokens in termSet[18]   */
#define _ac0332 0xff4f80c6 /* Reduce by 89 on tokens in termSet[18]   */

static const unsigned int actionCode[333] = {
   _ac0000,_ac0001,_ac0002,_ac0003,_ac0004,_ac0005,_ac0006,_ac0007,_ac0008,_ac0009
  ,_ac0010,_ac0011,_ac0012,_ac0013,_ac0014,_ac0015,_ac0016,_ac0017,_ac0018,_ac0019
  ,_ac0020,_ac0021,_ac0022,_ac0023,_ac0024,_ac0025,_ac0026,_ac0027,_ac0028,_ac0029
  ,_ac0030,_ac0031,_ac0032,_ac0033,_ac0034,_ac0035,_ac0036,_ac0037,_ac0038,_ac0039
  ,_ac0040,_ac0041,_ac0042,_ac0043,_ac0044,_ac0045,_ac0046,_ac0047,_ac0048,_ac0049
  ,_ac0050,_ac0051,_ac0052,_ac0053,_ac0054,_ac0055,_ac0056,_ac0057,_ac0058,_ac0059
  ,_ac0060,_ac0061,_ac0062,_ac0063,_ac0064,_ac0065,_ac0066,_ac0067,_ac0068,_ac0069
  ,_ac0070,_ac0071,_ac0072,_ac0073,_ac0074,_ac0075,_ac0076,_ac0077,_ac0078,_ac0079
  ,_ac0080,_ac0081,_ac0082,_ac0083,_ac0084,_ac0085,_ac0086,_ac0087,_ac0088,_ac0089
  ,_ac0090,_ac0091,_ac0092,_ac0093,_ac0094,_ac0095,_ac0096,_ac0097,_ac0098,_ac0099
  ,_ac0100,_ac0101,_ac0102,_ac0103,_ac0104,_ac0105,_ac0106,_ac0107,_ac0108,_ac0109
  ,_ac0110,_ac0111,_ac0112,_ac0113,_ac0114,_ac0115,_ac0116,_ac0117,_ac0118,_ac0119
  ,_ac0120,_ac0121,_ac0122,_ac0123,_ac0124,_ac0125,_ac0126,_ac0127,_ac0128,_ac0129
  ,_ac0130,_ac0131,_ac0132,_ac0133,_ac0134,_ac0135,_ac0136,_ac0137,_ac0138,_ac0139
  ,_ac0140,_ac0141,_ac0142,_ac0143,_ac0144,_ac0145,_ac0146,_ac0147,_ac0148,_ac0149
  ,_ac0150,_ac0151,_ac0152,_ac0153,_ac0154,_ac0155,_ac0156,_ac0157,_ac0158,_ac0159
  ,_ac0160,_ac0161,_ac0162,_ac0163,_ac0164,_ac0165,_ac0166,_ac0167,_ac0168,_ac0169
  ,_ac0170,_ac0171,_ac0172,_ac0173,_ac0174,_ac0175,_ac0176,_ac0177,_ac0178,_ac0179
  ,_ac0180,_ac0181,_ac0182,_ac0183,_ac0184,_ac0185,_ac0186,_ac0187,_ac0188,_ac0189
  ,_ac0190,_ac0191,_ac0192,_ac0193,_ac0194,_ac0195,_ac0196,_ac0197,_ac0198,_ac0199
  ,_ac0200,_ac0201,_ac0202,_ac0203,_ac0204,_ac0205,_ac0206,_ac0207,_ac0208,_ac0209
  ,_ac0210,_ac0211,_ac0212,_ac0213,_ac0214,_ac0215,_ac0216,_ac0217,_ac0218,_ac0219
  ,_ac0220,_ac0221,_ac0222,_ac0223,_ac0224,_ac0225,_ac0226,_ac0227,_ac0228,_ac0229
  ,_ac0230,_ac0231,_ac0232,_ac0233,_ac0234,_ac0235,_ac0236,_ac0237,_ac0238,_ac0239
  ,_ac0240,_ac0241,_ac0242,_ac0243,_ac0244,_ac0245,_ac0246,_ac0247,_ac0248,_ac0249
  ,_ac0250,_ac0251,_ac0252,_ac0253,_ac0254,_ac0255,_ac0256,_ac0257,_ac0258,_ac0259
  ,_ac0260,_ac0261,_ac0262,_ac0263,_ac0264,_ac0265,_ac0266,_ac0267,_ac0268,_ac0269
  ,_ac0270,_ac0271,_ac0272,_ac0273,_ac0274,_ac0275,_ac0276,_ac0277,_ac0278,_ac0279
  ,_ac0280,_ac0281,_ac0282,_ac0283,_ac0284,_ac0285,_ac0286,_ac0287,_ac0288,_ac0289
  ,_ac0290,_ac0291,_ac0292,_ac0293,_ac0294,_ac0295,_ac0296,_ac0297,_ac0298,_ac0299
  ,_ac0300,_ac0301,_ac0302,_ac0303,_ac0304,_ac0305,_ac0306,_ac0307,_ac0308,_ac0309
  ,_ac0310,_ac0311,_ac0312,_ac0313,_ac0314,_ac0315,_ac0316,_ac0317,_ac0318,_ac0319
  ,_ac0320,_ac0321,_ac0322,_ac0323,_ac0324,_ac0325,_ac0326,_ac0327,_ac0328,_ac0329
  ,_ac0330,_ac0331,_ac0332
}; // Size of table:1.332(x86)/1.336(x64) bytes.

static const unsigned char termListTable[1345] = {
     7,  18,  22,  30,  42,  45,  49,  52                                                                    /*    0 Used by state  (0) */
  ,  8,   0,  18,  22,  30,  42,  45,  49,  52                                                               /*    1 Used by state  (1) */
  , 11,   0,  18,  22,  30,  42,  45,  49,  52,  62,  63,  64                                                /*    2 Used by states (6,169,277) */
  ,  3,   2,  81,  85                                                                                        /*    3 Used by states (11,35,100,160,173,222) */
  , 28,   1,   2,   3,   4,   5,   6,  10,  11,  13,  14,  15,  16,  17,  20,  21,  23,  27,  36,  38,  41   /*    4 Used by state  (13) */
      ,  44,  48,  73,  75,  76,  77,  81,  85
  , 14,   0,  18,  22,  30,  42,  45,  49,  52,  53,  60,  62,  63,  64,  82                                 /*    5 Used by state  (14) */
  , 47,   0,   1,   2,   3,   4,   5,   6,  10,  11,  13,  14,  15,  16,  17,  18,  20,  21,  22,  23,  24   /*    6 Used by state  (15) */
      ,  25,  26,  27,  30,  36,  38,  40,  41,  42,  44,  45,  48,  49,  51,  52,  53,  60,  62,  63,  64
      ,  73,  75,  76,  77,  81,  82,  85
  , 24,   1,   2,   3,   4,   5,  10,  11,  13,  14,  15,  16,  17,  23,  27,  36,  38,  41,  44,  73,  75   /*    7 Used by states (16,38,115) */
      ,  76,  77,  81,  85
  ,  2,  29,  47                                                                                             /*    8 Used by state  (17) */
  ,  2,   6,  45                                                                                             /*    9 Used by state  (21) */
  ,  2,  60,  61                                                                                             /*   10 Used by state  (27) */
  ,  6,  54,  55,  56,  57,  58,  59                                                                         /*   11 Used by states (29,243) */
  ,  2,  46,  61                                                                                             /*   12 Used by state  (31) */
  , 25,   0,  18,  22,  25,  26,  30,  31,  32,  35,  36,  40,  42,  44,  45,  46,  49,  51,  52,  53,  60   /*   13 Used by states (32,159) */
      ,  61,  62,  63,  64,  82
  , 28,   0,   7,  18,  22,  25,  26,  30,  31,  32,  35,  36,  39,  40,  42,  44,  45,  46,  49,  51,  52   /*   14 Used by state  (33) */
      ,  53,  60,  61,  62,  63,  64,  82,  85
  , 43,   0,   1,   2,   3,   4,   5,  10,  11,  13,  14,  15,  16,  17,  18,  22,  23,  24,  25,  26,  27   /*   15 Used by state  (45) */
      ,  30,  36,  38,  40,  41,  42,  44,  45,  49,  51,  52,  53,  60,  62,  63,  64,  73,  75,  76,  77
      ,  81,  82,  85
  ,  2,  45,  61                                                                                             /*   16 Used by state  (46) */
  , 23,   0,   7,  18,  22,  24,  25,  26,  30,  40,  42,  45,  49,  51,  52,  53,  60,  61,  62,  63,  64   /*   17 Used by state  (49) */
      ,  71,  72,  82
  , 23,   1,   2,   3,   4,   5,  10,  11,  13,  14,  15,  16,  17,  23,  27,  36,  38,  41,  44,  73,  75   /*   18 Used by states (50,117,118,149,219,248,253,274,282,283,290,316) */
      ,  76,  81,  85
  , 48,   0,   7,   9,  18,  22,  24,  25,  26,  28,  30,  31,  32,  34,  35,  36,  37,  39,  40,  42,  44   /*   19 Used by state  (53) */
      ,  45,  46,  49,  51,  52,  53,  60,  61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71,  72,  73
      ,  74,  75,  76,  77,  78,  79,  80,  82
  , 36,   0,   7,  18,  22,  24,  25,  26,  30,  31,  32,  35,  36,  39,  40,  42,  44,  45,  46,  49,  51   /*   20 Used by state  (54) */
      ,  52,  53,  60,  61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71,  72,  82
  , 19,   1,   2,   3,   4,   5,  10,  11,  13,  14,  15,  16,  17,  27,  36,  38,  41,  44,  81,  85        /*   21 Used by states (55,56) */
  , 52,   0,   7,   8,   9,  18,  19,  22,  24,  25,  26,  28,  30,  31,  32,  34,  35,  36,  37,  39,  40   /*   22 Used by state  (63) */
      ,  42,  44,  45,  46,  49,  51,  52,  53,  60,  61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71
      ,  72,  73,  74,  75,  76,  77,  78,  79,  80,  82,  83,  84
  , 24,   1,   2,   3,   4,   5,  10,  11,  13,  14,  15,  16,  17,  23,  27,  36,  38,  41,  44,  45,  73   /*   23 Used by state  (68) */
      ,  75,  76,  81,  85
  , 53,   0,   7,   8,   9,  18,  19,  22,  24,  25,  26,  28,  30,  31,  32,  34,  35,  36,  37,  39,  40   /*   24 Used by state  (74) */
      ,  42,  44,  45,  46,  49,  51,  52,  53,  60,  61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71
      ,  72,  73,  74,  75,  76,  77,  78,  79,  80,  81,  82,  83,  84
  , 13,   0,  18,  22,  30,  42,  45,  49,  52,  53,  62,  63,  64,  82                                      /*   25 Used by states (90,152) */
  ,  4,  60,  61,  81,  82                                                                                   /*   26 Used by state  (95) */
  ,  3,   2,  41,  85                                                                                        /*   27 Used by states (99,218,256) */
  ,  3,  31,  32,  35                                                                                        /*   28 Used by states (104,105) */
  ,  5,  31,  32,  35,  36,  44                                                                              /*   29 Used by state  (108) */
  ,  3,  45,  50,  81                                                                                        /*   30 Used by states (109,255) */
  ,  2,  24,  61                                                                                             /*   31 Used by state  (110) */
  , 44,   0,   1,   2,   3,   4,   5,  10,  11,  13,  14,  15,  16,  17,  18,  22,  23,  24,  25,  26,  27   /*   32 Used by state  (111) */
      ,  30,  36,  38,  40,  41,  42,  43,  44,  45,  49,  51,  52,  53,  60,  62,  63,  64,  73,  75,  76
      ,  77,  81,  82,  85
  , 19,   0,  18,  22,  24,  25,  26,  30,  40,  42,  45,  49,  51,  52,  53,  60,  62,  63,  64,  82        /*   33 Used by state  (112) */
  , 20,   0,  18,  22,  24,  25,  26,  30,  40,  42,  45,  49,  51,  52,  53,  60,  61,  62,  63,  64,  82   /*   34 Used by state  (113) */
  ,  4,  53,  62,  63,  64                                                                                   /*   35 Used by state  (114) */
  ,  2,   2,  85                                                                                             /*   36 Used by state  (119) */
  ,  3,   9,  28,  37                                                                                        /*   37 Used by state  (123) */
  , 21,   1,   2,   3,   4,   5,  10,  11,  13,  14,  15,  16,  17,  27,  36,  38,  41,  44,  75,  76,  81   /*   38 Used by states (124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,146,174,183,184,210,220,242,266,268,315,328) */
      ,  85
  ,  2,  38,  73                                                                                             /*   39 Used by state  (125) */
  ,  2,  77,  85                                                                                             /*   40 Used by state  (142) */
  ,  3,  71,  72,  82                                                                                        /*   41 Used by states (144,311) */
  ,  4,  62,  63,  64,  82                                                                                   /*   42 Used by states (145,180,224,234,293) */
  , 26,   1,   2,   3,   4,   5,   6,  10,  11,  13,  14,  15,  16,  17,  20,  21,  27,  36,  38,  41,  44   /*   43 Used by state  (147) */
      ,  48,  75,  76,  77,  81,  85
  , 23,   1,   2,   3,   4,   5,  10,  11,  13,  14,  15,  16,  17,  27,  36,  38,  41,  44,  61,  75,  76   /*   44 Used by states (148,247) */
      ,  81,  82,  85
  ,  3,  51,  60,  61                                                                                        /*   45 Used by state  (155) */
  ,  3,  65,  83,  84                                                                                        /*   46 Used by state  (157) */
  ,  4,   2,  41,  45,  85                                                                                   /*   47 Used by state  (167) */
  , 18,   0,  18,  22,  25,  26,  30,  40,  42,  45,  49,  51,  52,  53,  60,  62,  63,  64,  82             /*   48 Used by state  (172) */
  , 30,   0,   7,  18,  22,  24,  25,  26,  30,  31,  32,  35,  36,  39,  40,  42,  44,  45,  46,  49,  51   /*   49 Used by state  (176) */
      ,  52,  53,  60,  61,  62,  63,  64,  71,  72,  82
  , 22,   1,   2,   3,   4,   5,  10,  11,  13,  14,  15,  16,  17,  27,  36,  38,  41,  44,  45,  75,  76   /*   50 Used by states (181,238) */
      ,  81,  85
  , 37,   0,   7,  18,  22,  24,  25,  26,  30,  31,  32,  35,  36,  39,  40,  42,  44,  45,  46,  49,  51   /*   51 Used by states (185,239,269,287) */
      ,  52,  53,  60,  61,  62,  63,  64,  71,  72,  74,  75,  76,  77,  78,  79,  80,  82
  ,  8,  72,  74,  75,  76,  77,  78,  79,  80                                                               /*   52 Used by states (188,240) */
  , 50,   0,   7,   8,   9,  18,  19,  22,  24,  25,  26,  28,  30,  31,  32,  34,  35,  36,  37,  39,  40   /*   53 Used by states (189,190,191,192,193,194) */
      ,  42,  44,  45,  46,  49,  51,  52,  53,  60,  61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71
      ,  72,  73,  74,  75,  76,  77,  78,  79,  80,  82
  , 43,   0,   7,  18,  22,  24,  25,  26,  30,  31,  32,  35,  36,  39,  40,  42,  44,  45,  46,  49,  51   /*   54 Used by state  (197) */
      ,  52,  53,  60,  61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71,  72,  74,  75,  76,  77,  78
      ,  79,  80,  82
  ,  8,   7,  74,  75,  76,  77,  78,  79,  80                                                               /*   55 Used by state  (208) */
  ,  2,  61,  82                                                                                             /*   56 Used by states (212,223,237,259,301) */
  ,  9,  61,  74,  75,  76,  77,  78,  79,  80,  82                                                          /*   57 Used by states (213,235,285) */
  ,  3,  61,  71,  72                                                                                        /*   58 Used by state  (215) */
  ,  6,  31,  32,  35,  36,  39,  44                                                                         /*   59 Used by states (221,254) */
  ,  4,  61,  82,  83,  84                                                                                   /*   60 Used by state  (225) */
  , 22,   1,   2,   3,   4,   5,  10,  11,  13,  14,  15,  16,  17,  27,  36,  38,  41,  44,  75,  76,  81   /*   61 Used by states (227,292) */
      ,  82,  85
  ,  2,  51,  60                                                                                             /*   62 Used by state  (228) */
  , 17,   0,  18,  22,  25,  26,  30,  40,  42,  45,  49,  52,  53,  60,  62,  63,  64,  82                  /*   63 Used by state  (229) */
  , 19,   0,  18,  22,  25,  26,  30,  40,  42,  45,  49,  51,  52,  53,  60,  61,  62,  63,  64,  82        /*   64 Used by state  (230) */
  ,  9,  28,  60,  74,  75,  76,  77,  78,  79,  80                                                          /*   65 Used by state  (231) */
  ,  8,  74,  75,  76,  77,  78,  79,  80,  82                                                               /*   66 Used by state  (245) */
  , 19,   0,  18,  22,  25,  26,  30,  40,  42,  45,  49,  52,  53,  60,  62,  63,  64,  71,  72,  82        /*   67 Used by state  (251) */
  , 10,  51,  60,  61,  74,  75,  76,  77,  78,  79,  80                                                     /*   68 Used by state  (252) */
  , 16,   0,  18,  22,  26,  30,  40,  42,  45,  49,  52,  53,  60,  62,  63,  64,  82                       /*   69 Used by state  (261) */
  ,  4,  61,  71,  72,  82                                                                                   /*   70 Used by state  (272) */
  , 28,   0,  18,  22,  25,  26,  30,  31,  32,  35,  36,  39,  40,  42,  44,  45,  46,  49,  51,  52,  53   /*   71 Used by state  (273) */
      ,  60,  61,  62,  63,  64,  71,  72,  82
  , 15,   0,  18,  22,  30,  40,  42,  45,  49,  52,  53,  60,  62,  63,  64,  82                            /*   72 Used by state  (281) */
  ,  8,   1,   2,   3,   4,   5,  10,  11,  76                                                               /*   73 Used by states (284,318) */
  ,  8,  31,  32,  35,  36,  44,  71,  72,  82                                                               /*   74 Used by state  (291) */
  , 17,   0,  18,  22,  30,  40,  42,  45,  49,  52,  53,  60,  62,  63,  64,  71,  72,  82                  /*   75 Used by state  (297) */
  , 17,   0,  18,  22,  26,  30,  40,  42,  45,  49,  52,  53,  60,  61,  62,  63,  64,  82                  /*   76 Used by state  (298) */
  , 19,   0,  18,  22,  26,  30,  40,  42,  45,  49,  52,  53,  60,  61,  62,  63,  64,  71,  72,  82        /*   77 Used by state  (300) */
  , 15,   0,  18,  22,  30,  42,  45,  49,  52,  53,  60,  61,  62,  63,  64,  82                            /*   78 Used by state  (322) */
  , 24,   0,   8,  18,  19,  22,  30,  42,  45,  49,  52,  53,  60,  61,  62,  63,  64,  74,  75,  76,  77   /*   79 Used by state  (324) */
      ,  78,  79,  80,  82
}; // Size of table:1.348(x86)/1.352(x64) bytes.

static const short actionListTable[1751] = {
     13,  17,  12,  10,  15,  11,  16                                                                        /*   0 Used by state  (0) */
  ,   0,  13,  17,  12,  10,  15,  11,  16                                                                   /*   1 Used by state  (1) */
  ,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  21,  23,  22                                                    /*   2 Used by state  (6) */
  ,  36,  35,  30                                                                                            /*   3 Used by states (11,35,100,160,173,222) */
  , -44, -44, -44, -44, -44,  39, -44, -44, -44, -44, -44, -44, -44,  40,  41, -44, -44, -44, -44, -44       /*   4 Used by state  (13) */
  , -44,  42, -44, -44, -44, -44, -44, -44
  ,-152,-152,-152,-152,-152,-152,-152,-152,-152,  44,-152,-152,-152,-152                                     /*   5 Used by state  (14) */
  , -44, -44, -44, -44, -44, -44,  39, -44, -44, -44, -44, -44, -44, -44, -44,  40,  41, -44, -44, -44       /*   6 Used by state  (15) */
  , -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44,  42, -44, -44, -44, -44, -44, -44, -44, -44
  , -44, -44, -44, -44, -44, -44, -44
  ,  79,  36,  80,  81,  82,  84,  83,  69,  70,  64,  65,  66,  51,  73,  75,  67,  77,  76,  50,  56       /*   7 Used by states (16,38,115) */
  ,  55,  48,  68,  30
  ,  86,  85                                                                                                 /*   8 Used by state  (17) */
  ,  88, -42                                                                                                 /*   9 Used by state  (21) */
  , -10,  91                                                                                                 /*  10 Used by state  (27) */
  ,  96,  95,  98,  97,  94,  93                                                                             /*  11 Used by states (29,243) */
  ,  99, 100                                                                                                 /*  12 Used by state  (31) */
  , -62, -62, -62, -62, -62, -62, 103, 102, -69, 105, -62, -62, 104, -62, -62, -62, -62, -62, -62, -62       /*  13 Used by state  (32) */
  , -62, -62, -62, -62, -62
  , -63, 106, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63       /*  14 Used by state  (33) */
  , -63, -63, -63, -63, -63, -63, -63,  30
  , -50,  79,  36,  80,  81,  82,  84,  83,  69,  70,  64,  65,  66, -50, -50,  51, -50, -50, -50,  73       /*  15 Used by state  (45) */
  , -50,  75,  67, -50,  77, -50,  76, -50, -50, -50, -50, -50, -50, -50, -50, -50,  50,  56,  55,  48
  ,  68, -50,  30
  ,  15, 115                                                                                                 /*  16 Used by state  (46) */
  , -56, 119, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56       /*  17 Used by state  (49) */
  , 117, 118, -56
  ,  79,  36,  80,  81,  82,  84,  83,  69,  70,  64,  65,  66,  51,  73,  75,  67,  77,  76,  50,  56       /*  18 Used by states (50,117,118,149,219,248,253,274,282,283,290,316) */
  ,  55,  68,  30
  ,-115,-115, 126,-115,-115,-115,-115,-115, 122,-115,-115,-115, 125,-115,-115, 124,-115,-115,-115,-115       /*  19 Used by state  (53) */
  ,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115, 123
  , 129, 127, 128, 130, 131, 132, 133,-115
  ,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106       /*  20 Used by state  (54) */
  ,-106,-106,-106,-106,-106,-106,-106, 138, 139, 135, 134, 137, 136,-106,-106,-106
  ,  79,  36,  80,  81,  82,  84,  83,  69,  70,  64,  65,  66,  73,  75,  67,  77,  76,  68,  30            /*  21 Used by states (55,56) */
  ,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131       /*  22 Used by state  (63) */
  ,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131
  ,-131,-131,-131,-131,-131,-131,-131,-131,-131,-131, 142, 143
  ,  79,  36,  80,  81,  82,  84,  83,  69,  70,  64,  65,  66,  51,  73,  75,  67,  77,  76,  15,  50       /*  23 Used by state  (68) */
  ,  56,  55,  68,  30
  ,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166       /*  24 Used by state  (74) */
  ,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166,-166
  ,-166,-166,-166,-166,-166,-166,-166,-166,-166,-158,-166,-166,-166
  , -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36,  22, -36                                          /*  25 Used by state  (90) */
  , -16, -16, 154, -16                                                                                       /*  26 Used by state  (95) */
  ,  36,  77,  30                                                                                            /*  27 Used by states (99,218,256) */
  , 161, 162, -72                                                                                            /*  28 Used by state  (104) */
  , 163, 164, -73                                                                                            /*  29 Used by state  (105) */
  , 103, 102, -69, 105, 104                                                                                  /*  30 Used by state  (108) */
  ,  15, 168, 167                                                                                            /*  31 Used by state  (109) */
  , 170, 115                                                                                                 /*  32 Used by state  (110) */
  , -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48       /*  33 Used by state  (111) */
  , -48, -48, -48, -48, -48, -48, 171, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48
  , -48, -48, -48, -48
  , -59, -59, -59, 173, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59            /*  34 Used by state  (112) */
  , -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, 115, -51, -51, -51, -51       /*  35 Used by state  (113) */
  , 174,  21,  23,  22                                                                                       /*  36 Used by state  (114) */
  ,  36,  30                                                                                                 /*  37 Used by state  (119) */
  , 184, 182, 183                                                                                            /*  38 Used by state  (123) */
  ,  79,  36,  80,  81,  82,  84,  83,  69,  70,  64,  65,  66,  73,  75,  67,  77,  76,  56,  55,  68       /*  39 Used by states (124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,146,174,183,184,210,220,242,266,268,315,328) */
  ,  30
  , 186, 187                                                                                                 /*  40 Used by state  (125) */
  , 204,  30                                                                                                 /*  41 Used by state  (142) */
  , 117, 118, 206                                                                                            /*  42 Used by state  (144) */
  ,  21,  23,  22, 207                                                                                       /*  43 Used by state  (145) */
  , -44, -44, -44, -44, -44,  39, -44, -44, -44, -44, -44, -44, -44,  40,  41, -44, -44, -44, -44, -44       /*  44 Used by state  (147) */
  ,  42, -44, -44, 211, -44, -44
  ,  79,  36,  80,  81,  82,  84,  83,  69,  70,  64,  65,  66,  73,  75,  67,  77,  76,-145,  56,  55       /*  45 Used by states (148,247) */
  ,  68,-145,  30
  , -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34,  22, -34                                          /*  46 Used by state  (152) */
  , 219, -78, 218                                                                                            /*  47 Used by state  (155) */
  , 220, 142, 143                                                                                            /*  48 Used by state  (157) */
  , -61, -61, -61, -61, -61, -61, 103, 102, -69, 105, -61, -61, 104, -61, -61, -61, -61, -61, -61, -61       /*  49 Used by state  (159) */
  , -61, -61, -61, -61, -61
  ,  36,  77,  15,  30                                                                                       /*  50 Used by state  (167) */
  , -30, -30, -30, -30, -30, -30, -30, -30,  21,  23,  22                                                    /*  51 Used by state  (169) */
  , -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, 219, -78, -78, -78, -78, -78, -78, -78                 /*  52 Used by state  (172) */
  , -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95       /*  53 Used by state  (176) */
  , -95, -95, -95, -95, -95, -95, -95, -95, 118, -95
  ,  21,  23,  22, 232                                                                                       /*  54 Used by state  (180) */
  ,  79,  36,  80,  81,  82,  84,  83,  69,  70,  64,  65,  66,  73,  75,  67,  77,  76,  15,  56,  55       /*  55 Used by states (181,238) */
  ,  68,  30
  ,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102       /*  56 Used by state  (185) */
  ,-102,-102,-102,-102,-102,-102,-102,-102,-102, 129, 127, 128, 130, 131, 132, 133,-102
  , 242, 129, 127, 128, 130, 131, 132, 133                                                                   /*  57 Used by state  (188) */
  ,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116       /*  58 Used by state  (189) */
  ,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116
  ,-116,-116,-116,-116,-116, 130, 131, 132, 133,-116
  ,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117       /*  59 Used by state  (190) */
  ,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117
  ,-117,-117,-117,-117,-117, 130, 131, 132, 133,-117
  ,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118       /*  60 Used by state  (191) */
  ,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118
  ,-118,-118,-118, 127, 128, 130, 131, 132, 133,-118
  ,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119       /*  61 Used by state  (192) */
  ,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119
  ,-119,-119,-119,-119,-119,-119,-119,-119, 133,-119
  ,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120       /*  62 Used by state  (193) */
  ,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120
  ,-120,-120,-120,-120,-120,-120,-120,-120, 133,-120
  ,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121       /*  63 Used by state  (194) */
  ,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121
  ,-121,-121,-121,-121,-121,-121,-121,-121, 133,-121
  ,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115       /*  64 Used by state  (197) */
  ,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115, 129, 127, 128, 130, 131
  , 132, 133,-115
  , 243, 129, 127, 128, 130, 131, 132, 133                                                                   /*  65 Used by state  (208) */
  , 247, 246                                                                                                 /*  66 Used by state  (212) */
  ,-146, 129, 127, 128, 130, 131, 132, 133,-146                                                              /*  67 Used by state  (213) */
  , 248, 117, 118                                                                                            /*  68 Used by state  (215) */
  , 103, 102, -69, 105, 253, 104                                                                             /*  69 Used by state  (221) */
  , 256, 255                                                                                                 /*  70 Used by state  (223) */
  ,  21,  23,  22, 257                                                                                       /*  71 Used by state  (224) */
  ,-171,-171, 142, 143                                                                                       /*  72 Used by state  (225) */
  ,  79,  36,  80,  81,  82,  84,  83,  69,  70,  64,  65,  66,  73,  75,  67,  77,  76,  56,  55,  68       /*  73 Used by states (227,292) */
  , -31,  30
  , 219, -78                                                                                                 /*  74 Used by state  (228) */
  , -82, -82, -82, 262, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82                      /*  75 Used by state  (229) */
  , -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, 100, -60, -60, -60, -60            /*  76 Used by state  (230) */
  , 264, -40, 129, 127, 128, 130, 131, 132, 133                                                              /*  77 Used by state  (231) */
  ,  21,  23,  22,-149                                                                                       /*  78 Used by state  (234) */
  ,-155, 129, 127, 128, 130, 131, 132, 133,-155                                                              /*  79 Used by state  (235) */
  , 266,-151                                                                                                 /*  80 Used by state  (237) */
  ,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103       /*  81 Used by state  (239) */
  ,-103,-103,-103,-103,-103,-103,-103,-103,-103, 129, 127, 128, 130, 131, 132, 133,-103
  , 268, 129, 127, 128, 130, 131, 132, 133                                                                   /*  82 Used by state  (240) */
  , 129, 127, 128, 130, 131, 132, 133,-161                                                                   /*  83 Used by state  (245) */
  , -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, 117, 118, -79            /*  84 Used by state  (251) */
  , -24, -24, -24, 129, 127, 128, 130, 131, 132, 133                                                         /*  85 Used by state  (252) */
  , 103, 102, -69, 105, 274, 104                                                                             /*  86 Used by state  (254) */
  ,  15, 275, 276                                                                                            /*  87 Used by state  (255) */
  , 266, -32                                                                                                 /*  88 Used by state  (259) */
  , -80, -80, -80, 282, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80                           /*  89 Used by state  (261) */
  ,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107       /*  90 Used by state  (269) */
  ,-107,-107,-107,-107,-107,-107,-107,-107,-107, 129, 127, 128, 130, 131, 132, 133,-107
  , 290, 117, 118,-147                                                                                       /*  91 Used by state  (272) */
  , -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67       /*  92 Used by state  (273) */
  , -67, -67, -67, -67, -67, 117, 118, -67
  , -29, -29, -29, -29, -29, -29, -29, -29,  21,  23,  22                                                    /*  93 Used by state  (277) */
  , -87, -87, -87, -87, 296, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87                                /*  94 Used by state  (281) */
  ,  79,  36,  80,  81,  82,  84,  83, 304                                                                   /*  95 Used by states (284,318) */
  ,-154, 129, 127, 128, 130, 131, 132, 133,-154                                                              /*  96 Used by state  (285) */
  ,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108       /*  97 Used by state  (287) */
  ,-108,-108,-108,-108,-108,-108,-108,-108,-108, 129, 127, 128, 130, 131, 132, 133,-108
  , -67, -67, -67, -67, -67, 117, 118, 312                                                                   /*  98 Used by state  (291) */
  ,  21,  23,  22, 314                                                                                       /*  99 Used by state  (293) */
  , -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, 117, 118, -81                      /* 100 Used by state  (297) */
  , -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, 316, -83, -83, -83, -83                      /* 101 Used by state  (298) */
  , -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, 117, 118, -86            /* 102 Used by state  (300) */
  , 318, 317                                                                                                 /* 103 Used by state  (301) */
  , 117, 118,-148                                                                                            /* 104 Used by state  (311) */
  , -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, 328, -88, -88, -88, -88                                /* 105 Used by state  (322) */
  , -92, 330, -92, 331, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, 129, 127, 128, 130       /* 106 Used by state  (324) */
  , 131, 132, 133, -92
}; // Size of table:3.504(x86)/3.504(x64) bytes.

static const unsigned char termSetTable[209] = {
   0x01,0x00,0x44,0x40,0x00,0x24,0x12,0x00,0x00,0x00,0x00 /*   0   8 tokens Used by states (2,4,18,19,20,24,25,26,279,294,321,327) */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00 /*   1   2 tokens Used by states (28,92,153) */
  ,0x81,0x03,0x4c,0xd7,0xbd,0x75,0xfe,0xff,0xff,0xff,0x3f /*   2  61 tokens Used by state  (30) */
  ,0x01,0x00,0x44,0xc6,0x99,0x75,0x3a,0xf0,0x01,0x00,0x04 /*   3  26 tokens Used by states (34,107,165,312) */
  ,0xbf,0xef,0xcf,0xdf,0xfd,0x7f,0x3a,0xf0,0xff,0xff,0x3f /*   4  71 tokens Used by state  (36) */
  ,0x3f,0xec,0xc7,0x4f,0x50,0x37,0x3a,0xd0,0x01,0x3a,0x26 /*   5  43 tokens Used by states (39,40,41,171) */
  ,0x01,0x00,0x44,0x40,0x00,0x24,0x32,0xc0,0x01,0x00,0x04 /*   6  13 tokens Used by states (43,44,89) */
  ,0x01,0x00,0x44,0x47,0x00,0x25,0x3a,0xf0,0x01,0x00,0x04 /*   7  20 tokens Used by states (47,48,116,175,178,179) */
  ,0x81,0x00,0x44,0xc7,0x99,0x75,0x3a,0xf0,0x81,0x01,0x04 /*   8  30 tokens Used by states (52,120,177,186,232,241,265,286) */
  ,0x81,0x03,0x4c,0xd7,0xbd,0x75,0x3a,0xf0,0xff,0xff,0x05 /*   9  50 tokens Used by states (57,58,59,60,61,62,64,65,66,67,72,79,80,81,82,83,84,140,141,195,206,207,244,246,288,310) */
  ,0x81,0x03,0x4c,0xd7,0xbd,0x75,0x3a,0xf0,0xff,0xff,0x1d /*  10  52 tokens Used by states (77,78,203,204,205) */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x04 /*  11   3 tokens Used by states (93,94,96,97,98,249) */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x30,0x00,0x00,0x00 /*  12   3 tokens Used by states (156,250) */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x02,0x00,0x1c /*  13   5 tokens Used by state  (158) */
  ,0x81,0x00,0x44,0xc7,0x99,0x75,0x3a,0xf0,0xff,0x01,0x04 /*  14  36 tokens Used by states (196,198,199,200,201,202) */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x04 /*  15   2 tokens Used by states (214,226,271,278,302,303,305,306,307,308,309,319,326) */
  ,0x01,0x00,0x44,0x40,0x00,0x24,0x32,0xd0,0x01,0x00,0x04 /*  16  14 tokens Used by state  (295) */
  ,0x01,0x00,0x44,0x44,0x00,0x25,0x32,0xf0,0x01,0x00,0x04 /*  17  17 tokens Used by states (299,325) */
  ,0x01,0x00,0x44,0x40,0x00,0x24,0x32,0xf0,0x01,0x00,0x04 /*  18  15 tokens Used by states (323,329,330,331,332) */
}; // Size of table:212(x86)/216(x64) bytes.

/**********************************************************************************\
* The 3 arrays NTindexListTable, stateListTable and successorCode holds a          *
* compressed succesor-matrix, used by LRParser to find newstate = successor(S,A)   *
* as last part of a reduction with production P, A -> alfa.                        *
* A reduction by production P goes as follows:                                     *
*   Pop L elements from stack, where L = length of alfa;                           *
*   S = state on stacktop;                                                         *
*   A = leftside of the reduce production P;                                       *
*   newstate = successor(S,A);                                                     *
*   push(newstate), and set current state = newstate.                              *
*                                                                                  *
* For each relevant state S, a #define is generated and used as element S in array *
* successorCode. Each define has the format:                                       *
*                                                                                  *
* #define _suDDDD Code                                                             *
*                                                                                  *
* where DDDD is the statenumber S and Code is an unsigned int with the following   *
* format:                                                                          *
*                   0         1         2         3                                *
* Bit index:        01234567890123456789012345678901                               *
* Code              iiiiiiiiiiiiiiiiFrrrrrrrrrrrrrrr                               *
*                                                                                  *
* i          : Bit[ 0-15]: unsigned short                                          *
* r          : Bit[17-31]: unsigned short                                          *
* F          : Bit 16    : Indicates how to interpret i and r.                     *
*                                                                                  *
* F == 0: Uncompressed Format.                                                     *
*      i: Index into array NTindexListTable, pointing at the first element of      *
*         NTIndexList (see below).                                                 *
*      r: Index into array stateListTable, pointing at the first element of        *
*         stateList (see below).                                                   *
* F == 1: Compressed Format, used if there is only 1 possible newstate.            *
*      i: Index A' of nonterminal A, A' = (A - terminalCount).                     *
*      r: New state.                                                               *
*                                                                                  *
* F == 0: Use arrays NTIndexListTable and stateListTable to find newstate.         *
*      n                  : NTIndexListTable[i] = number of elements in NTIndexList*
*      NTIndexList[0..n-1]: NTIndexListTable[i+1..i+n]                             *
*                           Ordered list of possible nonterminal-indices.          *
*      stateList[0..n-1]  : stateListTable[r..r+n-1], same length as NTIndexList   *
*                                                                                  *
*      To get newstate, find index k in NTIndexList, so NTIndexList[k] == A',      *
*      and set newstate = stateList[k].                                            *
*      A' = (A - terminalCount) will always exist.                                 *
*      Note that both NTIndexList and stateList may be shared by several states.   *
\**********************************************************************************/

#define _su0000 0x00000000 /* NTindexList   0, stateList   0          */
#define _su0001 0x0014000b /* NTindexList   1, stateList   1          */
#define _su0010 0x00260015 /* NTindexList   2, stateList   2          */
#define _su0011 0x002c0019 /* NTindexList   3, stateList   3          */
#define _su0013 0x004d0018 /* Goto 38 on opt_alldistinct              */
#define _su0014 0x0057001c /* Goto 43 on opt_semi                     */
#define _su0015 0x005b0018 /* Goto 45 on opt_alldistinct              */
#define _su0016 0x0034001e /* NTindexList   4, stateList   4          */
#define _su0021 0x00af001a /* Goto 87 on opt_all                      */
#define _su0022 0x00560030 /* NTindexList   5, stateList   5          */
#define _su0023 0x005a0030 /* NTindexList   5, stateList   6          */
#define _su0029 0x00b9000d /* Goto 92 on type                         */
#define _su0032 0x00cb0028 /* Goto 101 on opt_join_type               */
#define _su0033 0x00d7000c /* Goto 107 on name                        */
#define _su0035 0x005e0033 /* NTindexList   6, stateList   7          */
#define _su0037 0x00db000c /* Goto 109 on name                        */
#define _su0038 0x0064001e /* NTindexList   4, stateList   8          */
#define _su0042 0x00df000e /* Goto 111 on number_const                */
#define _su0045 0x00860037 /* NTindexList   7, stateList   9          */
#define _su0046 0x00aa0030 /* NTindexList   5, stateList  10          */
#define _su0049 0x00e90026 /* Goto 116 on opt_alias                   */
#define _su0050 0x00ae004a /* NTindexList   8, stateList  11          */
#define _su0055 0x00cc005a /* NTindexList   9, stateList  12          */
#define _su0056 0x00e2005a /* NTindexList   9, stateList  13          */
#define _su0068 0x00f80066 /* NTindexList  10, stateList  14          */
#define _su0085 0x012d000c /* Goto 150 on name                        */
#define _su0086 0x012f000c /* Goto 151 on name                        */
#define _su0087 0x011a0030 /* NTindexList   5, stateList  15          */
#define _su0091 0x011e0078 /* NTindexList  11, stateList  16          */
#define _su0099 0x0122007b /* NTindexList  12, stateList  17          */
#define _su0100 0x012c0033 /* NTindexList   6, stateList  18          */
#define _su0106 0x014b000c /* Goto 165 on name                        */
#define _su0108 0x014d0028 /* Goto 166 on opt_join_type               */
#define _su0109 0x01320030 /* NTindexList   5, stateList  19          */
#define _su0112 0x0159001e /* Goto 172 on opt_from                    */
#define _su0115 0x01360081 /* NTindexList  13, stateList  20          */
#define _su0117 0x0156004a /* NTindexList   8, stateList  21          */
#define _su0118 0x0174004a /* NTindexList   8, stateList  22          */
#define _su0119 0x01920092 /* NTindexList  14, stateList  23          */
#define _su0121 0x01960030 /* NTindexList   5, stateList  24          */
#define _su0124 0x019a0095 /* NTindexList  15, stateList  25          */
#define _su0126 0x01b20095 /* NTindexList  15, stateList  26          */
#define _su0127 0x01ca0095 /* NTindexList  15, stateList  27          */
#define _su0128 0x01e20095 /* NTindexList  15, stateList  28          */
#define _su0129 0x01fa0095 /* NTindexList  15, stateList  29          */
#define _su0130 0x02120095 /* NTindexList  15, stateList  30          */
#define _su0131 0x022a0095 /* NTindexList  15, stateList  31          */
#define _su0132 0x02420095 /* NTindexList  15, stateList  32          */
#define _su0133 0x025a0095 /* NTindexList  15, stateList  33          */
#define _su0134 0x027200a2 /* NTindexList  16, stateList  34          */
#define _su0135 0x028c00a2 /* NTindexList  16, stateList  35          */
#define _su0136 0x02a600a2 /* NTindexList  16, stateList  36          */
#define _su0137 0x02c000a2 /* NTindexList  16, stateList  37          */
#define _su0138 0x02da00a2 /* NTindexList  16, stateList  38          */
#define _su0139 0x02f400a2 /* NTindexList  16, stateList  39          */
#define _su0142 0x0197000c /* Goto 203 on name                        */
#define _su0143 0x019b000c /* Goto 205 on name                        */
#define _su0146 0x030e0095 /* NTindexList  15, stateList  40          */
#define _su0147 0x032600b0 /* NTindexList  17, stateList  41          */
#define _su0148 0x032a00b3 /* NTindexList  18, stateList  42          */
#define _su0149 0x0346004a /* NTindexList   8, stateList  43          */
#define _su0154 0x01b1000e /* Goto 216 on number_const                */
#define _su0155 0x01b30011 /* Goto 217 on opt_where                   */
#define _su0159 0x00cb0028 /* Goto 101 on opt_join_type               */
#define _su0160 0x03640033 /* NTindexList   6, stateList  44          */
#define _su0167 0x036a00c2 /* NTindexList  19, stateList  45          */
#define _su0170 0x01c9000c /* Goto 228 on name                        */
#define _su0172 0x01cb0011 /* Goto 229 on opt_where                   */
#define _su0173 0x03780019 /* NTindexList   3, stateList  46          */
#define _su0174 0x03800095 /* NTindexList  15, stateList  47          */
#define _su0181 0x039800ca /* NTindexList  20, stateList  48          */
#define _su0183 0x03ba0095 /* NTindexList  15, stateList  49          */
#define _su0184 0x03d20095 /* NTindexList  15, stateList  50          */
#define _su0210 0x03ea0095 /* NTindexList  15, stateList  51          */
#define _su0218 0x040200dc /* NTindexList  21, stateList  52          */
#define _su0219 0x040a004a /* NTindexList   8, stateList  53          */
#define _su0220 0x04280095 /* NTindexList  15, stateList  54          */
#define _su0221 0x00cb0028 /* Goto 101 on opt_join_type               */
#define _su0222 0x04400033 /* NTindexList   6, stateList  55          */
#define _su0227 0x044600e1 /* NTindexList  22, stateList  56          */
#define _su0228 0x02090011 /* Goto 260 on opt_where                   */
#define _su0229 0x020b001f /* Goto 261 on opt_groupby                 */
#define _su0231 0x020f0022 /* Goto 263 on opt_pivotlist               */
#define _su0238 0x046200ca /* NTindexList  20, stateList  57          */
#define _su0242 0x04840095 /* NTindexList  15, stateList  58          */
#define _su0243 0x021d000d /* Goto 270 on type                        */
#define _su0247 0x049c00f0 /* NTindexList  23, stateList  59          */
#define _su0248 0x04b6004a /* NTindexList   8, stateList  60          */
#define _su0253 0x04d4004a /* NTindexList   8, stateList  61          */
#define _su0254 0x00cb0028 /* Goto 101 on opt_join_type               */
#define _su0255 0x04f20030 /* NTindexList   5, stateList  62          */
#define _su0256 0x04f600fe /* NTindexList  24, stateList  63          */
#define _su0261 0x02330020 /* Goto 281 on opt_having                  */
#define _su0266 0x04fe0095 /* NTindexList  15, stateList  64          */
#define _su0268 0x05160095 /* NTindexList  15, stateList  65          */
#define _su0272 0x0243003b /* Goto 289 on opt_falsepart               */
#define _su0274 0x052e004a /* NTindexList   8, stateList  66          */
#define _su0276 0x054c0030 /* NTindexList   5, stateList  67          */
#define _su0281 0x024f0021 /* Goto 295 on opt_orderby                 */
#define _su0282 0x0550004a /* NTindexList   8, stateList  68          */
#define _su0283 0x056e0103 /* NTindexList  25, stateList  69          */
#define _su0284 0x05900115 /* NTindexList  26, stateList  70          */
#define _su0290 0x05a0004a /* NTindexList   8, stateList  71          */
#define _su0292 0x05be00e1 /* NTindexList  22, stateList  72          */
#define _su0304 0x027f000e /* Goto 319 on number_const                */
#define _su0315 0x05da011e /* NTindexList  27, stateList  73          */
#define _su0316 0x05f6012d /* NTindexList  28, stateList  74          */
#define _su0318 0x0616013e /* NTindexList  29, stateList  75          */
#define _su0324 0x0293002d /* Goto 329 on opt_ascdesc                 */
#define _su0328 0x06240146 /* NTindexList  30, stateList  76          */

#define nil (unsigned int)-1
static const unsigned int successorCode[333] = {
   _su0000,_su0001,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,_su0010,_su0011,nil    ,_su0013,_su0014,_su0015,_su0016,nil    ,nil    ,nil
  ,nil    ,_su0021,_su0022,_su0023,nil    ,nil    ,nil    ,nil    ,nil    ,_su0029
  ,nil    ,nil    ,_su0032,_su0033,nil    ,_su0035,nil    ,_su0037,_su0038,nil
  ,nil    ,nil    ,_su0042,nil    ,nil    ,_su0045,_su0046,nil    ,nil    ,_su0049
  ,_su0050,nil    ,nil    ,nil    ,nil    ,_su0055,_su0056,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0068,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0085,_su0086,_su0087,nil    ,nil
  ,nil    ,_su0091,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0099
  ,_su0100,nil    ,nil    ,nil    ,nil    ,nil    ,_su0106,nil    ,_su0108,_su0109
  ,nil    ,nil    ,_su0112,nil    ,nil    ,_su0115,nil    ,_su0117,_su0118,_su0119
  ,nil    ,_su0121,nil    ,nil    ,_su0124,nil    ,_su0126,_su0127,_su0128,_su0129
  ,_su0130,_su0131,_su0132,_su0133,_su0134,_su0135,_su0136,_su0137,_su0138,_su0139
  ,nil    ,nil    ,_su0142,_su0143,nil    ,nil    ,_su0146,_su0147,_su0148,_su0149
  ,nil    ,nil    ,nil    ,nil    ,_su0154,_su0155,nil    ,nil    ,nil    ,_su0159
  ,_su0160,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0167,nil    ,nil
  ,_su0170,nil    ,_su0172,_su0173,_su0174,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,_su0181,nil    ,_su0183,_su0184,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,_su0210,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0218,_su0219
  ,_su0220,_su0221,_su0222,nil    ,nil    ,nil    ,nil    ,_su0227,_su0228,_su0229
  ,nil    ,_su0231,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0238,nil
  ,nil    ,nil    ,_su0242,_su0243,nil    ,nil    ,nil    ,_su0247,_su0248,nil
  ,nil    ,nil    ,nil    ,_su0253,_su0254,_su0255,_su0256,nil    ,nil    ,nil
  ,nil    ,_su0261,nil    ,nil    ,nil    ,nil    ,_su0266,nil    ,_su0268,nil
  ,nil    ,nil    ,_su0272,nil    ,_su0274,nil    ,_su0276,nil    ,nil    ,nil
  ,nil    ,_su0281,_su0282,_su0283,_su0284,nil    ,nil    ,nil    ,nil    ,nil
  ,_su0290,nil    ,_su0292,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,_su0304,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0315,_su0316,nil    ,_su0318,nil
  ,nil    ,nil    ,nil    ,nil    ,_su0324,nil    ,nil    ,nil    ,_su0328,nil
  ,nil    ,nil    ,nil
}; // Size of table:1.332(x86)/1.336(x64) bytes.

static const unsigned char NTindexListTable[340] = {
    10,   1,   2,   3,   4,   5,   6,   7,   8,   9,  27                                                     /*    0 Used by state  (0) */
  ,  9,   2,   3,   4,   5,   6,   7,   8,   9,  27                                                          /*    1 Used by state  (1) */
  ,  3,  10,  11,  12                                                                                        /*    2 Used by state  (10) */
  ,  4,  12,  14,  15,  39                                                                                   /*    3 Used by states (11,173) */
  , 17,  12,  14,  19,  20,  25,  36,  37,  46,  48,  49,  50,  51,  52,  53,  54,  56,  58                  /*    4 Used by states (16,38) */
  ,  2,   6,  27                                                                                             /*    5 Used by states (22,23,46,87,109,121,255,276) */
  ,  3,  12,  14,  39                                                                                        /*    6 Used by states (35,100,160,222) */
  , 18,  12,  14,  19,  20,  25,  29,  36,  37,  46,  48,  49,  50,  51,  52,  53,  54,  56,  58             /*    7 Used by state  (45) */
  , 15,  12,  14,  19,  20,  37,  46,  48,  49,  50,  51,  52,  53,  54,  56,  58                            /*    8 Used by states (50,117,118,149,219,248,253,274,282,290) */
  , 11,  12,  14,  19,  49,  50,  51,  52,  53,  54,  56,  58                                                /*    9 Used by states (55,56) */
  , 17,   6,  12,  14,  19,  20,  27,  37,  46,  48,  49,  50,  51,  52,  53,  54,  56,  58                  /*   10 Used by state  (68) */
  ,  2,  11,  12                                                                                             /*   11 Used by state  (91) */
  ,  5,  12,  14,  16,  18,  19                                                                              /*   12 Used by state  (99) */
  , 16,  12,  14,  19,  20,  36,  37,  46,  48,  49,  50,  51,  52,  53,  54,  56,  58                       /*   13 Used by state  (115) */
  ,  2,  12,  14                                                                                             /*   14 Used by state  (119) */
  , 12,  12,  14,  19,  20,  49,  50,  51,  52,  53,  54,  56,  58                                           /*   15 Used by states (124,126,127,128,129,130,131,132,133,146,174,183,184,210,220,242,266,268) */
  , 13,  12,  14,  19,  20,  48,  49,  50,  51,  52,  53,  54,  56,  58                                      /*   16 Used by states (134,135,136,137,138,139) */
  ,  2,  24,  55                                                                                             /*   17 Used by state  (147) */
  , 14,  12,  14,  19,  20,  49,  50,  51,  52,  53,  54,  56,  57,  58,  60                                 /*   18 Used by state  (148) */
  ,  7,   6,  12,  14,  19,  21,  27,  63                                                                    /*   19 Used by state  (167) */
  , 17,   6,  12,  14,  19,  20,  23,  27,  47,  49,  50,  51,  52,  53,  54,  56,  58,  61                  /*   20 Used by states (181,238) */
  ,  4,  12,  14,  18,  19                                                                                   /*   21 Used by state  (218) */
  , 14,  12,  14,  19,  20,  22,  23,  49,  50,  51,  52,  53,  54,  56,  58                                 /*   22 Used by states (227,292) */
  , 13,  12,  14,  19,  20,  49,  50,  51,  52,  53,  54,  56,  58,  60                                      /*   23 Used by state  (247) */
  ,  4,  12,  14,  19,  63                                                                                   /*   24 Used by state  (256) */
  , 17,  12,  14,  19,  20,  37,  41,  42,  46,  48,  49,  50,  51,  52,  53,  54,  56,  58                  /*   25 Used by state  (283) */
  ,  8,  14,  35,  50,  51,  52,  53,  54,  62                                                               /*   26 Used by state  (284) */
  , 14,  12,  14,  19,  20,  43,  44,  49,  50,  51,  52,  53,  54,  56,  58                                 /*   27 Used by state  (315) */
  , 16,  12,  14,  19,  20,  37,  42,  46,  48,  49,  50,  51,  52,  53,  54,  56,  58                       /*   28 Used by state  (316) */
  ,  7,  14,  50,  51,  52,  53,  54,  62                                                                    /*   29 Used by state  (318) */
  , 13,  12,  14,  19,  20,  44,  49,  50,  51,  52,  53,  54,  56,  58                                      /*   30 Used by state  (328) */
}; // Size of table:340(x86)/344(x64) bytes.

static const unsigned short stateListTable[799] = {
      1,   2,   3,   4,   5,   6,   7,   8,   9,  14                                                         /*   0 Used by state  (0) */
  ,  18,   3,   4,   5,   6,   7,   8,   9,  14                                                              /*   1 Used by state  (1) */
  ,  27,  28,  29                                                                                            /*   2 Used by state  (10) */
  ,  33,  34,  31,  32                                                                                       /*   3 Used by state  (11) */
  ,  74,  78,  63,  53,  46,  47,  49,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                      /*   4 Used by state  (16) */
  ,  89,  14                                                                                                 /*   5 Used by state  (22) */
  ,  90,  14                                                                                                 /*   6 Used by state  (23) */
  ,  33,  34, 108                                                                                            /*   7 Used by state  (35) */
  ,  74,  78,  63,  53, 110,  47,  49,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                      /*   8 Used by state  (38) */
  ,  74,  78,  63,  53, 113, 112,  47,  49,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                 /*   9 Used by state  (45) */
  , 114,  14                                                                                                 /*  10 Used by state  (46) */
  ,  74,  78,  63,  53, 120,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                                /*  11 Used by state  (50) */
  ,  74,  78,  63, 140,  58,  59,  60,  61,  62,  71,  72                                                    /*  12 Used by state  (55) */
  ,  74,  78,  63, 141,  58,  59,  60,  61,  62,  71,  72                                                    /*  13 Used by state  (56) */
  , 145,  74,  78,  63,  53,  14, 144,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                      /*  14 Used by state  (68) */
  , 152,  14                                                                                                 /*  15 Used by state  (87) */
  , 153,  29                                                                                                 /*  16 Used by state  (91) */
  , 158,  78, 155, 156, 157                                                                                  /*  17 Used by state  (99) */
  ,  33,  34, 159                                                                                            /*  18 Used by state  (100) */
  , 169,  14                                                                                                 /*  19 Used by state  (109) */
  ,  74,  78,  63,  53, 175,  49,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                           /*  20 Used by state  (115) */
  ,  74,  78,  63,  53, 176,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                                /*  21 Used by state  (117) */
  ,  74,  78,  63,  53, 177,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                                /*  22 Used by state  (118) */
  , 178, 179                                                                                                 /*  23 Used by state  (119) */
  , 180,  14                                                                                                 /*  24 Used by state  (121) */
  ,  74,  78,  63, 185,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  25 Used by state  (124) */
  ,  74,  78,  63, 188,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  26 Used by state  (126) */
  ,  74,  78,  63, 189,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  27 Used by state  (127) */
  ,  74,  78,  63, 190,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  28 Used by state  (128) */
  ,  74,  78,  63, 191,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  29 Used by state  (129) */
  ,  74,  78,  63, 192,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  30 Used by state  (130) */
  ,  74,  78,  63, 193,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  31 Used by state  (131) */
  ,  74,  78,  63, 194,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  32 Used by state  (132) */
  ,  74,  78,  63, 195,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  33 Used by state  (133) */
  ,  74,  78,  63, 197, 196,  57,  58,  59,  60,  61,  62,  71,  72                                          /*  34 Used by state  (134) */
  ,  74,  78,  63, 197, 198,  57,  58,  59,  60,  61,  62,  71,  72                                          /*  35 Used by state  (135) */
  ,  74,  78,  63, 197, 199,  57,  58,  59,  60,  61,  62,  71,  72                                          /*  36 Used by state  (136) */
  ,  74,  78,  63, 197, 200,  57,  58,  59,  60,  61,  62,  71,  72                                          /*  37 Used by state  (137) */
  ,  74,  78,  63, 197, 201,  57,  58,  59,  60,  61,  62,  71,  72                                          /*  38 Used by state  (138) */
  ,  74,  78,  63, 197, 202,  57,  58,  59,  60,  61,  62,  71,  72                                          /*  39 Used by state  (139) */
  ,  74,  78,  63, 208,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  40 Used by state  (146) */
  , 210, 209                                                                                                 /*  41 Used by state  (147) */
  ,  74,  78,  63, 213,  57,  58,  59,  60,  61,  62,  71, 212,  72, 214                                     /*  42 Used by state  (148) */
  ,  74,  78,  63,  53, 215,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                                /*  43 Used by state  (149) */
  ,  33,  34, 221                                                                                            /*  44 Used by state  (160) */
  , 224, 158,  78, 225, 223,  14, 226                                                                        /*  45 Used by state  (167) */
  ,  33,  34, 230,  32                                                                                       /*  46 Used by state  (173) */
  ,  74,  78,  63, 231,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  47 Used by state  (174) */
  , 234,  74,  78,  63, 235, 237,  14, 233,  57,  58,  59,  60,  61,  62,  71,  72, 236                      /*  48 Used by state  (181) */
  ,  74,  78,  63, 239,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  49 Used by state  (183) */
  ,  74,  78,  63, 240,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  50 Used by state  (184) */
  ,  74,  78,  63, 245,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  51 Used by state  (210) */
  , 158,  78, 250, 157                                                                                       /*  52 Used by state  (218) */
  ,  74,  78,  63,  53, 251,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                                /*  53 Used by state  (219) */
  ,  74,  78,  63, 252,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  54 Used by state  (220) */
  ,  33,  34, 254                                                                                            /*  55 Used by state  (222) */
  ,  74,  78,  63, 235, 258, 259,  57,  58,  59,  60,  61,  62,  71,  72                                     /*  56 Used by state  (227) */
  , 234,  74,  78,  63, 235, 237,  14, 267,  57,  58,  59,  60,  61,  62,  71,  72, 236                      /*  57 Used by state  (238) */
  ,  74,  78,  63, 269,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  58 Used by state  (242) */
  ,  74,  78,  63, 213,  57,  58,  59,  60,  61,  62,  71,  72, 271                                          /*  59 Used by state  (247) */
  ,  74,  78,  63,  53, 272,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                                /*  60 Used by state  (248) */
  ,  74,  78,  63,  53, 273,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                                /*  61 Used by state  (253) */
  , 277,  14                                                                                                 /*  62 Used by state  (255) */
  , 158,  78, 225, 278                                                                                       /*  63 Used by state  (256) */
  ,  74,  78,  63, 285,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  64 Used by state  (266) */
  ,  74,  78,  63, 287,  57,  58,  59,  60,  61,  62,  71,  72                                               /*  65 Used by state  (268) */
  ,  74,  78,  63,  53, 291,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                                /*  66 Used by state  (274) */
  , 293,  14                                                                                                 /*  67 Used by state  (276) */
  ,  74,  78,  63,  53, 297,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                                /*  68 Used by state  (282) */
  ,  74,  78,  63,  53, 300, 298, 299,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                      /*  69 Used by state  (283) */
  , 303, 301, 305, 306, 307, 308, 309, 302                                                                   /*  70 Used by state  (284) */
  ,  74,  78,  63,  53, 311,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                                /*  71 Used by state  (290) */
  ,  74,  78,  63, 235, 313, 259,  57,  58,  59,  60,  61,  62,  71,  72                                     /*  72 Used by state  (292) */
  ,  74,  78,  63, 324, 322, 323,  57,  58,  59,  60,  61,  62,  71,  72                                     /*  73 Used by state  (315) */
  ,  74,  78,  63,  53, 300, 325,  52,  54,  57,  58,  59,  60,  61,  62,  71,  72                           /*  74 Used by state  (316) */
  , 303, 305, 306, 307, 308, 309, 326                                                                        /*  75 Used by state  (318) */
  ,  74,  78,  63, 324, 332,  57,  58,  59,  60,  61,  62,  71,  72                                          /*  76 Used by state  (328) */
}; // Size of table:1.600(x86)/1.600(x64) bytes.

/**********************************************************************************\
* The productionLength[] is indexed by production number and holds the number of   *
* symbols on the right side of each production.                                    *
\**********************************************************************************/
static const unsigned char productionLength[189] = {
  /*   0 */    1,  2,  1,  2,  1,  2,  1,  2,  2,  2
  /*  10 */ ,  2,  3,  1,  2,  1,  1,  1,  4,  1,  1
  /*  20 */ ,  1,  5,  3,  1,  3, 11,  8, 10,  7,  7
  /*  30 */ ,  4,  0,  1,  6,  4,  3,  3,  2,  8,  6
  /*  40 */ ,  0,  4,  0,  1,  0,  1,  1,  1,  2,  3
  /*  50 */ ,  0,  1,  3,  1,  1,  2,  0,  2,  2,  0
  /*  60 */ ,  2,  3,  1,  1,  3,  2,  1,  6,  8,  0
  /*  70 */ ,  1,  1,  1,  1,  2,  2,  2,  2,  0,  2
  /*  80 */ ,  0,  2,  0,  3,  3,  1,  1,  0,  3,  3
  /*  90 */ ,  1,  2,  0,  1,  1,  3,  3,  2,  4,  1
  /* 100 */ ,  5,  6,  3,  4,  3,  4,  1,  5,  6,  3
  /* 110 */ ,  3,  3,  3,  3,  3,  1,  3,  3,  3,  3
  /* 120 */ ,  3,  3,  3,  2,  2,  1,  1,  1,  1,  1
  /* 130 */ ,  1,  1,  1,  1,  1,  1,  3,  6,  3,  4
  /* 140 */ ,  4,  1,  7,  1,  3,  0,  1,  0,  2,  1
  /* 150 */ ,  1,  1,  0,  1,  3,  1,  3,  1,  1,  1
  /* 160 */ ,  1,  2,  1,  3,  3,  3,  1,  1,  1,  1
  /* 170 */ ,  3,  1,  3,  3,  1,  2,  1,  1,  1,  1
  /* 180 */ ,  1,  1,  1,  1,  1,  1,  1,  1,  1
}; // Size of table:192(x86)/192(x64) bytes.

/**********************************************************************************\
* leftSideTable[] is indexed by production number.                                 *
* leftSideTable[p] = A', A' = (A - terminalCount)                                  *
*                        where A is the left side of production p.                 *
* A' = 0..nonterminalCount-1.                                                      *
* p  = 0..productionCount-1                                                        *
\**********************************************************************************/
static const unsigned char leftSideTable[189] = {
  /*   0 */    0,  1,  1,  2,  2,  2,  2,  2,  2,  2
  /*  10 */ ,  9, 10, 10, 11, 13, 13, 13, 13, 13, 13
  /*  20 */ , 13,  3, 16, 16, 18,  4,  4,  4,  4,  4
  /*  30 */ ,  4, 22, 22,  5,  6,  6,  6,  6, 27,  7
  /*  40 */ , 34, 34, 26, 26, 24, 24, 24, 24, 24, 24
  /*  50 */ , 29, 29, 25, 25, 36, 36, 38, 38, 38, 30
  /*  60 */ , 30, 15, 15, 39, 39, 39, 39, 39, 39, 40
  /*  70 */ , 40, 40, 40, 40, 40, 40, 40, 40, 17, 17
  /*  80 */ , 32, 32, 31, 31, 41, 41, 42, 33, 33, 43
  /*  90 */ , 43, 44, 45, 45, 45, 37, 37, 37, 37, 37
  /* 100 */ , 37, 37, 37, 37, 37, 37, 37, 46, 46, 48
  /* 110 */ , 48, 48, 48, 48, 48, 48, 20, 20, 20, 20
  /* 120 */ , 20, 20, 20, 20, 20, 20, 49, 49, 49, 49
  /* 130 */ , 49, 49, 49, 49, 49, 49, 49, 49, 49, 49
  /* 140 */ , 49, 49, 58, 57, 57, 60, 60, 59, 59, 47
  /* 150 */ , 47, 61, 28, 28, 23, 23, 35, 35, 56, 56
  /* 160 */ , 56, 55, 55, 19, 19, 19, 19, 19, 19, 21
  /* 170 */ , 21, 63,  8,  8, 62, 62, 62, 62, 62, 62
  /* 180 */ , 62, 12, 14, 50, 51, 52, 53, 54, 54
}; // Size of table:192(x86)/192(x64) bytes.

/**********************************************************************************\
* rightSideTable[] holds a compressed form of the rightsides of all                *
* productions in the grammar. Only used for debugging.                             *
\**********************************************************************************/
static const unsigned char rightSideTable[410] = {
  /*   0 */   87
  /*   1 */ , 87, 88
  /*   2 */ , 88
  /*   3 */ , 89, 60
  /*   4 */ , 90
  /*   5 */ , 91, 60
  /*   6 */ , 92
  /*   7 */ , 93, 60
  /*   8 */ , 94, 60
  /*   9 */ , 95, 60
  /*  10 */ , 42, 96
  /*  11 */ , 96, 61, 97
  /*  12 */ , 97
  /*  13 */ , 98, 99
  /*  14 */ , 59
  /*  15 */ , 58
  /*  16 */ , 55
  /*  17 */ , 55, 81,100, 82
  /*  18 */ , 54
  /*  19 */ , 57
  /*  20 */ , 56
  /*  21 */ , 49,101, 46,102,103
  /*  22 */ ,102, 61,104
  /*  23 */ ,104
  /*  24 */ ,105, 65,106
  /*  25 */ , 30, 33, 98, 81,107, 82, 50, 81,108, 82, 60
  /*  26 */ , 30, 33, 98, 50, 81,108, 82, 60
  /*  27 */ , 30, 33, 98, 81,107, 82, 81, 92, 82, 60
  /*  28 */ , 30, 33, 98, 81, 92, 82, 60
  /*  29 */ , 30, 33, 98, 81,107, 82, 92
  /*  30 */ , 30, 33, 98, 92
  /*  32 */ ,109
  /*  33 */ , 18,110,111, 24, 98,103
  /*  34 */ , 92, 62,112, 92
  /*  35 */ , 92, 64, 92
  /*  36 */ , 92, 63, 92
  /*  37 */ ,113,114
  /*  38 */ , 45,110,115,116,103,117,118,119
  /*  39 */ , 52,111, 92, 53,106,120
  /*  41 */ , 28, 81,121, 82
  /*  43 */ ,  6
  /*  45 */ ,  6
  /*  46 */ , 20
  /*  47 */ , 21
  /*  48 */ , 48,100
  /*  49 */ , 48,100, 43
  /*  51 */ ,111
  /*  52 */ ,111, 61,122
  /*  53 */ ,122
  /*  54 */ , 77
  /*  55 */ ,123,124
  /*  57 */ ,  7, 98
  /*  58 */ ,  7,100
  /*  60 */ , 24,101
  /*  61 */ ,101, 61,125
  /*  62 */ ,125
  /*  63 */ , 98
  /*  64 */ , 98,  7, 98
  /*  65 */ , 98, 98
  /*  66 */ ,100
  /*  67 */ ,125,126, 35,125, 39,123
  /*  68 */ , 81,125,126, 35,125, 39,123, 82
  /*  70 */ , 32
  /*  71 */ , 31
  /*  72 */ , 44
  /*  73 */ , 36
  /*  74 */ , 36, 31
  /*  75 */ , 36, 32
  /*  76 */ , 44, 31
  /*  77 */ , 44, 32
  /*  79 */ , 51,123
  /*  81 */ , 26,123
  /*  83 */ , 25, 12,127
  /*  84 */ ,127, 61,128
  /*  85 */ ,128
  /*  86 */ ,123
  /*  88 */ , 40, 12,129
  /*  89 */ ,129, 61,130
  /*  90 */ ,130
  /*  91 */ ,106,131
  /*  93 */ ,  8
  /*  94 */ , 19
  /*  95 */ ,123, 71,123
  /*  96 */ ,123, 72,123
  /*  97 */ , 73,123
  /*  98 */ , 23, 81, 92, 82
  /*  99 */ ,132
  /* 100 */ ,106, 28, 81,133, 82
  /* 101 */ ,106, 73, 28, 81,133, 82
  /* 102 */ ,106, 37,106
  /* 103 */ ,106, 73, 37,106
  /* 104 */ ,106, 34, 38
  /* 105 */ ,106, 34, 73, 38
  /* 106 */ ,134
  /* 107 */ ,106,  9,106, 72,106
  /* 108 */ ,106, 73,  9,106, 72,106
  /* 109 */ ,134, 68,134
  /* 110 */ ,134, 67,134
  /* 111 */ ,134, 70,134
  /* 112 */ ,134, 69,134
  /* 113 */ ,134, 65,134
  /* 114 */ ,134, 66,134
  /* 115 */ ,106
  /* 116 */ ,106, 75,106
  /* 117 */ ,106, 76,106
  /* 118 */ ,106, 74,106
  /* 119 */ ,106, 77,106
  /* 120 */ ,106, 78,106
  /* 121 */ ,106, 79,106
  /* 122 */ ,106, 80,106
  /* 123 */ , 76,135
  /* 124 */ , 75,135
  /* 125 */ ,135
  /* 126 */ ,136
  /* 127 */ ,137
  /* 128 */ ,138
  /* 129 */ ,139
  /* 130 */ ,140
  /* 131 */ ,105
  /* 132 */ , 15
  /* 133 */ , 16
  /* 134 */ , 17
  /* 135 */ , 38
  /* 136 */ , 81,123, 82
  /* 137 */ , 13, 81,106,  7, 99, 82
  /* 138 */ , 81, 92, 82
  /* 139 */ , 14, 81,141, 82
  /* 140 */ ,142, 81,143, 82
  /* 141 */ ,144
  /* 142 */ , 27, 81,123, 61,123,145, 82
  /* 143 */ ,146
  /* 144 */ ,143, 61,146
  /* 146 */ ,106
  /* 148 */ , 61,123
  /* 149 */ , 92
  /* 150 */ ,147
  /* 151 */ ,109
  /* 153 */ , 60
  /* 154 */ ,109, 61,106
  /* 155 */ ,106
  /* 156 */ ,121, 61,148
  /* 157 */ ,148
  /* 158 */ , 98
  /* 159 */ , 36
  /* 160 */ , 44
  /* 161 */ ,110,106
  /* 162 */ , 77
  /* 163 */ ,105, 83, 98
  /* 164 */ ,105, 83, 77
  /* 165 */ ,105, 84, 98
  /* 166 */ , 98
  /* 167 */ , 41
  /* 168 */ ,100
  /* 169 */ ,149
  /* 170 */ ,107, 61,149
  /* 171 */ ,105
  /* 172 */ , 22, 47, 98
  /* 173 */ , 22, 29, 98
  /* 174 */ ,100
  /* 175 */ , 76,100
  /* 176 */ ,136
  /* 177 */ ,137
  /* 178 */ ,138
  /* 179 */ ,139
  /* 180 */ ,140
  /* 181 */ , 85
  /* 182 */ ,  2
  /* 183 */ ,  1
  /* 184 */ ,  3
  /* 185 */ ,  4
  /* 186 */ ,  5
  /* 187 */ , 11
  /* 188 */ , 10
}; // Size of table:412(x86)/416(x64) bytes.

/**********************************************************************************\
* symbolNames is a space separated string with the names of all symbols used in    *
* grammar, terminals and nonTerminals. Only used for debugging.                    *
\**********************************************************************************/
static const char *symbolNames = {
  "EOI"                                               /* T     0               */
  " STRING"                                           /* T     1               */
  " NUMBER"                                           /* T     2               */
  " DATECONST"                                        /* T     3               */
  " TIMECONST"                                        /* T     4               */
  " TIMESTAMPCONST"                                   /* T     5               */
  " ALL"                                              /* T     6               */
  " AS"                                               /* T     7               */
  " ASCENDING"                                        /* T     8               */
  " BETWEEN"                                          /* T     9               */
  " BOOLFALSE"                                        /* T    10               */
  " BOOLTRUE"                                         /* T    11               */
  " BY"                                               /* T    12               */
  " CAST"                                             /* T    13               */
  " COUNT"                                            /* T    14               */
  " CURRENTDATE"                                      /* T    15               */
  " CURRENTTIME"                                      /* T    16               */
  " CURRENTTIMESTAMP"                                 /* T    17               */
  " DELETESYM"                                        /* T    18               */
  " DESCENDING"                                       /* T    19               */
  " DISTINCT"                                         /* T    20               */
  " DISTINCTROW"                                      /* T    21               */
  " DROP"                                             /* T    22               */
  " EXISTS"                                           /* T    23               */
  " FROM"                                             /* T    24               */
  " GROUp"                                            /* T    25               */
  " HAVING"                                           /* T    26               */
  " IIF"                                              /* T    27               */
  " INSYM"                                            /* T    28               */
  " INDEX"                                            /* T    29               */
  " INSERT"                                           /* T    30               */
  " INNER"                                            /* T    31               */
  " OUTER"                                            /* T    32               */
  " INTO"                                             /* T    33               */
  " IS"                                               /* T    34               */
  " JOIN"                                             /* T    35               */
  " LEFT"                                             /* T    36               */
  " LIKE"                                             /* T    37               */
  " NULLVAL"                                          /* T    38               */
  " ON"                                               /* T    39               */
  " ORDER"                                            /* T    40               */
  " PARAM"                                            /* T    41               */
  " PARAMETERS"                                       /* T    42               */
  " PERCENT"                                          /* T    43               */
  " RIGHT"                                            /* T    44               */
  " SELECT"                                           /* T    45               */
  " SET"                                              /* T    46               */
  " TABLE"                                            /* T    47               */
  " TOP"                                              /* T    48               */
  " UPDATE"                                           /* T    49               */
  " VALUES"                                           /* T    50               */
  " WHERE"                                            /* T    51               */
  " TRANSFORM"                                        /* T    52               */
  " PIVOT"                                            /* T    53               */
  " TYPEBIT"                                          /* T    54               */
  " TYPETEXT"                                         /* T    55               */
  " TYPEVALUE"                                        /* T    56               */
  " TYPEDOUBLE"                                       /* T    57               */
  " TYPELONG"                                         /* T    58               */
  " TYPEDATETIME"                                     /* T    59               */
  " SEMI"                                             /* T    60               */
  " COMMA"                                            /* T    61               */
  " UNION"                                            /* T    62               */
  " SETDIFFERENCE"                                    /* T    63               */
  " INTERSECT"                                        /* T    64               */
  " EQUAL"                                            /* T    65               */
  " NOTEQ"                                            /* T    66               */
  " RELOPLE"                                          /* T    67               */
  " RELOPLT"                                          /* T    68               */
  " RELOPGE"                                          /* T    69               */
  " RELOPGT"                                          /* T    70               */
  " OR"                                               /* T    71               */
  " AND"                                              /* T    72               */
  " NOT"                                              /* T    73               */
  " CONCAT"                                           /* T    74               */
  " PLUS"                                             /* T    75               */
  " MINUS"                                            /* T    76               */
  " STAR"                                             /* T    77               */
  " DIVOP"                                            /* T    78               */
  " MODOP"                                            /* T    79               */
  " EXPO"                                             /* T    80               */
  " LPAR"                                             /* T    81               */
  " RPAR"                                             /* T    82               */
  " DOT"                                              /* T    83               */
  " EXCLAMATION"                                      /* T    84               */
  " NAME"                                             /* T    85               */
  " start"                                            /* NT   86 NTindex=0     */
  " stmt_list"                                        /* NT   87 NTindex=1     */
  " stmt"                                             /* NT   88 NTindex=2     */
  " update_stmt"                                      /* NT   89 NTindex=3     */
  " insert_stmt"                                      /* NT   90 NTindex=4     */
  " delete_stmt"                                      /* NT   91 NTindex=5     */
  " select_stmt"                                      /* NT   92 NTindex=6     */
  " transform_stmt"                                   /* NT   93 NTindex=7     */
  " drop_stmt"                                        /* NT   94 NTindex=8     */
  " parameter_stmt"                                   /* NT   95 NTindex=9     */
  " parameter_list"                                   /* NT   96 NTindex=10    */
  " parameter"                                        /* NT   97 NTindex=11    */
  " name"                                             /* NT   98 NTindex=12    */
  " type"                                             /* NT   99 NTindex=13    */
  " number_const"                                     /* NT  100 NTindex=14    */
  " from_table_list"                                  /* NT  101 NTindex=15    */
  " assign_list"                                      /* NT  102 NTindex=16    */
  " opt_where"                                        /* NT  103 NTindex=17    */
  " assign"                                           /* NT  104 NTindex=18    */
  " tab_col"                                          /* NT  105 NTindex=19    */
  " expr"                                             /* NT  106 NTindex=20    */
  " insert_elem_list"                                 /* NT  107 NTindex=21    */
  " opt_expr_list"                                    /* NT  108 NTindex=22    */
  " expr_list"                                        /* NT  109 NTindex=23    */
  " opt_alldistinct"                                  /* NT  110 NTindex=24    */
  " select_list"                                      /* NT  111 NTindex=25    */
  " opt_all"                                          /* NT  112 NTindex=26    */
  " simple_select"                                    /* NT  113 NTindex=27    */
  " opt_semi"                                         /* NT  114 NTindex=28    */
  " opt_select_list"                                  /* NT  115 NTindex=29    */
  " opt_from"                                         /* NT  116 NTindex=30    */
  " opt_groupby"                                      /* NT  117 NTindex=31    */
  " opt_having"                                       /* NT  118 NTindex=32    */
  " opt_orderby"                                      /* NT  119 NTindex=33    */
  " opt_pivotlist"                                    /* NT  120 NTindex=34    */
  " const_list"                                       /* NT  121 NTindex=35    */
  " select_elem"                                      /* NT  122 NTindex=36    */
  " search_condition"                                 /* NT  123 NTindex=37    */
  " opt_alias"                                        /* NT  124 NTindex=38    */
  " from_table"                                       /* NT  125 NTindex=39    */
  " opt_join_type"                                    /* NT  126 NTindex=40    */
  " groupby_list"                                     /* NT  127 NTindex=41    */
  " group_elem"                                       /* NT  128 NTindex=42    */
  " order_elem_list"                                  /* NT  129 NTindex=43    */
  " order_elem"                                       /* NT  130 NTindex=44    */
  " opt_ascdesc"                                      /* NT  131 NTindex=45    */
  " between_condition"                                /* NT  132 NTindex=46    */
  " set_expr"                                         /* NT  133 NTindex=47    */
  " bool_expr"                                        /* NT  134 NTindex=48    */
  " unary"                                            /* NT  135 NTindex=49    */
  " string_const"                                     /* NT  136 NTindex=50    */
  " date_const"                                       /* NT  137 NTindex=51    */
  " time_const"                                       /* NT  138 NTindex=52    */
  " timestamp_const"                                  /* NT  139 NTindex=53    */
  " bool_const"                                       /* NT  140 NTindex=54    */
  " count_arg"                                        /* NT  141 NTindex=55    */
  " funcname"                                         /* NT  142 NTindex=56    */
  " opt_funcparameter_list"                           /* NT  143 NTindex=57    */
  " iif_expression"                                   /* NT  144 NTindex=58    */
  " opt_falsepart"                                    /* NT  145 NTindex=59    */
  " funcparameter"                                    /* NT  146 NTindex=60    */
  " set_expr_list"                                    /* NT  147 NTindex=61    */
  " constsymbol"                                      /* NT  148 NTindex=62    */
  " insert_elem"                                      /* NT  149 NTindex=63    */
}; // Total size of string:1.372(x86)/1.376(x64) bytes

static const ParserTablesTemplate<86,150,189,333
                                 ,unsigned char
                                 ,unsigned char
                                 ,unsigned char
                                 ,short
                                 ,unsigned short> SqlTables_s(actionCode      , termListTable     , actionListTable, termSetTable
                                                             ,successorCode   , NTindexListTable  , stateListTable
                                                             ,productionLength, leftSideTable
                                                             ,rightSideTable  , symbolNames
                                                             ,11908, 12000);

const ParserTables *SqlParser::SqlTables = &SqlTables_s;
// Size of SqlTables_s: 68(x86)/128(x64) bytes. Size of SqlTables:4(x86)/8(x64) bytes

// Total size of table data:11.908(x86)/12.000(x64) bytes.
