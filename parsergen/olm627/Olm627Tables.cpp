/* DO NOT EDIT THIS FILE - it is machine generated */
#line 31 "C:\\Mytools2015\\ParserGen\\Olm627\\Olm627.y"
#include "stdafx.h"
#include "Olm627Parser.h"
#line 36 "C:\\mytools2015\\parsergen\\lib\\parsergencpp.par"
#include <ParserTablesTemplate.h>
#define _tc0000 0x00000000 /*                                                           */
#define _tc0001 0x00050000 /* a   Shift to    2 from    0                               */
#define _tc0002 0x00070000 /* b   Shift to    3 from    0                               */
#define _tc0003 0x00000000 /* c   shiftFromStateArray    0, shiftToStateArrayTable    0 */
#define _tc0004 0x00040003 /* d   shiftFromStateArray    1, shiftToStateArrayTable    1 */
#define _tc0005 0x00080006 /* f   shiftFromStateArray    2, shiftToStateArrayTable    2 */

static const unsigned int shiftCodeArray[6] = {
   _tc0000,_tc0001,_tc0002,_tc0003,_tc0004,_tc0005
}; // Size of table:24(x86)/24(x64) bytes.

static const unsigned char shiftFromStateArrayTable[9] = {
     2,   5,   6                                                                                             /*   0 Used by 1 terminal  [c]                           */
  ,  2,   4,   7                                                                                             /*   1 Used by 1 terminal  [d]                           */
  ,  2,   2,   3                                                                                             /*   2 Used by 1 terminal  [f]                           */
}; // Size of table:12(x86)/16(x64) bytes.

static const unsigned char shiftToStateArrayTable[6] = {
      9,  10                                                                                                 /*   0 Used by 1 terminal  [c]                           */
  ,   8,  11                                                                                                 /*   1 Used by 1 terminal  [d]                           */
  ,   5,   7                                                                                                 /*   2 Used by 1 terminal  [f]                           */
}; // Size of table:8(x86)/8(x64) bytes.

#define shiftStateBitSetTable nullptr

#define _rc0000 0x00037fff /*                                                       */
#define _rc0001 0x00010000 /* Reduce by    0 (Accept) on EOI                        */
#define _rc0002 0x00037fff /*                                                       */
#define _rc0003 0x00037fff /*                                                       */
#define _rc0004 0x00037fff /*                                                       */
#define _rc0005 0x000b0004 /* Reduce by    5 on d                                   */
#define _rc0006 0x00037fff /*                                                       */
#define _rc0007 0x000b0003 /* Reduce by    5 on c                                   */
#define _rc0008 0x00030000 /* Reduce by    1 on EOI                                 */
#define _rc0009 0x00050000 /* Reduce by    2 on EOI                                 */
#define _rc0010 0x00070000 /* Reduce by    3 on EOI                                 */
#define _rc0011 0x00090000 /* Reduce by    4 on EOI                                 */

static const unsigned int reduceCodeArray[12] = {
   _rc0000,_rc0001,_rc0002,_rc0003,_rc0004,_rc0005,_rc0006,_rc0007,_rc0008,_rc0009
  ,_rc0010,_rc0011
}; // Size of table:48(x86)/48(x64) bytes.

#define termArrayTable   nullptr
#define reduceArrayTable nullptr

#define termBitSetTable nullptr

#define _nc0000 0x00000000 /*                                                       */
#define _nc0001 0x00037fff /* S     Shift to    1 No check (1 state )               */
#define _nc0002 0x00000000 /* A     stateArray    0, newStateArray    0             */

static const unsigned int succCodeArray[3] = {
   _nc0000,_nc0001,_nc0002
}; // Size of table:12(x86)/16(x64) bytes.

static const unsigned char succFromStateArrayTable[3] = {
     2,   2,   3                                                                                             /*   0 Used by 1 ntIndex   [A]                           */
}; // Size of table:4(x86)/8(x64) bytes.

static const unsigned char succToStateArrayTable[2] = {
      4,   6                                                                                                 /*   0 Used by 1 ntIndex   [A]                           */
}; // Size of table:4(x86)/8(x64) bytes.

#define succStateBitSetTable nullptr

/************************************************************************************\
* The prodLengthArray[] is indexed by production number and holds the number of      *
* symbols on the right side of each production.                                      *
\************************************************************************************/
static const unsigned char prodLengthArray[6] = {
  /*   0 */    1,  3,  3,  3,  3,  1
}; // Size of table:8(x86)/8(x64) bytes.

/************************************************************************************\
* leftSideArray[] is indexed by production number.                                   *
* leftSideArray[p] = A', A' = (A - termCount)                                        *
*                        where A is the left side of production p.                   *
* A' = [0..ntermCount-1]                                                             *
* p  = [0..productionCount-1]                                                        *
\************************************************************************************/
static const unsigned char leftSideArray[6] = {
  /*   0 */    0,  1,  1,  1,  1,  2
}; // Size of table:8(x86)/8(x64) bytes.

/************************************************************************************\
* rightSideTable[] holds a compressed form of the rightsides of all productions in   *
* the grammar. Only used for debugging.                                              *
\************************************************************************************/
static const unsigned char rightSideTable[14] = {
  /*   0 */    7
  /*   1 */ ,  1,  8,  4
  /*   2 */ ,  1,  5,  3
  /*   3 */ ,  2,  8,  3
  /*   4 */ ,  2,  5,  4
  /*   5 */ ,  5
}; // Size of table:16(x86)/16(x64) bytes.

/************************************************************************************\
* symbolNames is a space separated string with the names of all symbols used in the  *
* grammar, terminals and nonTerminals. Only used for debugging.                      *
\************************************************************************************/
static const char *symbolNames = {
  "EOI"                                               /* T     0               */
  " a"                                                /* T     1               */
  " b"                                                /* T     2               */
  " c"                                                /* T     3               */
  " d"                                                /* T     4               */
  " f"                                                /* T     5               */
  " start"                                            /* NT    6 ntIndex=0     */
  " S"                                                /* NT    7 ntIndex=1     */
  " A"                                                /* NT    8 ntIndex=2     */
}; // Size of string:24(x86)/24(x64) bytes

static const ParserTablesTemplateTransShift<9,6,6,12,240,320,0,6,0,12,0,12
                                          ,unsigned char
                                          ,unsigned char
                                          ,unsigned char
                                          ,char
                                          ,unsigned char> Olm627Tables_s(prodLengthArray   , leftSideArray
                                                                        ,rightSideTable    , symbolNames
                                                                        ,shiftCodeArray    , shiftFromStateArrayTable, shiftToStateArrayTable, shiftStateBitSetTable
                                                                        ,reduceCodeArray   , termArrayTable          , reduceArrayTable      , termBitSetTable
                                                                        ,succCodeArray     , succFromStateArrayTable , succToStateArrayTable , succStateBitSetTable
                                                                        );

const AbstractParserTables *Olm627Parser::Olm627Tables = &Olm627Tables_s;
// Size of Olm627Tables_s: 68(x86)/128(x64) bytes. Size of Olm627Tables:4(x86)/8(x64) bytes

// Total size of table data:240(x86)/320(x64) bytes.
