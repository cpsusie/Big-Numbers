/* DO NOT EDIT THIS FILE - it is machine generated */
#line 135 "C:\\Mytools2015\\Dbase\\SqlParse\\Sql.y"
#include "stdafx.h"
#include "SqlParser.h"
#include <SqlApi.h>
#include <io.h>

#line 36 "C:\\mytools2015\\parsergen\\lib\\parsergencpp.par"
/**********************************************************************************\
* The 4 arrays actionCode, termListTable, actionListTable and termSetTable         *
* holds a compressed action-matrix, used by LRParser to find                       *
* action = getAction(S,T), where S is current state, T is next terminal on input   *
*                                                                                  *
* The interpretation of action is:                                                 *
*   action <  0 - Reduce by production p, p == -action.                            *
*   action == 0 - Accept. Reduce by production 0.                                  *
*   action >  0 - Shift to newstate (=action),                                     *
*                 ie. push(newstate), set current state=newstate                   *
*                 and advance input 1 symbol.                                      *
*   action == _ParserError - Unexpected input. Do some recovery, to try to         *
*                 synchronize input and stack, in order to continue parse.         *
*                 (See LRParser::recover() in LRParser.cpp)                        *
*                                                                                  *
* For each state S, a #define is generated and used as element S in array          *
* actionCode. Each define looks as:                                                *
*                                                                                  *
* #define _acDDDD Code                                                             *
*                                                                                  *
* where DDDD is the statenumber S and Code is an unsigned int with the following   *
* format:                                                                          *
*                   0         1         2         3                                *
* Bit index:        01234567890123456789012345678901                               *
* Code     :        tttttttttttttttIFaaaaaaaaaaaaaaa                               *
*                                                                                  *
* t          : Bit[ 0-14]: unsigned short                                          *
* a          : Bit[17-31]: signed short                                            *
* F          : Bit 16    : Indicates how to interpret t and a.                     *
* I          : Bit 15    : In case F==1, indicates how to interpret t.             *
*                                                                                  *
* F == 0: Uncompressed Format.                                                     *
*      t: Index into array termListTable, pointing at the first element of         *
*         termList (see below).                                                    *
*      a: Index into array actionListTable, pointing at the first element of       *
*         actionList (see below).                                                  *
* F == 1: Compressed Format, used if there is only 1 possible action, a.           *
*         I==0: There is only 1 legal terminal in the state.                       *
*            t: Legal terminal.                                                    *
*            a: Action.                                                            *
*                                                                                  *
*         I==1: All actions in the state are reduce by the same production P = -a. *
*            t: Index into termSetTable, pointing at the first element of termSet  *
*               (see below).                                                       *
*            a: Action.                                                            *
*                                                                                  *
* F == 0: Use arrays termListTable and actionListTable to find action.             *
*      n                 : termListTable[t] = number of elements in termList.      *
*      termList[0..n-1]  : termListTable[t+1..t+n]                                 *
*                          Ordered list of legal terminals                         *
*      actionList[0..n-1]: actionListTable[a..a+n-1] (same length as termList).    *
*                                                                                  *
*      To get action, find index k in termList, so termList[k] == T                *
*      and set action = actionList[k]. If T is not found, set action = _ParseError.*
*      Note that both termList and actionList may be shared by several states.     *
*                                                                                  *
* F == 1 and I==1: Use array termSetTable which is a list of termSet, bitsets,     *
*                  each with terminalCount bits, 1-bits for legal terminals, and   *
*                  0-bits for illegal terminals.                                   *
*                                                                                  *
*      b                 : Number of bytes in each termSet = (terminalCount-1)/8+1 *
*      termSet[0..b-1]   : termSetTable[t..t+b-1]                                  *
*                                                                                  *
*      As for uncompressed states, the same check for existence is done.           *
*      If terminal T is not present in termSet, set action = _ParseError.          *
*      Note that each termSet may be shared by several states.                     *
\**********************************************************************************/

#define _ac0000 0x00000000 /* termList   0, actionList   0            */
#define _ac0001 0x00010000 /* Reduce by 0 on EOI                      */
#define _ac0002 0xffff0000 /* Reduce by 1 on EOI                      */
#define _ac0003 0xfffd0000 /* Reduce by 2 on EOI                      */
#define _ac0004 0xfffb0000 /* Reduce by 3 on EOI                      */
#define _ac0005 0x0014000b /* termList   1, actionList   1            */
#define _ac0006 0xfff70000 /* Reduce by 5 on EOI                      */
#define _ac0007 0xfff50000 /* Reduce by 6 on EOI                      */
#define _ac0008 0xfff30000 /* Reduce by 7 on EOI                      */
#define _ac0009 0xfff10000 /* Reduce by 8 on EOI                      */
#define _ac0010 0xffef0000 /* Reduce by 9 on EOI                      */
#define _ac0011 0x00350069 /* Shift  to 26 on NAME Used by states (11,222) */
#define _ac0012 0x0037002a /* Shift  to 27 on INTO                    */
#define _ac0013 0x00390022 /* Shift  to 28 on FROM                    */
#define _ac0014 0x001c0010 /* termList   2, actionList   2            */
#define _ac0015 0xffc78000 /* Reduce by 29 on tokens in termSet[0]    */
#define _ac0016 0x03288195 /* Split(_sn0000,_sn0001)                  */
#define _ac0017 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0018 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0019 0x00240016 /* termList   4, actionList   4            */
#define _ac0020 0x002a001a /* termList   5, actionList   5            */
#define _ac0021 0x00000000 /* termList   0, actionList   0            */
#define _ac0022 0x002e001d /* termList   6, actionList   6            */
#define _ac0023 0x001c0010 /* termList   2, actionList   2            */
#define _ac0024 0x001c0010 /* termList   2, actionList   2            */
#define _ac0025 0x005b003b /* Shift  to 45 on SET                     */
#define _ac0026 0xfe83801c /* Reduce by 191 on tokens in termSet[2]   */
#define _ac0027 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0028 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0029 0x00340021 /* termList   7, actionList   7            */
#define _ac0030 0x003c0026 /* termList   8, actionList   8            */
#define _ac0031 0xffbd800e /* Reduce by 34 on tokens in termSet[1]    */
#define _ac0032 0xffbb800e /* Reduce by 35 on tokens in termSet[1]    */
#define _ac0033 0x00b10016 /* Shift  to 88 on CURSOR                  */
#define _ac0034 0x00b3002a /* Shift  to 89 on INTO                    */
#define _ac0035 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0036 0x00b70026 /* Shift  to 91 on INDEX                   */
#define _ac0037 0xfecd0026 /* Reduce by 154 on INDEX                  */
#define _ac0038 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0039 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0040 0xfe850000 /* Reduce by 190 on EOI                    */
#define _ac0041 0x001c0010 /* termList   2, actionList   2            */
#define _ac0042 0xffc1802a /* Reduce by 32 on tokens in termSet[3]    */
#define _ac0043 0xffcd8000 /* Reduce by 26 on tokens in termSet[0]    */
#define _ac0044 0x006e0040 /* termList   9, actionList   9            */
#define _ac0045 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0046 0x00780046 /* termList  10, actionList  10            */
#define _ac0047 0x032c8197 /* Split(_sn0002,_sn0003)                  */
#define _ac0048 0xffc98000 /* Reduce by 28 on tokens in termSet[0]    */
#define _ac0049 0x007e004a /* termList  11, actionList  11            */
#define _ac0050 0xffb78046 /* Reduce by 37 on tokens in termSet[5]    */
#define _ac0051 0xffb58046 /* Reduce by 38 on tokens in termSet[5]    */
#define _ac0052 0x03308199 /* Split(_sn0004,_sn0005)                  */
#define _ac0053 0x0084004e /* termList  12, actionList  12            */
#define _ac0054 0x0334819b /* Split(_sn0006,_sn0007)                  */
#define _ac0055 0x009c005c /* termList  14, actionList  14            */
#define _ac0056 0x009c005c /* termList  14, actionList  14            */
#define _ac0057 0xff158062 /* Reduce by 118 on tokens in termSet[7]   */
#define _ac0058 0xff138062 /* Reduce by 119 on tokens in termSet[7]   */
#define _ac0059 0xff118062 /* Reduce by 120 on tokens in termSet[7]   */
#define _ac0060 0xff0f8062 /* Reduce by 121 on tokens in termSet[7]   */
#define _ac0061 0xff0d8062 /* Reduce by 122 on tokens in termSet[7]   */
#define _ac0062 0xff0b8062 /* Reduce by 123 on tokens in termSet[7]   */
#define _ac0063 0xff098062 /* Reduce by 124 on tokens in termSet[7]   */
#define _ac0064 0xff078062 /* Reduce by 125 on tokens in termSet[7]   */
#define _ac0065 0xff058062 /* Reduce by 126 on tokens in termSet[7]   */
#define _ac0066 0xff038062 /* Reduce by 127 on tokens in termSet[7]   */
#define _ac0067 0xff018062 /* Reduce by 128 on tokens in termSet[7]   */
#define _ac0068 0xfeff8062 /* Reduce by 129 on tokens in termSet[7]   */
#define _ac0069 0xfefd8062 /* Reduce by 130 on tokens in termSet[7]   */
#define _ac0070 0x00c80073 /* termList  15, actionList  15            */
#define _ac0071 0x00f70066 /* Shift  to 123 on LPAR                   */
#define _ac0072 0x00f90066 /* Shift  to 124 on LPAR                   */
#define _ac0073 0x00fb0066 /* Shift  to 125 on LPAR                   */
#define _ac0074 0x00fd0066 /* Shift  to 126 on LPAR                   */
#define _ac0075 0x00ff0066 /* Shift  to 127 on LPAR                   */
#define _ac0076 0x01010066 /* Shift  to 128 on LPAR                   */
#define _ac0077 0x01030066 /* Shift  to 129 on LPAR                   */
#define _ac0078 0xfee70066 /* Reduce by 141 on LPAR                   */
#define _ac0079 0xfee50066 /* Reduce by 142 on LPAR                   */
#define _ac0080 0xfee30066 /* Reduce by 143 on LPAR                   */
#define _ac0081 0xfe818070 /* Reduce by 192 on tokens in termSet[8]   */
#define _ac0082 0xfe7f8062 /* Reduce by 193 on tokens in termSet[7]   */
#define _ac0083 0xfe7d8062 /* Reduce by 194 on tokens in termSet[7]   */
#define _ac0084 0xfe7b8062 /* Reduce by 195 on tokens in termSet[7]   */
#define _ac0085 0xfe798062 /* Reduce by 196 on tokens in termSet[7]   */
#define _ac0086 0xfe778062 /* Reduce by 197 on tokens in termSet[7]   */
#define _ac0087 0xfe758062 /* Reduce by 198 on tokens in termSet[7]   */
#define _ac0088 0x01050021 /* Shift  to 130 on FOR                    */
#define _ac0089 0x00a30007 /* Shift  to 81 on HOSTVAR                 */
#define _ac0090 0x00fa008d /* termList  16, actionList  16            */
#define _ac0091 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0092 0xfe890000 /* Reduce by 188 on EOI                    */
#define _ac0093 0xfe870000 /* Reduce by 189 on EOI                    */
#define _ac0094 0x00fe0040 /* termList   9, actionList  17            */
#define _ac0095 0x01080090 /* termList  17, actionList  18            */
#define _ac0096 0xffe9807e /* Reduce by 12 on tokens in termSet[9]    */
#define _ac0097 0x01150057 /* Shift  to 138 on EQUAL                  */
#define _ac0098 0x010e0094 /* termList  18, actionList  19            */
#define _ac0099 0x011d0066 /* Shift  to 142 on LPAR                   */
#define _ac0100 0x0114000b /* termList   1, actionList  20            */
#define _ac0101 0x011c0098 /* termList  19, actionList  21            */
#define _ac0102 0x0126009e /* termList  20, actionList  22            */
#define _ac0103 0x013d0022 /* Shift  to 158 on FROM                   */
#define _ac0104 0x003c0026 /* termList   8, actionList   8            */
#define _ac0105 0x00a30007 /* Shift  to 81 on HOSTVAR                 */
#define _ac0106 0x015a00b9 /* termList  21, actionList  23            */
#define _ac0107 0x015e00bc /* termList  22, actionList  24            */
#define _ac0108 0x015e00bc /* termList  22, actionList  24            */
#define _ac0109 0x015e00bc /* termList  22, actionList  24            */
#define _ac0110 0x015e00bc /* termList  22, actionList  24            */
#define _ac0111 0x015e00bc /* termList  22, actionList  24            */
#define _ac0112 0x015e00bc /* termList  22, actionList  24            */
#define _ac0113 0x015e00bc /* termList  22, actionList  24            */
#define _ac0114 0xffa78062 /* Reduce by 45 on tokens in termSet[7]    */
#define _ac0115 0xffa38062 /* Reduce by 47 on tokens in termSet[7]    */
#define _ac0116 0x00a30007 /* Shift  to 81 on HOSTVAR                 */
#define _ac0117 0xff198062 /* Reduce by 116 on tokens in termSet[7]   */
#define _ac0118 0x0338819d /* Split(_sn0008,_sn0009)                  */
#define _ac0119 0xff178062 /* Reduce by 117 on tokens in termSet[7]   */
#define _ac0120 0x018e00d5 /* termList  23, actionList  25 Used by states (120,204) */
#define _ac0121 0x019e0021 /* termList   7, actionList  26            */
#define _ac0122 0x00c80073 /* termList  15, actionList  15            */
#define _ac0123 0x015e00bc /* termList  22, actionList  24            */
#define _ac0124 0x015e00bc /* termList  22, actionList  24            */
#define _ac0125 0x015e00bc /* termList  22, actionList  24            */
#define _ac0126 0x015e00bc /* termList  22, actionList  24            */
#define _ac0127 0x015e00bc /* termList  22, actionList  24            */
#define _ac0128 0x033c819f /* Split(_sn0010,_sn0011)                  */
#define _ac0129 0x033c8195 /* Split(_sn0010,_sn0001)                  */
#define _ac0130 0x001c0010 /* termList   2, actionList   2            */
#define _ac0131 0x01ac00e2 /* termList  25, actionList  28            */
#define _ac0132 0xffa9809a /* Reduce by 44 on tokens in termSet[11]   */
#define _ac0133 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0134 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0135 0x017d0036 /* Shift  to 190 on ON                     */
#define _ac0136 0xffed0000 /* Reduce by 10 on EOI                     */
#define _ac0137 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0138 0x015e00bc /* termList  22, actionList  24            */
#define _ac0139 0x01b000e5 /* termList  26, actionList  29            */
#define _ac0140 0x01b40021 /* termList   7, actionList  30            */
#define _ac0141 0xffd980a8 /* Reduce by 20 on tokens in termSet[12]   */
#define _ac0142 0x01bc00e8 /* termList  27, actionList  31            */
#define _ac0143 0xffd10000 /* Reduce by 24 on EOI                     */
#define _ac0144 0x01ee0102 /* termList  28, actionList  32            */
#define _ac0145 0x018f0008 /* Shift  to 199 on ACCESSS                */
#define _ac0146 0xff6d0008 /* Reduce by 74 on ACCESSS                 */
#define _ac0147 0xff6b0008 /* Reduce by 75 on ACCESSS                 */
#define _ac0148 0xff690008 /* Reduce by 76 on ACCESSS                 */
#define _ac0149 0x034081a1 /* Split(_sn0012,_sn0013)                  */
#define _ac0150 0x01f80109 /* termList  30, actionList  34            */
#define _ac0151 0xff5780c4 /* Reduce by 85 on tokens in termSet[14]   */
#define _ac0152 0xff5580c4 /* Reduce by 86 on tokens in termSet[14]   */
#define _ac0153 0x022a0123 /* termList  31, actionList  35            */
#define _ac0154 0x0260013f /* termList  32, actionList  36            */
#define _ac0155 0x01b50066 /* Shift  to 218 on LPAR                   */
#define _ac0156 0x034481a3 /* Split(_sn0014,_sn0015)                  */
#define _ac0157 0x034881a5 /* Split(_sn0016,_sn0017)                  */
#define _ac0158 0x02840153 /* termList  34, actionList  38            */
#define _ac0159 0xffb98046 /* Reduce by 36 on tokens in termSet[5]    */
#define _ac0160 0x02880156 /* termList  35, actionList  39            */
#define _ac0161 0xffb38046 /* Reduce by 39 on tokens in termSet[5]    */
#define _ac0162 0xfedb8062 /* Reduce by 147 on tokens in termSet[7]   */
#define _ac0163 0x034c81a7 /* Split(_sn0018,_sn0019)                  */
#define _ac0164 0x035081a7 /* Split(_sn0020,_sn0019)                  */
#define _ac0165 0xff238062 /* Reduce by 111 on tokens in termSet[7]   */
#define _ac0166 0x035281aa /* Split(_sn0021,_sn0022)                  */
#define _ac0167 0x035681aa /* Split(_sn0023,_sn0022)                  */
#define _ac0168 0x035881aa /* Split(_sn0024,_sn0022)                  */
#define _ac0169 0x035a81ae /* Split(_sn0025,_sn0026)                  */
#define _ac0170 0xffa18062 /* Reduce by 48 on tokens in termSet[7]    */
#define _ac0171 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0172 0xfefb8062 /* Reduce by 131 on tokens in termSet[7]   */
#define _ac0173 0xfef78062 /* Reduce by 133 on tokens in termSet[7]   */
#define _ac0174 0x029a0021 /* termList   7, actionList  42            */
#define _ac0175 0x02a20162 /* termList  38, actionList  43            */
#define _ac0176 0x02b2016b /* termList  39, actionList  44            */
#define _ac0177 0x02c40175 /* termList  40, actionList  45            */
#define _ac0178 0x02d40175 /* termList  40, actionList  46            */
#define _ac0179 0x02e40175 /* termList  40, actionList  47            */
#define _ac0180 0x01cf0067 /* Shift  to 231 on RPAR                   */
#define _ac0181 0x015e00bc /* termList  22, actionList  24            */
#define _ac0182 0xfedf0067 /* Reduce by 145 on RPAR                   */
#define _ac0183 0x015e00bc /* termList  22, actionList  24            */
#define _ac0184 0x02f4000b /* termList   1, actionList  48            */
#define _ac0185 0x00a30007 /* Shift  to 81 on HOSTVAR                 */
#define _ac0186 0xfed50000 /* Reduce by 150 on EOI                    */
#define _ac0187 0x01d70055 /* Shift  to 235 on COMMA                  */
#define _ac0188 0xfec30055 /* Reduce by 159 on COMMA                  */
#define _ac0189 0x035e81b0 /* Split(_sn0027,_sn0028)                  */
#define _ac0190 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0191 0xffeb807e /* Reduce by 11 on tokens in termSet[9]    */
#define _ac0192 0x030c0187 /* termList  42, actionList  50            */
#define _ac0193 0x03200046 /* termList  10, actionList  51            */
#define _ac0194 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0195 0x03260192 /* termList  43, actionList  52            */
#define _ac0196 0x01f90067 /* Shift  to 252 on RPAR                   */
#define _ac0197 0x033600e5 /* termList  26, actionList  53            */
#define _ac0198 0x01fb0008 /* Shift  to 253 on ACCESSS                */
#define _ac0199 0xff6f8126 /* Reduce by 73 on tokens in termSet[21]   */
#define _ac0200 0x0126009e /* termList  20, actionList  22            */
#define _ac0201 0x0126009e /* termList  20, actionList  22            */
#define _ac0202 0xff5980c4 /* Reduce by 84 on tokens in termSet[14]   */
#define _ac0203 0x033a019b /* termList  44, actionList  54            */
#define _ac0204 0x03628078 /* Split(_sn0029,_ac0120)                  */
#define _ac0205 0x022a0123 /* termList  31, actionList  35            */
#define _ac0206 0x015e00bc /* termList  22, actionList  24            */
#define _ac0207 0x015e00bc /* termList  22, actionList  24            */
#define _ac0208 0x0340019f /* termList  45, actionList  55            */
#define _ac0209 0x020d0066 /* Shift  to 262 on LPAR                   */
#define _ac0210 0x015e00bc /* termList  22, actionList  24            */
#define _ac0211 0x034601a3 /* termList  46, actionList  56            */
#define _ac0212 0xff37808c /* Reduce by 101 on tokens in termSet[10]  */
#define _ac0213 0xff35808c /* Reduce by 102 on tokens in termSet[10]  */
#define _ac0214 0xff33808c /* Reduce by 103 on tokens in termSet[10]  */
#define _ac0215 0xff31808c /* Reduce by 104 on tokens in termSet[10]  */
#define _ac0216 0xff2f808c /* Reduce by 105 on tokens in termSet[10]  */
#define _ac0217 0xff2d808c /* Reduce by 106 on tokens in termSet[10]  */
#define _ac0218 0x001c0010 /* termList   2, actionList   2            */
#define _ac0219 0x015e00bc /* termList  22, actionList  24            */
#define _ac0220 0x036481b3 /* Split(_sn0030,_sn0031)                  */
#define _ac0221 0xff9d8142 /* Reduce by 50 on tokens in termSet[23]   */
#define _ac0222 0x0368800b /* Split(_sn0032,_ac0011)                  */
#define _ac0223 0x02840153 /* termList  34, actionList  38            */
#define _ac0224 0x036a81b6 /* Split(_sn0033,_sn0034)                  */
#define _ac0225 0x035e81b0 /* Split(_sn0027,_sn0028)                  */
#define _ac0226 0x015e00bc /* termList  22, actionList  24            */
#define _ac0227 0x015e00bc /* termList  22, actionList  24            */
#define _ac0228 0x015e00bc /* termList  22, actionList  24            */
#define _ac0229 0x015e00bc /* termList  22, actionList  24            */
#define _ac0230 0x015e00bc /* termList  22, actionList  24            */
#define _ac0231 0xfeeb8062 /* Reduce by 139 on tokens in termSet[7]   */
#define _ac0232 0x034e00d5 /* termList  23, actionList  58            */
#define _ac0233 0x035e00d5 /* termList  23, actionList  59            */
#define _ac0234 0xffab809a /* Reduce by 43 on tokens in termSet[11]   */
#define _ac0235 0x036e01a9 /* termList  48, actionList  60            */
#define _ac0236 0x037201ac /* termList  49, actionList  61            */
#define _ac0237 0x037801b0 /* termList  50, actionList  62            */
#define _ac0238 0xfeb1817a /* Reduce by 168 on tokens in termSet[27]  */
#define _ac0239 0xfeaf817a /* Reduce by 169 on tokens in termSet[27]  */
#define _ac0240 0xfead817a /* Reduce by 170 on tokens in termSet[27]  */
#define _ac0241 0xfeab817a /* Reduce by 171 on tokens in termSet[27]  */
#define _ac0242 0xfea9817a /* Reduce by 172 on tokens in termSet[27]  */
#define _ac0243 0x02410066 /* Shift  to 288 on LPAR                   */
#define _ac0244 0xfea38118 /* Reduce by 175 on tokens in termSet[20]  */
#define _ac0245 0xfea18118 /* Reduce by 176 on tokens in termSet[20]  */
#define _ac0246 0x02430066 /* Shift  to 289 on LPAR                   */
#define _ac0247 0x02450066 /* Shift  to 290 on LPAR                   */
#define _ac0248 0x001c0010 /* termList   2, actionList   2            */
#define _ac0249 0x0382000b /* termList   1, actionList  63            */
#define _ac0250 0xffd780a8 /* Reduce by 21 on tokens in termSet[12]   */
#define _ac0251 0xffdf0000 /* Reduce by 17 on EOI                     */
#define _ac0252 0x011c0098 /* termList  19, actionList  21            */
#define _ac0253 0xff718126 /* Reduce by 72 on tokens in termSet[21]   */
#define _ac0254 0x036e81b8 /* Split(_sn0035,_sn0036)                  */
#define _ac0255 0xff5b80c4 /* Reduce by 83 on tokens in termSet[14]   */
#define _ac0256 0xff5380c4 /* Reduce by 87 on tokens in termSet[14]   */
#define _ac0257 0xff5180c4 /* Reduce by 88 on tokens in termSet[14]   */
#define _ac0258 0x024b005e /* Shift  to 293 on AND                    */
#define _ac0259 0x015e00bc /* termList  22, actionList  24            */
#define _ac0260 0x024f0066 /* Shift  to 295 on LPAR                   */
#define _ac0261 0x015e00bc /* termList  22, actionList  24            */
#define _ac0262 0x00c80073 /* termList  15, actionList  15            */
#define _ac0263 0x037281a5 /* Split(_sn0037,_sn0017)                  */
#define _ac0264 0xff4180c4 /* Reduce by 96 on tokens in termSet[14]   */
#define _ac0265 0x02590034 /* Shift  to 300 on NULLVAL                */
#define _ac0266 0x038a0021 /* termList   7, actionList  64            */
#define _ac0267 0x037481a5 /* Split(_sn0038,_sn0017)                  */
#define _ac0268 0x037681bc /* Split(_sn0039,_sn0040)                  */
#define _ac0269 0x02840153 /* termList  34, actionList  38            */
#define _ac0270 0xff998150 /* Reduce by 52 on tokens in termSet[24]   */
#define _ac0271 0x039201b6 /* termList  51, actionList  65            */
#define _ac0272 0x02690067 /* Shift  to 308 on RPAR                   */
#define _ac0273 0x039801ba /* termList  52, actionList  66            */
#define _ac0274 0x03a80175 /* termList  40, actionList  67            */
#define _ac0275 0x03b80175 /* termList  40, actionList  68            */
#define _ac0276 0x03c80175 /* termList  40, actionList  69            */
#define _ac0277 0x03d80175 /* termList  40, actionList  70            */
#define _ac0278 0xfee98062 /* Reduce by 140 on tokens in termSet[7]   */
#define _ac0279 0x0275002d /* Shift  to 314 on KEY                    */
#define _ac0280 0xfec50055 /* Reduce by 158 on COMMA                  */
#define _ac0281 0x03e801c3 /* termList  53, actionList  71            */
#define _ac0282 0x027b0034 /* Shift  to 317 on NULLVAL                */
#define _ac0283 0x03ec01c6 /* termList  54, actionList  72            */
#define _ac0284 0x03f601c6 /* termList  54, actionList  73            */
#define _ac0285 0xfeb7817a /* Reduce by 165 on tokens in termSet[27]  */
#define _ac0286 0xfeb5817a /* Reduce by 166 on tokens in termSet[27]  */
#define _ac0287 0xfeb3817a /* Reduce by 167 on tokens in termSet[27]  */
#define _ac0288 0x00a70002 /* Shift  to 83 on NUMBER                  */
#define _ac0289 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0290 0x01bc00e8 /* termList  27, actionList  31            */
#define _ac0291 0x04000021 /* termList   7, actionList  74            */
#define _ac0292 0xffe30000 /* Reduce by 15 on EOI                     */
#define _ac0293 0x015e00bc /* termList  22, actionList  24            */
#define _ac0294 0x028f005e /* Shift  to 327 on AND                    */
#define _ac0295 0x00c80073 /* termList  15, actionList  15            */
#define _ac0296 0x037a81a5 /* Split(_sn0041,_sn0017)                  */
#define _ac0297 0x02930067 /* Shift  to 329 on RPAR                   */
#define _ac0298 0x04080021 /* termList   7, actionList  75            */
#define _ac0299 0x041000e5 /* termList  26, actionList  76            */
#define _ac0300 0xff3f80c4 /* Reduce by 97 on tokens in termSet[14]   */
#define _ac0301 0xff4f80c4 /* Reduce by 89 on tokens in termSet[14]   */
#define _ac0302 0x037c81bf /* Split(_sn0042,_sn0043)                  */
#define _ac0303 0x0299000e /* Shift  to 332 on BY                     */
#define _ac0304 0xff9f8142 /* Reduce by 49 on tokens in termSet[23]   */
#define _ac0305 0x029b002c /* Shift  to 333 on JOIN                   */
#define _ac0306 0xff93002c /* Reduce by 55 on JOIN                    */
#define _ac0307 0xff91002c /* Reduce by 56 on JOIN                    */
#define _ac0308 0xfef98062 /* Reduce by 132 on tokens in termSet[7]   */
#define _ac0309 0x015e00bc /* termList  22, actionList  24            */
#define _ac0310 0x015e00bc /* termList  22, actionList  24            */
#define _ac0311 0x015e00bc /* termList  22, actionList  24            */
#define _ac0312 0x015e00bc /* termList  22, actionList  24            */
#define _ac0313 0x015e00bc /* termList  22, actionList  24            */
#define _ac0314 0x02a70066 /* Shift  to 339 on LPAR                   */
#define _ac0315 0xfec10055 /* Reduce by 160 on COMMA                  */
#define _ac0316 0x041401cc /* termList  55, actionList  77            */
#define _ac0317 0xfe9d81b2 /* Reduce by 178 on tokens in termSet[31]  */
#define _ac0318 0x00a70002 /* Shift  to 83 on NUMBER                  */
#define _ac0319 0x00a70002 /* Shift  to 83 on NUMBER                  */
#define _ac0320 0x02bd0067 /* Shift  to 350 on RPAR                   */
#define _ac0321 0x042200e5 /* termList  26, actionList  78            */
#define _ac0322 0xfec980a8 /* Reduce by 156 on tokens in termSet[12]  */
#define _ac0323 0x042601d4 /* termList  56, actionList  79            */
#define _ac0324 0x02c90067 /* Shift  to 356 on RPAR                   */
#define _ac0325 0x03260192 /* termList  43, actionList  52            */
#define _ac0326 0xff4d80c4 /* Reduce by 90 on tokens in termSet[14]   */
#define _ac0327 0x015e00bc /* termList  22, actionList  24            */
#define _ac0328 0x02cf0067 /* Shift  to 359 on RPAR                   */
#define _ac0329 0xff4980c4 /* Reduce by 92 on tokens in termSet[14]   */
#define _ac0330 0x038081c1 /* Split(_sn0044,_sn0045)                  */
#define _ac0331 0x0126009e /* termList  20, actionList  22            */
#define _ac0332 0x015e00bc /* termList  22, actionList  24            */
#define _ac0333 0x02840153 /* termList  34, actionList  38            */
#define _ac0334 0x042e00d5 /* termList  23, actionList  80            */
#define _ac0335 0x043e00d5 /* termList  23, actionList  81            */
#define _ac0336 0x044e00d5 /* termList  23, actionList  82            */
#define _ac0337 0x045e00d5 /* termList  23, actionList  83            */
#define _ac0338 0x046e0175 /* termList  40, actionList  84            */
#define _ac0339 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0340 0xfe990055 /* Reduce by 180 on COMMA                  */
#define _ac0341 0xfe970055 /* Reduce by 181 on COMMA                  */
#define _ac0342 0xfe950055 /* Reduce by 182 on COMMA                  */
#define _ac0343 0x00a70002 /* Shift  to 83 on NUMBER                  */
#define _ac0344 0x00a70002 /* Shift  to 83 on NUMBER                  */
#define _ac0345 0xfe8f0055 /* Reduce by 185 on COMMA                  */
#define _ac0346 0xfe8d0055 /* Reduce by 186 on COMMA                  */
#define _ac0347 0xfe8b0055 /* Reduce by 187 on COMMA                  */
#define _ac0348 0x02eb0067 /* Shift  to 373 on RPAR                   */
#define _ac0349 0x02ed0067 /* Shift  to 374 on RPAR                   */
#define _ac0350 0xfea7817a /* Reduce by 173 on tokens in termSet[27]  */
#define _ac0351 0xfed10000 /* Reduce by 152 on EOI                    */
#define _ac0352 0x00350069 /* Shift  to 26 on NAME                    */
#define _ac0353 0xfec780a8 /* Reduce by 157 on tokens in termSet[12]  */
#define _ac0354 0xff7781ce /* Reduce by 69 on tokens in termSet[33]   */
#define _ac0355 0xff7581ce /* Reduce by 70 on tokens in termSet[33]   */
#define _ac0356 0x011c0098 /* termList  19, actionList  21            */
#define _ac0357 0xffe10000 /* Reduce by 16 on EOI                     */
#define _ac0358 0xff4b80c4 /* Reduce by 91 on tokens in termSet[14]   */
#define _ac0359 0xff4780c4 /* Reduce by 93 on tokens in termSet[14]   */
#define _ac0360 0x038481c3 /* Split(_sn0046,_sn0047)                  */
#define _ac0361 0x02f5000e /* Shift  to 378 on BY                     */
#define _ac0362 0x038881a1 /* Split(_sn0048,_sn0013)                  */
#define _ac0363 0x038a81a3 /* Split(_sn0049,_sn0015)                  */
#define _ac0364 0x02f70036 /* Shift  to 379 on ON                     */
#define _ac0365 0xfef58062 /* Reduce by 134 on tokens in termSet[7]   */
#define _ac0366 0xfef38062 /* Reduce by 135 on tokens in termSet[7]   */
#define _ac0367 0xfef18062 /* Reduce by 136 on tokens in termSet[7]   */
#define _ac0368 0xfeef8062 /* Reduce by 137 on tokens in termSet[7]   */
#define _ac0369 0x015e00bc /* termList  22, actionList  24            */
#define _ac0370 0x048600e5 /* termList  26, actionList  86            */
#define _ac0371 0xfe930055 /* Reduce by 183 on COMMA                  */
#define _ac0372 0xfe910055 /* Reduce by 184 on COMMA                  */
#define _ac0373 0xfebb817a /* Reduce by 163 on tokens in termSet[27]  */
#define _ac0374 0xfeb9817a /* Reduce by 164 on tokens in termSet[27]  */
#define _ac0375 0xfecb80a8 /* Reduce by 155 on tokens in termSet[12]  */
#define _ac0376 0xffe50000 /* Reduce by 14 on EOI                     */
#define _ac0377 0x038c81c7 /* Split(_sn0050,_sn0051)                  */
#define _ac0378 0x015e00bc /* termList  22, actionList  24            */
#define _ac0379 0x0126009e /* termList  20, actionList  22            */
#define _ac0380 0x04900175 /* termList  40, actionList  88            */
#define _ac0381 0x03110067 /* Shift  to 392 on RPAR                   */
#define _ac0382 0xffc58000 /* Reduce by 30 on tokens in termSet[0]    */
#define _ac0383 0x04a001e2 /* termList  59, actionList  89            */
#define _ac0384 0x03150032 /* Shift  to 394 on MODE                   */
#define _ac0385 0xff610032 /* Reduce by 80 on MODE                    */
#define _ac0386 0xff5f0032 /* Reduce by 81 on MODE                    */
#define _ac0387 0x039081c9 /* Split(_sn0052,_sn0053)                  */
#define _ac0388 0xff7d81ce /* Reduce by 66 on tokens in termSet[33]   */
#define _ac0389 0x039481cb /* Split(_sn0054,_sn0055)                  */
#define _ac0390 0x04b6019b /* termList  44, actionList  91            */
#define _ac0391 0x015e00bc /* termList  22, actionList  24            */
#define _ac0392 0xfed30000 /* Reduce by 151 on EOI                    */
#define _ac0393 0x031f0032 /* Shift  to 399 on MODE                   */
#define _ac0394 0xff638000 /* Reduce by 79 on tokens in termSet[0]    */
#define _ac0395 0x015e00bc /* termList  22, actionList  24            */
#define _ac0396 0xff7b81ce /* Reduce by 67 on tokens in termSet[33]   */
#define _ac0397 0xff978150 /* Reduce by 53 on tokens in termSet[24]   */
#define _ac0398 0x04bc0175 /* termList  40, actionList  92            */
#define _ac0399 0xff658000 /* Reduce by 78 on tokens in termSet[0]    */
#define _ac0400 0xff7f81ce /* Reduce by 65 on tokens in termSet[33]   */
#define _ac0401 0x015e00bc /* termList  22, actionList  24            */
#define _ac0402 0x04cc00d5 /* termList  23, actionList  93            */
#define _ac0403 0xfeed8062 /* Reduce by 138 on tokens in termSet[7]   */
#define _sn0000 0xffbf800e /* Reduce by 33 on tokens in termSet[1] Used by state (16) */
#define _sn0001 0x00200013 /* termList   3, actionList   3 Used by states (16,129) */
#define _sn0002 0xff8f8038 /* Reduce by 57 on tokens in termSet[4] Used by state (47) */
#define _sn0003 0x00cd0046 /* Shift  to 102 on WHERE Used by state (47) */
#define _sn0004 0xfedd8054 /* Reduce by 146 on tokens in termSet[6] Used by state (52) */
#define _sn0005 0x00d50056 /* Shift  to 106 on DOT Used by state (52) */
#define _sn0006 0xffa58062 /* Reduce by 46 on tokens in termSet[7] Used by state (54) */
#define _sn0007 0x00980059 /* termList  13, actionList  13 Used by state (54) */
#define _sn0008 0xfedd8062 /* Reduce by 146 on tokens in termSet[7] Used by state (118) */
#define _sn0009 0x01570056 /* Shift  to 171 on DOT Used by state (118) */
#define _sn0010 0xffbf808c /* Reduce by 33 on tokens in termSet[10] Used by states (128,129) */
#define _sn0011 0x01a600de /* termList  24, actionList  27 Used by state (128) */
#define _sn0012 0xff8d80b6 /* Reduce by 58 on tokens in termSet[13] Used by state (149) */
#define _sn0013 0x01f40106 /* termList  29, actionList  33 Used by states (149,362) */
#define _sn0014 0xff3980d2 /* Reduce by 100 on tokens in termSet[15] Used by state (156) */
#define _sn0015 0x01b70055 /* Shift  to 219 on COMMA Used by states (156,363) */
#define _sn0016 0xff2980e0 /* Reduce by 108 on tokens in termSet[16] Used by state (157) */
#define _sn0017 0x0276014b /* termList  33, actionList  37 Used by states (157,263,267,296) */
#define _sn0018 0xff2780ee /* Reduce by 109 on tokens in termSet[17] Used by state (163) */
#define _sn0019 0x028c0159 /* termList  36, actionList  40 Used by states (163,164) */
#define _sn0020 0xff2580ee /* Reduce by 110 on tokens in termSet[17] Used by state (164) */
#define _sn0021 0xff2180fc /* Reduce by 112 on tokens in termSet[18] Used by state (166) */
#define _sn0022 0x0296015f /* termList  37, actionList  41 Used by states (166,167,168) */
#define _sn0023 0xff1f80fc /* Reduce by 113 on tokens in termSet[18] Used by state (167) */
#define _sn0024 0xff1d80fc /* Reduce by 114 on tokens in termSet[18] Used by state (168) */
#define _sn0025 0xff1b810a /* Reduce by 115 on tokens in termSet[19] Used by state (169) */
#define _sn0026 0x00db0068 /* Shift  to 109 on CONCAT Used by state (169) */
#define _sn0027 0xfea58118 /* Reduce by 174 on tokens in termSet[20] Used by states (189,225) */
#define _sn0028 0x02fc017e /* termList  41, actionList  49 Used by states (189,225) */
#define _sn0029 0xff298134 /* Reduce by 108 on tokens in termSet[22] Used by state (204) */
#define _sn0030 0xff8f80b6 /* Reduce by 57 on tokens in termSet[13] Used by state (220) */
#define _sn0031 0x034a01a6 /* termList  47, actionList  57 Used by state (220) */
#define _sn0032 0xff9b8150 /* Reduce by 51 on tokens in termSet[24] Used by state (222) */
#define _sn0033 0xfef7815e /* Reduce by 133 on tokens in termSet[25] Used by state (224) */
#define _sn0034 0xffc9816c /* Reduce by 28 on tokens in termSet[26] Used by state (224) */
#define _sn0035 0xff5d8188 /* Reduce by 82 on tokens in termSet[28] Used by state (254) */
#define _sn0036 0x0193005e /* Shift  to 201 on AND Used by state (254) */
#define _sn0037 0xff4580c4 /* Reduce by 94 on tokens in termSet[14] Used by state (263) */
#define _sn0038 0xff2b80e0 /* Reduce by 107 on tokens in termSet[16] Used by state (267) */
#define _sn0039 0xff878196 /* Reduce by 61 on tokens in termSet[29] Used by state (268) */
#define _sn0040 0x025f0023 /* Shift  to 303 on GROUP Used by state (268) */
#define _sn0041 0xff4380c4 /* Reduce by 95 on tokens in termSet[14] Used by state (296) */
#define _sn0042 0xff8b81a4 /* Reduce by 59 on tokens in termSet[30] Used by state (302) */
#define _sn0043 0x02970024 /* Shift  to 331 on HAVING Used by state (302) */
#define _sn0044 0xff8381c0 /* Reduce by 63 on tokens in termSet[32] Used by state (330) */
#define _sn0045 0x02d30037 /* Shift  to 361 on ORDER Used by state (330) */
#define _sn0046 0xff738126 /* Reduce by 71 on tokens in termSet[21] Used by state (360) */
#define _sn0047 0x047e01d9 /* termList  57, actionList  85 Used by state (360) */
#define _sn0048 0xff8981a4 /* Reduce by 60 on tokens in termSet[30] Used by state (362) */
#define _sn0049 0xff858196 /* Reduce by 62 on tokens in termSet[29] Used by state (363) */
#define _sn0050 0xff678000 /* Reduce by 77 on tokens in termSet[0] Used by state (377) */
#define _sn0051 0x048a01de /* termList  58, actionList  87 Used by state (377) */
#define _sn0052 0xff8181c0 /* Reduce by 64 on tokens in termSet[32] Used by state (387) */
#define _sn0053 0x03170055 /* Shift  to 395 on COMMA Used by state (387) */
#define _sn0054 0xff7981ce /* Reduce by 68 on tokens in termSet[33] Used by state (389) */
#define _sn0055 0x04a401e5 /* termList  60, actionList  90 Used by state (389) */

static const unsigned int actionCode[460] = {
   _ac0000,_ac0001,_ac0002,_ac0003,_ac0004,_ac0005,_ac0006,_ac0007,_ac0008,_ac0009
  ,_ac0010,_ac0011,_ac0012,_ac0013,_ac0014,_ac0015,_ac0016,_ac0017,_ac0018,_ac0019
  ,_ac0020,_ac0021,_ac0022,_ac0023,_ac0024,_ac0025,_ac0026,_ac0027,_ac0028,_ac0029
  ,_ac0030,_ac0031,_ac0032,_ac0033,_ac0034,_ac0035,_ac0036,_ac0037,_ac0038,_ac0039
  ,_ac0040,_ac0041,_ac0042,_ac0043,_ac0044,_ac0045,_ac0046,_ac0047,_ac0048,_ac0049
  ,_ac0050,_ac0051,_ac0052,_ac0053,_ac0054,_ac0055,_ac0056,_ac0057,_ac0058,_ac0059
  ,_ac0060,_ac0061,_ac0062,_ac0063,_ac0064,_ac0065,_ac0066,_ac0067,_ac0068,_ac0069
  ,_ac0070,_ac0071,_ac0072,_ac0073,_ac0074,_ac0075,_ac0076,_ac0077,_ac0078,_ac0079
  ,_ac0080,_ac0081,_ac0082,_ac0083,_ac0084,_ac0085,_ac0086,_ac0087,_ac0088,_ac0089
  ,_ac0090,_ac0091,_ac0092,_ac0093,_ac0094,_ac0095,_ac0096,_ac0097,_ac0098,_ac0099
  ,_ac0100,_ac0101,_ac0102,_ac0103,_ac0104,_ac0105,_ac0106,_ac0107,_ac0108,_ac0109
  ,_ac0110,_ac0111,_ac0112,_ac0113,_ac0114,_ac0115,_ac0116,_ac0117,_ac0118,_ac0119
  ,_ac0120,_ac0121,_ac0122,_ac0123,_ac0124,_ac0125,_ac0126,_ac0127,_ac0128,_ac0129
  ,_ac0130,_ac0131,_ac0132,_ac0133,_ac0134,_ac0135,_ac0136,_ac0137,_ac0138,_ac0139
  ,_ac0140,_ac0141,_ac0142,_ac0143,_ac0144,_ac0145,_ac0146,_ac0147,_ac0148,_ac0149
  ,_ac0150,_ac0151,_ac0152,_ac0153,_ac0154,_ac0155,_ac0156,_ac0157,_ac0158,_ac0159
  ,_ac0160,_ac0161,_ac0162,_ac0163,_ac0164,_ac0165,_ac0166,_ac0167,_ac0168,_ac0169
  ,_ac0170,_ac0171,_ac0172,_ac0173,_ac0174,_ac0175,_ac0176,_ac0177,_ac0178,_ac0179
  ,_ac0180,_ac0181,_ac0182,_ac0183,_ac0184,_ac0185,_ac0186,_ac0187,_ac0188,_ac0189
  ,_ac0190,_ac0191,_ac0192,_ac0193,_ac0194,_ac0195,_ac0196,_ac0197,_ac0198,_ac0199
  ,_ac0200,_ac0201,_ac0202,_ac0203,_ac0204,_ac0205,_ac0206,_ac0207,_ac0208,_ac0209
  ,_ac0210,_ac0211,_ac0212,_ac0213,_ac0214,_ac0215,_ac0216,_ac0217,_ac0218,_ac0219
  ,_ac0220,_ac0221,_ac0222,_ac0223,_ac0224,_ac0225,_ac0226,_ac0227,_ac0228,_ac0229
  ,_ac0230,_ac0231,_ac0232,_ac0233,_ac0234,_ac0235,_ac0236,_ac0237,_ac0238,_ac0239
  ,_ac0240,_ac0241,_ac0242,_ac0243,_ac0244,_ac0245,_ac0246,_ac0247,_ac0248,_ac0249
  ,_ac0250,_ac0251,_ac0252,_ac0253,_ac0254,_ac0255,_ac0256,_ac0257,_ac0258,_ac0259
  ,_ac0260,_ac0261,_ac0262,_ac0263,_ac0264,_ac0265,_ac0266,_ac0267,_ac0268,_ac0269
  ,_ac0270,_ac0271,_ac0272,_ac0273,_ac0274,_ac0275,_ac0276,_ac0277,_ac0278,_ac0279
  ,_ac0280,_ac0281,_ac0282,_ac0283,_ac0284,_ac0285,_ac0286,_ac0287,_ac0288,_ac0289
  ,_ac0290,_ac0291,_ac0292,_ac0293,_ac0294,_ac0295,_ac0296,_ac0297,_ac0298,_ac0299
  ,_ac0300,_ac0301,_ac0302,_ac0303,_ac0304,_ac0305,_ac0306,_ac0307,_ac0308,_ac0309
  ,_ac0310,_ac0311,_ac0312,_ac0313,_ac0314,_ac0315,_ac0316,_ac0317,_ac0318,_ac0319
  ,_ac0320,_ac0321,_ac0322,_ac0323,_ac0324,_ac0325,_ac0326,_ac0327,_ac0328,_ac0329
  ,_ac0330,_ac0331,_ac0332,_ac0333,_ac0334,_ac0335,_ac0336,_ac0337,_ac0338,_ac0339
  ,_ac0340,_ac0341,_ac0342,_ac0343,_ac0344,_ac0345,_ac0346,_ac0347,_ac0348,_ac0349
  ,_ac0350,_ac0351,_ac0352,_ac0353,_ac0354,_ac0355,_ac0356,_ac0357,_ac0358,_ac0359
  ,_ac0360,_ac0361,_ac0362,_ac0363,_ac0364,_ac0365,_ac0366,_ac0367,_ac0368,_ac0369
  ,_ac0370,_ac0371,_ac0372,_ac0373,_ac0374,_ac0375,_ac0376,_ac0377,_ac0378,_ac0379
  ,_ac0380,_ac0381,_ac0382,_ac0383,_ac0384,_ac0385,_ac0386,_ac0387,_ac0388,_ac0389
  ,_ac0390,_ac0391,_ac0392,_ac0393,_ac0394,_ac0395,_ac0396,_ac0397,_ac0398,_ac0399
  ,_ac0400,_ac0401,_ac0402,_ac0403,_sn0000,_sn0001,_sn0002,_sn0003,_sn0004,_sn0005
  ,_sn0006,_sn0007,_sn0008,_sn0009,_sn0010,_sn0011,_sn0012,_sn0013,_sn0014,_sn0015
  ,_sn0016,_sn0017,_sn0018,_sn0019,_sn0020,_sn0021,_sn0022,_sn0023,_sn0024,_sn0025
  ,_sn0026,_sn0027,_sn0028,_sn0029,_sn0030,_sn0031,_sn0032,_sn0033,_sn0034,_sn0035
  ,_sn0036,_sn0037,_sn0038,_sn0039,_sn0040,_sn0041,_sn0042,_sn0043,_sn0044,_sn0045
  ,_sn0046,_sn0047,_sn0048,_sn0049,_sn0050,_sn0051,_sn0052,_sn0053,_sn0054,_sn0055
}; // Size of table:1.840(x86)/1.840(x64) bytes.

static const unsigned char termListTable[495] = {
    10,  18,  23,  25,  28,  31,  32,  39,  58,  68, 102                                                     /*    0 Used by states (0,21) */
  ,  4,   0,  82,  83,  84                                                                                   /*    1 Used by states (5,100,184,249) */
  ,  2,  58, 102                                                                                             /*    2 Used by states (14,23,24,41,130,218,248) */
  ,  2,   9,  27                                                                                             /*    3 Used by states (16,129) */
  ,  3,  38,  65,  66                                                                                        /*    4 Used by state  (19) */
  ,  2,  38,  65                                                                                             /*    5 Used by state  (20) */
  ,  3,   9,  58, 102                                                                                        /*    6 Used by state  (22) */
  ,  4,  82,  83,  84, 103                                                                                   /*    7 Used by states (29,121,140,174,266,291,298) */
  , 25,   1,   2,   3,   4,   5,   6,   7,  15,  17,  19,  20,  21,  48,  49,  52,  63,  64,  79,  80,  81   /*    8 Used by states (30,104) */
      ,  95,  96,  97, 102, 105
  ,  5,   0,  82,  83,  84, 103                                                                              /*    9 Used by states (44,94) */
  ,  3,  58,  69, 102                                                                                        /*   10 Used by states (46,193) */
  ,  3,  34,  42,  85                                                                                        /*   11 Used by state  (49) */
  , 10,  34,  42,  85,  95,  96,  97,  98,  99, 100, 104                                                     /*   12 Used by state  (53) */
  ,  2,   7,  40                                                                                             /*   13 Used by state  (54) */
  , 22,   1,   2,   3,   4,   5,   6,   7,  15,  17,  19,  20,  21,  48,  49,  52,  63,  64,  79,  80,  81   /*   14 Used by states (55,56) */
      , 102, 105
  , 25,   1,   2,   3,   4,   5,   6,   7,  15,  17,  19,  20,  21,  48,  49,  52,  58,  63,  64,  79,  80   /*   15 Used by states (70,122,262,295) */
      ,  81,  95,  96, 102, 105
  ,  2,  47, 102                                                                                             /*   16 Used by state  (90) */
  ,  3,   0,  70,  85                                                                                        /*   17 Used by state  (95) */
  ,  3,  58, 102, 105                                                                                        /*   18 Used by state  (98) */
  ,  5,   0,  13,  33,  57,  62                                                                              /*   19 Used by states (101,252,356) */
  , 26,   1,   2,   3,   4,   5,   6,   7,  15,  17,  19,  20,  21,  30,  48,  49,  52,  63,  64,  79,  80   /*   20 Used by states (102,200,201,331,379) */
      ,  81,  95,  96, 101, 102, 105
  ,  2,  97, 105                                                                                             /*   21 Used by state  (106) */
  , 24,   1,   2,   3,   4,   5,   6,   7,  15,  17,  19,  20,  21,  48,  49,  52,  63,  64,  79,  80,  81   /*   22 Used by states (107,108,109,110,111,112,113,123,124,125,126,127,138,181,183,206,207,210,219,226,227,228,229,230,259,261,293,309,310,311,312,313,327,332,369,378,391,395,401) */
      ,  95,  96, 102, 105
  ,  8,  95,  96,  97,  98,  99, 100, 103, 104                                                               /*   23 Used by states (120,204,232,233,334,335,336,337,402) */
  ,  3,   9,  27,  97                                                                                        /*   24 Used by state  (128) */
  ,  2,   0,  85                                                                                             /*   25 Used by state  (131) */
  ,  2,  85, 103                                                                                             /*   26 Used by states (139,197,299,321,370) */
  , 25,   1,   2,   3,   4,   5,   6,   7,  15,  17,  19,  20,  21,  48,  49,  52,  63,  64,  79,  80,  81   /*   27 Used by states (142,290) */
      ,  95,  96, 102, 103, 105
  ,  3,  13,  57,  62                                                                                        /*   28 Used by state  (144) */
  ,  2,  93,  94                                                                                             /*   29 Used by states (149,362) */
  , 25,   1,   2,   3,   4,   5,   6,   7,  15,  17,  19,  20,  21,  30,  48,  49,  52,  63,  64,  79,  80   /*   30 Used by state  (150) */
      ,  81,  95,  96, 102, 105
  , 27,   1,   2,   3,   4,   5,   6,   7,  15,  17,  19,  20,  21,  30,  48,  49,  52,  58,  63,  64,  79   /*   31 Used by states (153,205) */
      ,  80,  81,  95,  96, 101, 102, 105
  , 11,  12,  37,  43,  47,  87,  88,  89,  90,  91,  92, 101                                                /*   32 Used by state  (154) */
  ,  7,  95,  96,  97,  98,  99, 100, 104                                                                    /*   33 Used by states (157,263,267,296) */
  ,  2, 102, 105                                                                                             /*   34 Used by states (158,223,269,333) */
  ,  2,  34,  85                                                                                             /*   35 Used by state  (160) */
  ,  5,  97,  98,  99, 100, 104                                                                              /*   36 Used by states (163,164) */
  ,  2, 100, 104                                                                                             /*   37 Used by states (166,167,168) */
  ,  8,  10,  95,  96,  97,  98,  99, 100, 104                                                               /*   38 Used by state  (175) */
  ,  9,  34,  85,  95,  96,  97,  98,  99, 100, 104                                                          /*   39 Used by state  (176) */
  ,  8,  85,  95,  96,  97,  98,  99, 100, 104                                                               /*   40 Used by states (177,178,179,274,275,276,277,338,380,398) */
  ,  8,  61,  67,  73,  74,  75,  79,  80,  81                                                               /*   41 Used by states (189,225) */
  , 10,   0,  70,  85,  95,  96,  97,  98,  99, 100, 104                                                     /*   42 Used by state  (192) */
  ,  8,   0,  13,  33,  57,  62,  82,  83,  84                                                               /*   43 Used by states (195,325) */
  ,  3,  93,  94, 103                                                                                        /*   44 Used by states (203,390) */
  ,  3,  12,  37,  47                                                                                        /*   45 Used by state  (208) */
  ,  2,  52, 101                                                                                             /*   46 Used by state  (211) */
  ,  2,  70,  85                                                                                             /*   47 Used by state  (220) */
  ,  2,  56, 105                                                                                             /*   48 Used by state  (235) */
  ,  3,  24,  85, 101                                                                                        /*   49 Used by state  (236) */
  ,  5,  71,  72,  76,  77,  78                                                                              /*   50 Used by state  (237) */
  ,  3,  41,  44,  46                                                                                        /*   51 Used by state  (271) */
  ,  8,  33,  95,  96,  97,  98,  99, 100, 104                                                               /*   52 Used by state  (273) */
  ,  2,  24,  85                                                                                             /*   53 Used by state  (281) */
  ,  5,  24,  85, 101, 102, 103                                                                              /*   54 Used by states (283,284) */
  ,  7,   1,   2,   3,   4,   5,  95,  96                                                                    /*   55 Used by state  (316) */
  ,  4,  11,  26,  85, 103                                                                                   /*   56 Used by state  (323) */
  ,  4,  13,  33,  57,  62                                                                                   /*   57 Used by state  (360) */
  ,  3,  29,  37,  60                                                                                        /*   58 Used by state  (377) */
  ,  2,  29,  60                                                                                             /*   59 Used by state  (383) */
  ,  9,  11,  26,  95,  96,  97,  98,  99, 100, 104                                                          /*   60 Used by state  (389) */
}; // Size of table:496(x86)/496(x64) bytes.

static const short actionListTable[622] = {
     19,  17,  13,  20,  21,  18,  12,  16,  11,  14                                                         /*   0 Used by states (0,21) */
  ,  -4,  22,  24,  23                                                                                       /*   1 Used by state  (5) */
  ,  16,  14                                                                                                 /*   2 Used by states (14,23,24,41,130,218,248) */
  ,  31,  32                                                                                                 /*   3 Used by states (16,129) */
  ,-153,  35,  37                                                                                            /*   4 Used by state  (19) */
  ,  39,  38                                                                                                 /*   5 Used by state  (20) */
  ,  42, -31, -31                                                                                            /*   6 Used by state  (22) */
  ,  22,  24,  23,  48                                                                                       /*   7 Used by state  (29) */
  ,  84,  83,  85,  86,  87,  82,  81,  71,  76,  66,  67,  68,  79,  78,  69,  72,  80,  73,  74,  75       /*   8 Used by states (30,104) */
  ,  56,  55,  51,  70,  26
  , -27, -27, -27,  23, -27                                                                                  /*   9 Used by state  (44) */
  ,  16,  99,  98                                                                                            /*  10 Used by state  (46) */
  , -41, 105, 104                                                                                            /*  11 Used by state  (49) */
  , -40, -40, -40, 107, 108, 110, 111, 112, 113, 109                                                         /*  12 Used by state  (53) */
  ,  81, 116                                                                                                 /*  13 Used by state  (54) */
  ,  84,  83,  85,  86,  87,  82,  81,  71,  76,  66,  67,  68,  79,  78,  69,  72,  80,  73,  74,  75       /*  14 Used by states (55,56) */
  ,  70,  26
  ,  84,  83,  85,  86,  87,  82,  81,  71,  76,  66,  67,  68,  79,  78,  69,  16,  72,  80,  73,  74       /*  15 Used by states (70,122,262,295) */
  ,  75,  56,  55, 122,  26
  , 133, 134                                                                                                 /*  16 Used by state  (90) */
  , -25, -25, -25,  23, -25                                                                                  /*  17 Used by state  (94) */
  , -57, 102, 137                                                                                            /*  18 Used by state  (95) */
  ,  16,  14,  26                                                                                            /*  19 Used by state  (98) */
  , -19,  22,  24,  23                                                                                       /*  20 Used by state  (100) */
  , -71, 146, 144, 148, 147                                                                                  /*  21 Used by states (101,252,356) */
  ,  84,  83,  85,  86,  87,  82,  81,  71,  76,  66,  67,  68, 155,  79,  78,  69,  72,  80,  73,  74       /*  22 Used by states (102,200,201,331,379) */
  ,  75,  56,  55, 150, 153,  26
  , 161,  26                                                                                                 /*  23 Used by state  (106) */
  ,  84,  83,  85,  86,  87,  82,  81,  71,  76,  66,  67,  68,  79,  78,  69,  72,  80,  73,  74,  75       /*  24 Used by states (107,108,109,110,111,112,113,123,124,125,126,127,138,181,183,206,207,210,219,226,227,228,229,230,259,261,293,309,310,311,312,313,327,332,369,378,391,395,401) */
  ,  56,  55,  70,  26
  , 107, 108, 110, 111, 112, 113, 172, 109                                                                   /*  25 Used by states (120,204) */
  ,  22,  24,  23, 173                                                                                       /*  26 Used by state  (121) */
  ,  31,  32, 182                                                                                            /*  27 Used by state  (128) */
  ,-149, 185                                                                                                 /*  28 Used by state  (131) */
  , 194, 193                                                                                                 /*  29 Used by state  (139) */
  ,  22,  24,  23, 195                                                                                       /*  30 Used by state  (140) */
  ,  84,  83,  85,  86,  87,  82,  81,  71,  76,  66,  67,  68,  79,  78,  69,  72,  80,  73,  74,  75       /*  31 Used by states (142,290) */
  ,  56,  55,  70, -22,  26
  , 146, 148, 147                                                                                            /*  32 Used by state  (144) */
  , 200, 201                                                                                                 /*  33 Used by states (149,362) */
  ,  84,  83,  85,  86,  87,  82,  81,  71,  76,  66,  67,  68, 155,  79,  78,  69,  72,  80,  73,  74       /*  34 Used by state  (150) */
  ,  75,  56,  55, 153,  26
  ,  84,  83,  85,  86,  87,  82,  81,  71,  76,  66,  67,  68, 155,  79,  78,  69,  16,  72,  80,  73       /*  35 Used by states (153,205) */
  ,  74,  75,  56,  55, 150, 205,  26
  , 207, 209, 211, 210, 216, 217, 212, 213, 214, 215, 208                                                    /*  36 Used by state  (154) */
  , 107, 108, 110, 111, 112, 113, 109                                                                        /*  37 Used by states (157,263,267,296) */
  , 223,  26                                                                                                 /*  38 Used by states (158,223,269,333) */
  , -42, 185                                                                                                 /*  39 Used by state  (160) */
  , 110, 111, 112, 113, 109                                                                                  /*  40 Used by states (163,164) */
  , 113, 109                                                                                                 /*  41 Used by states (166,167,168) */
  ,  22,  24,  23, 224                                                                                       /*  42 Used by state  (174) */
  , 225, 107, 108, 110, 111, 112, 113, 109                                                                   /*  43 Used by state  (175) */
  , 226, 227, 107, 108, 110, 111, 112, 113, 109                                                              /*  44 Used by state  (176) */
  , 228, 107, 108, 110, 111, 112, 113, 109                                                                   /*  45 Used by state  (177) */
  , 229, 107, 108, 110, 111, 112, 113, 109                                                                   /*  46 Used by state  (178) */
  , 230, 107, 108, 110, 111, 112, 113, 109                                                                   /*  47 Used by state  (179) */
  ,-148,  22,  24,  23                                                                                       /*  48 Used by state  (184) */
  , 244, 245, 243, 239, 238, 240, 241, 242                                                                   /*  49 Used by states (189,225) */
  , -13, -13, -13, 107, 108, 110, 111, 112, 113, 109                                                         /*  50 Used by state  (192) */
  ,  16, 247, 248                                                                                            /*  51 Used by state  (193) */
  , -28, 146, 144, 148, 147, -28, -28, -28                                                                   /*  52 Used by states (195,325) */
  , 219, -23                                                                                                 /*  53 Used by state  (197) */
  , 200, 201, 256                                                                                            /*  54 Used by state  (203) */
  , 259, 260, 261                                                                                            /*  55 Used by state  (208) */
  , 264, 265                                                                                                 /*  56 Used by state  (211) */
  , 102, 269                                                                                                 /*  57 Used by state  (220) */
  , 107, 108, 110, 111, 112, 113,-144, 109                                                                   /*  58 Used by state  (232) */
  , 107, 108, 110, 111, 112, 113, 278, 109                                                                   /*  59 Used by state  (233) */
  , 279,  26                                                                                                 /*  60 Used by state  (235) */
  ,-177,-177, 282                                                                                            /*  61 Used by state  (236) */
  , 283, 284, 286, 287, 285                                                                                  /*  62 Used by state  (237) */
  , -18,  22,  24,  23                                                                                       /*  63 Used by state  (249) */
  ,  22,  24,  23, 301                                                                                       /*  64 Used by state  (266) */
  , 306, -54, 307                                                                                            /*  65 Used by state  (271) */
  , 309, 107, 108, 110, 111, 112, 113, 109                                                                   /*  66 Used by state  (273) */
  , 310, 107, 108, 110, 111, 112, 113, 109                                                                   /*  67 Used by state  (274) */
  , 311, 107, 108, 110, 111, 112, 113, 109                                                                   /*  68 Used by state  (275) */
  , 312, 107, 108, 110, 111, 112, 113, 109                                                                   /*  69 Used by state  (276) */
  , 313, 107, 108, 110, 111, 112, 113, 109                                                                   /*  70 Used by state  (277) */
  , 316,-179                                                                                                 /*  71 Used by state  (281) */
  ,-161,-161,-161, 318,-161                                                                                  /*  72 Used by state  (283) */
  ,-162,-162,-162, 319,-162                                                                                  /*  73 Used by state  (284) */
  ,  22,  24,  23, 325                                                                                       /*  74 Used by state  (291) */
  ,  22,  24,  23, -98                                                                                       /*  75 Used by state  (298) */
  , 219, -99                                                                                                 /*  76 Used by state  (299) */
  ,  84,  83,  85,  86,  87, 343, 344                                                                        /*  77 Used by state  (316) */
  , 352, 351                                                                                                 /*  78 Used by state  (321) */
  , 354, 355, -68, -68                                                                                       /*  79 Used by state  (323) */
  , 107, 108, 110, 111, 112, 113, 365, 109                                                                   /*  80 Used by state  (334) */
  , 107, 108, 110, 111, 112, 113, 366, 109                                                                   /*  81 Used by state  (335) */
  , 107, 108, 110, 111, 112, 113, 367, 109                                                                   /*  82 Used by state  (336) */
  , 107, 108, 110, 111, 112, 113, 368, 109                                                                   /*  83 Used by state  (337) */
  , 369, 107, 108, 110, 111, 112, 113, 109                                                                   /*  84 Used by state  (338) */
  , 146, 144, 148, 147                                                                                       /*  85 Used by state  (360) */
  , 352, 381                                                                                                 /*  86 Used by state  (370) */
  , 386, 383, 385                                                                                            /*  87 Used by state  (377) */
  , 391, 107, 108, 110, 111, 112, 113, 109                                                                   /*  88 Used by state  (380) */
  , 386, 385                                                                                                 /*  89 Used by state  (383) */
  , 354, 355, 107, 108, 110, 111, 112, 113, 109                                                              /*  90 Used by state  (389) */
  , 200, 201, 397                                                                                            /*  91 Used by state  (390) */
  , 401, 107, 108, 110, 111, 112, 113, 109                                                                   /*  92 Used by state  (398) */
  , 107, 108, 110, 111, 112, 113, 403, 109                                                                   /*  93 Used by state  (402) */
}; // Size of table:1.244(x86)/1.248(x64) bytes.

static const unsigned char termSetTable[476] = {
   0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x00,0x80,0x00 /*   0   5 tokens Used by states (15,43,48,377,382,394,399) */
  ,0xfe,0x80,0x3a,0x00,0x00,0x00,0x13,0x80,0x01,0x80,0x03,0x80,0x43,0x02 /*   1  25 tokens Used by states (16,31,32) */
  ,0x01,0x3c,0x40,0x24,0x3e,0xde,0xc0,0x7e,0xe8,0xff,0xff,0xff,0xff,0x03 /*   2  65 tokens Used by state  (26) */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x40,0x00 /*   3   2 tokens Used by state  (42) */
  ,0x01,0x20,0x00,0x00,0x02,0x00,0x00,0x42,0x00,0x00,0x00,0x00,0x00,0x00 /*   4   5 tokens Used by state  (47) */
  ,0x00,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00 /*   5   3 tokens Used by states (50,51,159,161) */
  ,0x00,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x20,0x80,0x1f,0x01 /*   6  10 tokens Used by state  (52) */
  ,0x01,0x3c,0x00,0x24,0x3e,0x8c,0x80,0x52,0x40,0x00,0xbc,0xff,0xbf,0x01 /*   7  41 tokens Used by states (54,57,58,59,60,61,62,63,64,65,66,67,68,69,82,83,84,85,86,87,114,115,117,118,119,162,165,170,172,173,231,278,308,365,366,367,368,403) */
  ,0x81,0x3c,0x00,0x24,0x3e,0x8d,0x80,0x52,0x40,0x00,0xbc,0xff,0xbf,0x01 /*   8  43 tokens Used by state  (81) */
  ,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x20,0x00,0x00,0x00 /*   9   3 tokens Used by states (96,191) */
  ,0xfe,0x80,0x3a,0x00,0x00,0x00,0x13,0x80,0x01,0x80,0x03,0x80,0x41,0x02 /*  10  24 tokens Used by states (128,129,212,213,214,215,216,217) */
  ,0x01,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00 /*  11   3 tokens Used by states (132,234) */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x80,0x00 /*  12   2 tokens Used by states (141,250,322,353,375) */
  ,0x01,0x20,0x00,0x20,0x3a,0x00,0x80,0x52,0x00,0x00,0x1c,0x00,0x80,0x00 /*  13  15 tokens Used by states (149,220) */
  ,0x01,0x20,0x00,0x20,0x3a,0x00,0x80,0x52,0x00,0x00,0x1c,0x60,0x80,0x00 /*  14  17 tokens Used by states (151,152,202,255,256,257,263,264,296,300,301,326,329,358,359) */
  ,0x01,0x30,0x00,0x20,0x3a,0x88,0x80,0x52,0x00,0x00,0x9c,0x7f,0xa0,0x00 /*  15  27 tokens Used by state  (156) */
  ,0x01,0x30,0x00,0x20,0x3a,0x88,0x80,0x52,0x00,0x00,0xbc,0x7f,0xa0,0x00 /*  16  28 tokens Used by states (157,267) */
  ,0x01,0x3c,0x00,0x24,0x3e,0x8c,0x80,0x52,0x40,0x00,0xbc,0xff,0xa1,0x00 /*  17  36 tokens Used by states (163,164) */
  ,0x01,0x3c,0x00,0x24,0x3e,0x8c,0x80,0x52,0x40,0x00,0xbc,0xff,0xaf,0x00 /*  18  39 tokens Used by states (166,167,168) */
  ,0x01,0x3c,0x00,0x24,0x3e,0x8c,0x80,0x52,0x40,0x00,0xbc,0xff,0xbf,0x00 /*  19  40 tokens Used by state  (169) */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x71,0x00,0x00,0x00,0x00 /*  20   5 tokens Used by states (189,225,244,245) */
  ,0x01,0x00,0x00,0x20,0x20,0x00,0x00,0x10,0x00,0x00,0x1c,0x00,0x80,0x00 /*  21   8 tokens Used by states (199,253,360) */
  ,0x00,0x10,0x00,0x00,0x20,0x88,0x00,0x00,0x00,0x00,0xa0,0x1f,0x20,0x00 /*  22  12 tokens Used by state  (204) */
  ,0x01,0x20,0x00,0x20,0x3a,0x00,0x80,0x52,0x40,0x00,0x3c,0x00,0x80,0x00 /*  23  17 tokens Used by states (221,304) */
  ,0x01,0x20,0x00,0x20,0x3a,0x52,0xc0,0x52,0x40,0x00,0x3c,0x00,0x80,0x00 /*  24  21 tokens Used by states (222,270,397) */
  ,0x00,0x10,0x00,0x00,0x20,0x88,0x00,0x00,0x00,0x00,0xa0,0x9f,0x3f,0x01 /*  25  19 tokens Used by state  (224) */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x00,0x80,0x00 /*  26   4 tokens Used by state  (224) */
  ,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0xa0,0x00 /*  27   4 tokens Used by states (238,239,240,241,242,285,286,287,350,373,374) */
  ,0x01,0x20,0x00,0x20,0x3a,0x00,0x80,0x52,0x00,0x00,0x1c,0x20,0x80,0x00 /*  28  16 tokens Used by state  (254) */
  ,0x01,0x20,0x00,0x20,0x32,0x00,0x80,0x52,0x00,0x00,0x1c,0x00,0x80,0x00 /*  29  14 tokens Used by states (268,363) */
  ,0x01,0x20,0x00,0x20,0x22,0x00,0x80,0x52,0x00,0x00,0x1c,0x00,0x80,0x00 /*  30  13 tokens Used by states (302,362) */
  ,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00 /*  31   2 tokens Used by state  (317) */
  ,0x01,0x20,0x00,0x20,0x22,0x00,0x00,0x52,0x00,0x00,0x1c,0x00,0x80,0x00 /*  32  12 tokens Used by states (330,387) */
  ,0x01,0x20,0x00,0x20,0x22,0x00,0x00,0x52,0x00,0x00,0x3c,0x00,0x80,0x00 /*  33  13 tokens Used by states (354,355,388,389,396,400) */
}; // Size of table:476(x86)/480(x64) bytes.

/**********************************************************************************\
* The 3 arrays NTindexListTable, stateListTable and successorCode holds a          *
* compressed succesor-matrix, used by LRParser to find newstate = successor(S,A)   *
* as last part of a reduction with production P, A -> alfa.                        *
* A reduction by production P goes as follows:                                     *
*   Pop L elements from stack, where L = length of alfa;                           *
*   S = state on stacktop;                                                         *
*   A = leftside of the reduce production P;                                       *
*   newstate = successor(S,A);                                                     *
*   push(newstate), and set current state = newstate.                              *
*                                                                                  *
* For each relevant state S, a #define is generated and used as element S in array *
* successorCode. Each define has the format:                                       *
*                                                                                  *
* #define _suDDDD Code                                                             *
*                                                                                  *
* where DDDD is the statenumber S and Code is an unsigned int with the following   *
* format:                                                                          *
*                   0         1         2         3                                *
* Bit index:        01234567890123456789012345678901                               *
* Code              iiiiiiiiiiiiiiiiFrrrrrrrrrrrrrrr                               *
*                                                                                  *
* i          : Bit[ 0-15]: unsigned short                                          *
* r          : Bit[17-31]: unsigned short                                          *
* F          : Bit 16    : Indicates how to interpret i and r.                     *
*                                                                                  *
* F == 0: Uncompressed Format.                                                     *
*      i: Index into array NTindexListTable, pointing at the first element of      *
*         NTIndexList (see below).                                                 *
*      r: Index into array stateListTable, pointing at the first element of        *
*         stateList (see below).                                                   *
* F == 1: Compressed Format, used if there is only 1 possible newstate.            *
*      i: Index A' of nonterminal A, A' = (A - terminalCount).                     *
*      r: New state.                                                               *
*                                                                                  *
* F == 0: Use arrays NTIndexListTable and stateListTable to find newstate.         *
*      n                  : NTIndexListTable[i] = number of elements in NTIndexList*
*      NTIndexList[0..n-1]: NTIndexListTable[i+1..i+n]                             *
*                           Ordered list of possible nonterminal-indices.          *
*      stateList[0..n-1]  : stateListTable[r..r+n-1], same length as NTIndexList   *
*                                                                                  *
*      To get newstate, find index k in NTIndexList, so NTIndexList[k] == A',      *
*      and set newstate = stateList[k].                                            *
*      A' = (A - terminalCount) will always exist.                                 *
*      Note that both NTIndexList and stateList may be shared by several states.   *
\**********************************************************************************/

#define _su0000 0x00000000 /* NTindexList   0, stateList   0          */
#define _su0011 0x0033000b /* Goto 25 on name                         */
#define _su0014 0x0016000c /* NTindexList   1, stateList   1          */
#define _su0016 0x003d0016 /* Goto 30 on opt_alldistinct              */
#define _su0017 0x0043000b /* Goto 33 on name                         */
#define _su0018 0x0045000b /* Goto 34 on name                         */
#define _su0019 0x0049003d /* Goto 36 on opt_unique                   */
#define _su0021 0x001a0000 /* NTindexList   0, stateList   2          */
#define _su0022 0x00530014 /* Goto 41 on opt_all                      */
#define _su0023 0x0030000c /* NTindexList   1, stateList   3          */
#define _su0024 0x0034000c /* NTindexList   1, stateList   4          */
#define _su0027 0x005d000b /* Goto 46 on name                         */
#define _su0028 0x005f000b /* Goto 47 on name                         */
#define _su0030 0x0038000f /* NTindexList   2, stateList   5          */
#define _su0035 0x00b5000b /* Goto 90 on name                         */
#define _su0038 0x00b9000b /* Goto 92 on name                         */
#define _su0039 0x00bb000b /* Goto 93 on name                         */
#define _su0041 0x0056000c /* NTindexList   1, stateList   6          */
#define _su0045 0x005a001f /* NTindexList   3, stateList   7          */
#define _su0046 0x0060000c /* NTindexList   1, stateList   8          */
#define _su0047 0x00cb000d /* Goto 101 on opt_where                   */
#define _su0049 0x00cf0018 /* Goto 103 on opt_into                    */
#define _su0054 0x00640023 /* NTindexList   4, stateList   9          */
#define _su0055 0x00680026 /* NTindexList   5, stateList  10          */
#define _su0056 0x00800026 /* NTindexList   5, stateList  11          */
#define _su0070 0x00980033 /* NTindexList   6, stateList  12          */
#define _su0089 0x00b60043 /* NTindexList   7, stateList  13          */
#define _su0091 0x010f000b /* Goto 135 on name                        */
#define _su0095 0x0111000d /* Goto 136 on opt_where                   */
#define _su0098 0x00bc0047 /* NTindexList   8, stateList  14          */
#define _su0101 0x00c4004c /* NTindexList   9, stateList  15          */
#define _su0102 0x00c8004f /* NTindexList  10, stateList  16          */
#define _su0104 0x00ec0062 /* NTindexList  11, stateList  17          */
#define _su0105 0x01080043 /* NTindexList   7, stateList  18          */
#define _su0106 0x0145000b /* Goto 162 on name                        */
#define _su0107 0x010e0071 /* NTindexList  12, stateList  19          */
#define _su0108 0x01280071 /* NTindexList  12, stateList  20          */
#define _su0109 0x01420071 /* NTindexList  12, stateList  21          */
#define _su0110 0x015c0071 /* NTindexList  12, stateList  22          */
#define _su0111 0x01760071 /* NTindexList  12, stateList  23          */
#define _su0112 0x01900071 /* NTindexList  12, stateList  24          */
#define _su0113 0x01aa0071 /* NTindexList  12, stateList  25          */
#define _su0116 0x01550021 /* Goto 170 on hostvar                     */
#define _su0122 0x01c40033 /* NTindexList   6, stateList  26          */
#define _su0123 0x01e20071 /* NTindexList  12, stateList  27          */
#define _su0124 0x01fc0071 /* NTindexList  12, stateList  28          */
#define _su0125 0x02160071 /* NTindexList  12, stateList  29          */
#define _su0126 0x02300071 /* NTindexList  12, stateList  30          */
#define _su0127 0x024a0071 /* NTindexList  12, stateList  31          */
#define _su0128 0x0264007f /* NTindexList  13, stateList  32          */
#define _su0129 0x016f0016 /* Goto 183 on opt_alldistinct             */
#define _su0130 0x0268000c /* NTindexList   1, stateList  33          */
#define _su0133 0x0175000b /* Goto 186 on name                        */
#define _su0134 0x026c0082 /* NTindexList  14, stateList  34          */
#define _su0137 0x02720086 /* NTindexList  15, stateList  35          */
#define _su0138 0x02760071 /* NTindexList  12, stateList  36          */
#define _su0142 0x02900089 /* NTindexList  16, stateList  37          */
#define _su0144 0x018d0029 /* Goto 198 on access_mode                 */
#define _su0150 0x02ae0099 /* NTindexList  17, stateList  38          */
#define _su0153 0x02d000ab /* NTindexList  18, stateList  39          */
#define _su0154 0x019d002e /* Goto 206 on rel_op                      */
#define _su0158 0x02f800c0 /* NTindexList  19, stateList  40          */
#define _su0171 0x0145000b /* Goto 162 on name                        */
#define _su0181 0x02fe0071 /* NTindexList  12, stateList  41          */
#define _su0183 0x03180071 /* NTindexList  12, stateList  42          */
#define _su0185 0x033200c4 /* NTindexList  20, stateList  43          */
#define _su0189 0x033600c7 /* NTindexList  21, stateList  44          */
#define _su0190 0x01ed000b /* Goto 246 on name                        */
#define _su0193 0x033a000c /* NTindexList   1, stateList  45          */
#define _su0194 0x01f5000b /* Goto 250 on name                        */
#define _su0195 0x033e004c /* NTindexList   9, stateList  46          */
#define _su0200 0x0342004f /* NTindexList  10, stateList  47          */
#define _su0201 0x0366004f /* NTindexList  10, stateList  48          */
#define _su0205 0x038a00ab /* NTindexList  18, stateList  49          */
#define _su0206 0x03b200ca /* NTindexList  22, stateList  50          */
#define _su0207 0x03d000ca /* NTindexList  22, stateList  51          */
#define _su0210 0x03ee0071 /* NTindexList  12, stateList  52          */
#define _su0218 0x0408000c /* NTindexList   1, stateList  53          */
#define _su0219 0x040c0071 /* NTindexList  12, stateList  54          */
#define _su0220 0x0219000d /* Goto 268 on opt_where                   */
#define _su0222 0x021d000b /* Goto 270 on name                        */
#define _su0223 0x042600da /* NTindexList  23, stateList  55          */
#define _su0225 0x042a00c7 /* NTindexList  21, stateList  56          */
#define _su0226 0x042e0071 /* NTindexList  12, stateList  57          */
#define _su0227 0x04480071 /* NTindexList  12, stateList  58          */
#define _su0228 0x04620071 /* NTindexList  12, stateList  59          */
#define _su0229 0x047c0071 /* NTindexList  12, stateList  60          */
#define _su0230 0x04960071 /* NTindexList  12, stateList  61          */
#define _su0235 0x04b000dd /* NTindexList  24, stateList  62          */
#define _su0236 0x02330040 /* Goto 281 on opt_not_null                */
#define _su0248 0x04b4000c /* NTindexList   1, stateList  63          */
#define _su0252 0x04b8004c /* NTindexList   9, stateList  64          */
#define _su0259 0x04bc00ca /* NTindexList  22, stateList  65          */
#define _su0261 0x04da0071 /* NTindexList  12, stateList  66          */
#define _su0262 0x04f400e0 /* NTindexList  25, stateList  67          */
#define _su0268 0x025d001a /* Goto 302 on opt_groupby                 */
#define _su0269 0x051600da /* NTindexList  23, stateList  68          */
#define _su0271 0x02630024 /* Goto 305 on opt_join_type               */
#define _su0281 0x02770041 /* Goto 315 on opt_defaultvalue            */
#define _su0288 0x02810031 /* Goto 320 on number_const                */
#define _su0289 0x051a00f2 /* NTindexList  26, stateList  69          */
#define _su0290 0x05200089 /* NTindexList  16, stateList  70          */
#define _su0293 0x053e00ca /* NTindexList  22, stateList  71          */
#define _su0295 0x055c00e0 /* NTindexList  25, stateList  72          */
#define _su0302 0x0295001b /* Goto 330 on opt_having                  */
#define _su0309 0x057e0071 /* NTindexList  12, stateList  73          */
#define _su0310 0x05980071 /* NTindexList  12, stateList  74          */
#define _su0311 0x05b20071 /* NTindexList  12, stateList  75          */
#define _su0312 0x05cc0071 /* NTindexList  12, stateList  76          */
#define _su0313 0x05e60071 /* NTindexList  12, stateList  77          */
#define _su0316 0x060000f6 /* NTindexList  27, stateList  78          */
#define _su0318 0x02b90031 /* Goto 348 on number_const                */
#define _su0319 0x02bb0031 /* Goto 349 on number_const                */
#define _su0323 0x02c30028 /* Goto 353 on opt_ascdesc                 */
#define _su0325 0x060c004c /* NTindexList   9, stateList  79          */
#define _su0327 0x061000ca /* NTindexList  22, stateList  80          */
#define _su0330 0x02d1001c /* Goto 360 on opt_orderby                 */
#define _su0331 0x062e004f /* NTindexList  10, stateList  81          */
#define _su0332 0x065200fd /* NTindexList  28, stateList  82          */
#define _su0333 0x066e00da /* NTindexList  23, stateList  83          */
#define _su0339 0x067200f2 /* NTindexList  26, stateList  84          */
#define _su0343 0x02e70031 /* Goto 371 on number_const                */
#define _su0344 0x02e90031 /* Goto 372 on number_const                */
#define _su0352 0x0678010c /* NTindexList  29, stateList  85          */
#define _su0356 0x067c004c /* NTindexList   9, stateList  86          */
#define _su0360 0x0680004c /* NTindexList   9, stateList  87          */
#define _su0369 0x06840071 /* NTindexList  12, stateList  88          */
#define _su0377 0x069e010f /* NTindexList  30, stateList  89          */
#define _su0378 0x06a20112 /* NTindexList  31, stateList  90          */
#define _su0379 0x06c0004f /* NTindexList  10, stateList  91          */
#define _su0383 0x0313002a /* Goto 393 on lockmode                    */
#define _su0389 0x03190028 /* Goto 396 on opt_ascdesc                 */
#define _su0391 0x06e40071 /* NTindexList  12, stateList  92          */
#define _su0395 0x06fe0122 /* NTindexList  32, stateList  93          */
#define _su0401 0x071a0071 /* NTindexList  12, stateList  94          */

#define nil (unsigned int)-1
static const unsigned int successorCode[404] = {
   _su0000,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,_su0011,nil    ,nil    ,_su0014,nil    ,_su0016,_su0017,_su0018,_su0019
  ,nil    ,_su0021,_su0022,_su0023,_su0024,nil    ,nil    ,_su0027,_su0028,nil
  ,_su0030,nil    ,nil    ,nil    ,nil    ,_su0035,nil    ,nil    ,_su0038,_su0039
  ,nil    ,_su0041,nil    ,nil    ,nil    ,_su0045,_su0046,_su0047,nil    ,_su0049
  ,nil    ,nil    ,nil    ,nil    ,_su0054,_su0055,_su0056,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,_su0070,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0089
  ,nil    ,_su0091,nil    ,nil    ,nil    ,_su0095,nil    ,nil    ,_su0098,nil
  ,nil    ,_su0101,_su0102,nil    ,_su0104,_su0105,_su0106,_su0107,_su0108,_su0109
  ,_su0110,_su0111,_su0112,_su0113,nil    ,nil    ,_su0116,nil    ,nil    ,nil
  ,nil    ,nil    ,_su0122,_su0123,_su0124,_su0125,_su0126,_su0127,_su0128,_su0129
  ,_su0130,nil    ,nil    ,_su0133,_su0134,nil    ,nil    ,_su0137,_su0138,nil
  ,nil    ,nil    ,_su0142,nil    ,_su0144,nil    ,nil    ,nil    ,nil    ,nil
  ,_su0150,nil    ,nil    ,_su0153,_su0154,nil    ,nil    ,nil    ,_su0158,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,_su0171,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,_su0181,nil    ,_su0183,nil    ,_su0185,nil    ,nil    ,nil    ,_su0189
  ,_su0190,nil    ,nil    ,_su0193,_su0194,_su0195,nil    ,nil    ,nil    ,nil
  ,_su0200,_su0201,nil    ,nil    ,nil    ,_su0205,_su0206,_su0207,nil    ,nil
  ,_su0210,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0218,_su0219
  ,_su0220,nil    ,_su0222,_su0223,nil    ,_su0225,_su0226,_su0227,_su0228,_su0229
  ,_su0230,nil    ,nil    ,nil    ,nil    ,_su0235,_su0236,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0248,nil
  ,nil    ,nil    ,_su0252,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0259
  ,nil    ,_su0261,_su0262,nil    ,nil    ,nil    ,nil    ,nil    ,_su0268,_su0269
  ,nil    ,_su0271,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,_su0281,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0288,_su0289
  ,_su0290,nil    ,nil    ,_su0293,nil    ,_su0295,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,_su0302,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0309
  ,_su0310,_su0311,_su0312,_su0313,nil    ,nil    ,_su0316,nil    ,_su0318,_su0319
  ,nil    ,nil    ,nil    ,_su0323,nil    ,_su0325,nil    ,_su0327,nil    ,nil
  ,_su0330,_su0331,_su0332,_su0333,nil    ,nil    ,nil    ,nil    ,nil    ,_su0339
  ,nil    ,nil    ,nil    ,_su0343,_su0344,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,_su0352,nil    ,nil    ,nil    ,_su0356,nil    ,nil    ,nil
  ,_su0360,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0369
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0377,_su0378,_su0379
  ,nil    ,nil    ,nil    ,_su0383,nil    ,nil    ,nil    ,nil    ,nil    ,_su0389
  ,nil    ,_su0391,nil    ,nil    ,nil    ,_su0395,nil    ,nil    ,nil    ,nil
  ,nil    ,_su0401,nil    ,nil
}; // Size of table:1.616(x86)/1.616(x64) bytes.

static const unsigned char NTindexListTable[305] = {
    11,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  21                                                /*    0 Used by states (0,21) */
  ,  2,   5,  21                                                                                             /*    1 Used by states (14,23,24,41,46,130,193,218,248) */
  , 15,  11,  15,  23,  30,  32,  33,  48,  49,  50,  51,  52,  53,  54,  55,  58                            /*    2 Used by state  (30) */
  ,  3,  11,  12,  14                                                                                        /*    3 Used by state  (45) */
  ,  2,  33,  34                                                                                             /*    4 Used by state  (54) */
  , 12,  11,  32,  33,  48,  49,  50,  51,  52,  53,  54,  55,  58                                           /*    5 Used by states (55,56) */
  , 15,   5,  11,  15,  21,  32,  33,  48,  49,  50,  51,  52,  53,  54,  55,  58                            /*    6 Used by states (70,122) */
  ,  3,  31,  32,  33                                                                                        /*    7 Used by states (89,105) */
  ,  4,   5,  11,  16,  21                                                                                   /*    8 Used by state  (98) */
  ,  2,  18,  41                                                                                             /*    9 Used by states (101,195,252,325,356,360) */
  , 18,  11,  15,  19,  32,  33,  37,  43,  44,  45,  48,  49,  50,  51,  52,  53,  54,  55,  58             /*   10 Used by states (102,200,201,331,379) */
  , 14,  11,  15,  30,  32,  33,  48,  49,  50,  51,  52,  53,  54,  55,  58                                 /*   11 Used by state  (104) */
  , 13,  11,  15,  32,  33,  48,  49,  50,  51,  52,  53,  54,  55,  58                                      /*   12 Used by states (107,108,109,110,111,112,113,123,124,125,126,127,138,181,183,210,219,226,227,228,229,230,261,309,310,311,312,313,369,391,401) */
  ,  2,  22,  57                                                                                             /*   13 Used by state  (128) */
  ,  3,  11,  59,  63                                                                                        /*   14 Used by state  (134) */
  ,  2,  11,  14                                                                                             /*   15 Used by state  (137) */
  , 15,  11,  15,  17,  19,  32,  33,  48,  49,  50,  51,  52,  53,  54,  55,  58                            /*   16 Used by states (142,290) */
  , 17,  11,  15,  19,  32,  33,  43,  44,  45,  48,  49,  50,  51,  52,  53,  54,  55,  58                  /*   17 Used by state  (150) */
  , 20,   5,  11,  15,  19,  21,  32,  33,  37,  43,  44,  45,  48,  49,  50,  51,  52,  53,  54,  55,  58   /*   18 Used by states (153,205) */
  ,  3,  11,  25,  35                                                                                        /*   19 Used by state  (158) */
  ,  2,  32,  33                                                                                             /*   20 Used by state  (185) */
  ,  2,  56,  66                                                                                             /*   21 Used by states (189,225) */
  , 15,  11,  15,  19,  32,  33,  45,  48,  49,  50,  51,  52,  53,  54,  55,  58                            /*   22 Used by states (206,207,259,293,327) */
  ,  2,  11,  35                                                                                             /*   23 Used by states (223,269,333) */
  ,  2,  11,  63                                                                                             /*   24 Used by state  (235) */
  , 17,   5,  11,  15,  19,  21,  32,  33,  47,  48,  49,  50,  51,  52,  53,  54,  55,  58                  /*   25 Used by states (262,295) */
  ,  3,  11,  60,  62                                                                                        /*   26 Used by states (289,339) */
  ,  6,  49,  50,  51,  52,  55,  67                                                                         /*   27 Used by state  (316) */
  , 14,  11,  15,  19,  32,  33,  48,  49,  50,  51,  52,  53,  54,  55,  58                                 /*   28 Used by state  (332) */
  ,  2,  11,  62                                                                                             /*   29 Used by state  (352) */
  ,  2,  29,  42                                                                                             /*   30 Used by state  (377) */
  , 15,  11,  15,  32,  33,  38,  39,  48,  49,  50,  51,  52,  53,  54,  55,  58                            /*   31 Used by state  (378) */
  , 14,  11,  15,  32,  33,  39,  48,  49,  50,  51,  52,  53,  54,  55,  58                                 /*   32 Used by state  (395) */
}; // Size of table:308(x86)/312(x64) bytes.

static const unsigned short stateListTable[922] = {
      1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  15                                                    /*   0 Used by state  (0) */
  ,  29,  15                                                                                                 /*   1 Used by state  (14) */
  ,  40,   2,   3,   4,   5,   6,   7,   8,   9,  10,  15                                                    /*   2 Used by state  (21) */
  ,  43,  15                                                                                                 /*   3 Used by state  (23) */
  ,  44,  15                                                                                                 /*   4 Used by state  (24) */
  ,  52,  53,  49,  50,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*   5 Used by state  (30) */
  ,  94,  15                                                                                                 /*   6 Used by state  (41) */
  ,  97,  95,  96                                                                                            /*   7 Used by state  (45) */
  , 100,  15                                                                                                 /*   8 Used by state  (46) */
  , 115, 114                                                                                                 /*   9 Used by state  (54) */
  , 118,  62,  54, 117,  58,  59,  60,  61,  63,  64,  65,  77                                               /*  10 Used by state  (55) */
  , 118,  62,  54, 119,  58,  59,  60,  61,  63,  64,  65,  77                                               /*  11 Used by state  (56) */
  , 121, 118, 120,  15,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*  12 Used by state  (70) */
  , 131, 132,  54                                                                                            /*  13 Used by state  (89) */
  , 140, 141, 139,  15                                                                                       /*  14 Used by state  (98) */
  , 143, 145                                                                                                 /*  15 Used by state  (101) */
  , 118, 157, 156,  62,  54, 149, 151, 152, 154,  57,  58,  59,  60,  61,  63,  64,  65,  77                 /*  16 Used by state  (102) */
  ,  52,  53, 159,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                     /*  17 Used by state  (104) */
  , 160, 132,  54                                                                                            /*  18 Used by state  (105) */
  , 118, 163,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  19 Used by state  (107) */
  , 118, 164,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  20 Used by state  (108) */
  , 118, 165,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  21 Used by state  (109) */
  , 118, 166,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  22 Used by state  (110) */
  , 118, 167,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  23 Used by state  (111) */
  , 118, 168,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  24 Used by state  (112) */
  , 118, 169,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  25 Used by state  (113) */
  , 174, 118, 120,  15,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*  26 Used by state  (122) */
  , 118, 175,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  27 Used by state  (123) */
  , 118, 176,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  28 Used by state  (124) */
  , 118, 177,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  29 Used by state  (125) */
  , 118, 178,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  30 Used by state  (126) */
  , 118, 179,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  31 Used by state  (127) */
  , 181, 180                                                                                                 /*  32 Used by state  (128) */
  , 184,  15                                                                                                 /*  33 Used by state  (130) */
  , 189, 187, 188                                                                                            /*  34 Used by state  (134) */
  ,  97, 191                                                                                                 /*  35 Used by state  (137) */
  , 118, 192,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  36 Used by state  (138) */
  , 118, 157, 196, 197,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*  37 Used by state  (142) */
  , 118, 157, 156,  62,  54, 202, 152, 154,  57,  58,  59,  60,  61,  63,  64,  65,  77                      /*  38 Used by state  (150) */
  , 121, 118, 204, 156,  15,  62,  54, 203, 151, 152, 154,  57,  58,  59,  60,  61,  63,  64,  65,  77       /*  39 Used by state  (153) */
  , 222, 220, 221                                                                                            /*  40 Used by state  (158) */
  , 118, 232,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  41 Used by state  (181) */
  , 118, 233,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  42 Used by state  (183) */
  , 234,  54                                                                                                 /*  43 Used by state  (185) */
  , 236, 237                                                                                                 /*  44 Used by state  (189) */
  , 249,  15                                                                                                 /*  45 Used by state  (193) */
  , 251, 145                                                                                                 /*  46 Used by state  (195) */
  , 118, 157, 156,  62,  54, 254, 151, 152, 154,  57,  58,  59,  60,  61,  63,  64,  65,  77                 /*  47 Used by state  (200) */
  , 118, 157, 156,  62,  54, 255, 151, 152, 154,  57,  58,  59,  60,  61,  63,  64,  65,  77                 /*  48 Used by state  (201) */
  , 174, 118, 204, 156,  15,  62,  54, 203, 151, 152, 154,  57,  58,  59,  60,  61,  63,  64,  65,  77       /*  49 Used by state  (205) */
  , 118, 157, 156,  62,  54, 257,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*  50 Used by state  (206) */
  , 118, 157, 156,  62,  54, 258,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*  51 Used by state  (207) */
  , 118, 263,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  52 Used by state  (210) */
  , 266,  15                                                                                                 /*  53 Used by state  (218) */
  , 118, 267,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  54 Used by state  (219) */
  , 222, 271                                                                                                 /*  55 Used by state  (223) */
  , 272, 237                                                                                                 /*  56 Used by state  (225) */
  , 118, 273,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  57 Used by state  (226) */
  , 118, 274,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  58 Used by state  (227) */
  , 118, 275,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  59 Used by state  (228) */
  , 118, 276,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  60 Used by state  (229) */
  , 118, 277,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  61 Used by state  (230) */
  , 189, 280                                                                                                 /*  62 Used by state  (235) */
  , 291,  15                                                                                                 /*  63 Used by state  (248) */
  , 292, 145                                                                                                 /*  64 Used by state  (252) */
  , 118, 157, 156,  62,  54, 294,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*  65 Used by state  (259) */
  , 118, 296,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  66 Used by state  (261) */
  , 298, 118, 157, 299,  15,  62,  54, 297,  57,  58,  59,  60,  61,  63,  64,  65,  77                      /*  67 Used by state  (262) */
  , 222, 304                                                                                                 /*  68 Used by state  (269) */
  , 323, 321, 322                                                                                            /*  69 Used by state  (289) */
  , 118, 157, 324, 197,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*  70 Used by state  (290) */
  , 118, 157, 156,  62,  54, 326,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*  71 Used by state  (293) */
  , 298, 118, 157, 299,  15,  62,  54, 328,  57,  58,  59,  60,  61,  63,  64,  65,  77                      /*  72 Used by state  (295) */
  , 118, 334,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  73 Used by state  (309) */
  , 118, 335,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  74 Used by state  (310) */
  , 118, 336,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  75 Used by state  (311) */
  , 118, 337,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  76 Used by state  (312) */
  , 118, 338,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  77 Used by state  (313) */
  , 342, 345, 346, 347, 341, 340                                                                             /*  78 Used by state  (316) */
  , 357, 145                                                                                                 /*  79 Used by state  (325) */
  , 118, 157, 156,  62,  54, 358,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*  80 Used by state  (327) */
  , 118, 157, 156,  62,  54, 362, 151, 152, 154,  57,  58,  59,  60,  61,  63,  64,  65,  77                 /*  81 Used by state  (331) */
  , 118, 157, 363,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                     /*  82 Used by state  (332) */
  , 222, 364                                                                                                 /*  83 Used by state  (333) */
  , 323, 370, 322                                                                                            /*  84 Used by state  (339) */
  , 323, 375                                                                                                 /*  85 Used by state  (352) */
  , 376, 145                                                                                                 /*  86 Used by state  (356) */
  , 377, 145                                                                                                 /*  87 Used by state  (360) */
  , 118, 380,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  88 Used by state  (369) */
  , 382, 384                                                                                                 /*  89 Used by state  (377) */
  , 118, 389,  62,  54, 387, 388,  57,  58,  59,  60,  61,  63,  64,  65,  77                                /*  90 Used by state  (378) */
  , 118, 157, 156,  62,  54, 390, 151, 152, 154,  57,  58,  59,  60,  61,  63,  64,  65,  77                 /*  91 Used by state  (379) */
  , 118, 398,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  92 Used by state  (391) */
  , 118, 389,  62,  54, 400,  57,  58,  59,  60,  61,  63,  64,  65,  77                                     /*  93 Used by state  (395) */
  , 118, 402,  62,  54,  57,  58,  59,  60,  61,  63,  64,  65,  77                                          /*  94 Used by state  (401) */
}; // Size of table:1.844(x86)/1.848(x64) bytes.

/**********************************************************************************\
* The productionLength[] is indexed by production number and holds the number of   *
* symbols on the right side of each production.                                    *
\**********************************************************************************/
static const unsigned char productionLength[199] = {
  /*   0 */    1,  1,  1,  1,  1,  1,  1,  1,  1,  1
  /*  10 */ ,  5,  3,  1,  3, 11,  8, 10,  7,  7,  4
  /*  20 */ ,  1,  3,  0,  1,  5,  4,  3,  3,  3,  1
  /*  30 */ , 12,  0,  1,  0,  1,  1,  3,  1,  1,  3
  /*  40 */ ,  1,  0,  2,  3,  1,  2,  0,  1,  2,  3
  /*  50 */ ,  1,  1,  2,  8,  0,  1,  1,  0,  2,  0
  /*  60 */ ,  2,  0,  3,  0,  3,  3,  1,  2,  0,  1
  /*  70 */ ,  1,  0,  3,  2,  1,  1,  1,  0,  3,  2
  /*  80 */ ,  1,  1,  3,  3,  2,  1,  1,  3,  3,  4
  /*  90 */ ,  5,  6,  5,  6,  3,  4,  3,  4,  1,  1
  /* 100 */ ,  1,  1,  1,  1,  1,  1,  1,  3,  1,  3
  /* 110 */ ,  3,  3,  3,  3,  3,  3,  2,  2,  1,  1
  /* 120 */ ,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1
  /* 130 */ ,  1,  3,  6,  3,  8,  8,  8,  8, 14,  4
  /* 140 */ ,  5,  1,  1,  1,  2,  1,  1,  3,  5,  4
  /* 150 */ ,  5, 12,  9,  0,  1,  3,  1,  2,  3,  1
  /* 160 */ ,  4,  2,  2,  5,  5,  2,  2,  2,  1,  1
  /* 170 */ ,  1,  1,  1,  4,  0,  1,  1,  0,  2,  0
  /* 180 */ ,  2,  1,  1,  2,  2,  1,  1,  1,  3,  3
  /* 190 */ ,  2,  1,  1,  1,  1,  1,  1,  1,  1
}; // Size of table:200(x86)/200(x64) bytes.

/**********************************************************************************\
* leftSideTable[] is indexed by production number.                                 *
* leftSideTable[p] = A', A' = (A - terminalCount)                                  *
*                        where A is the left side of production p.                 *
* A' = 0..nonterminalCount-1.                                                      *
* p  = 0..productionCount-1                                                        *
\**********************************************************************************/
static const unsigned char leftSideTable[199] = {
  /*   0 */    0,  1,  1,  1,  1,  1,  1,  1,  1,  1
  /*  10 */ ,  2, 12, 12, 14,  3,  3,  3,  3,  3,  3
  /*  20 */ , 16, 16, 17, 17,  4,  5,  5,  5,  5,  5
  /*  30 */ , 21, 20, 20, 22, 22, 22, 23, 23, 30, 30
  /*  40 */ , 30, 24, 24, 31, 31, 32, 34, 34, 34, 25
  /*  50 */ , 25, 35, 35, 35, 36, 36, 36, 13, 13, 27
  /*  60 */ , 27, 26, 26, 28, 28, 38, 38, 39, 40, 40
  /*  70 */ , 40, 18, 18, 18, 41, 41, 41, 29, 29, 29
  /*  80 */ , 42, 42, 37, 37, 37, 37, 43, 43, 44, 44
  /*  90 */ , 44, 44, 44, 44, 44, 44, 44, 44, 47, 47
  /* 100 */ , 45, 46, 46, 46, 46, 46, 46, 19, 19, 15
  /* 110 */ , 15, 15, 15, 15, 15, 15, 15, 15, 15, 48
  /* 120 */ , 48, 48, 48, 48, 48, 48, 48, 48, 48, 48
  /* 130 */ , 48, 48, 48, 48, 48, 48, 48, 48, 48, 48
  /* 140 */ , 48, 58, 58, 58, 57, 57, 53, 53,  6,  7
  /* 150 */ ,  8,  8,  8, 61, 61, 60, 60, 62, 59, 59
  /* 160 */ , 63, 56, 56, 56, 56, 56, 56, 56, 56, 56
  /* 170 */ , 56, 56, 56, 56, 66, 66, 66, 64, 64, 65
  /* 180 */ , 65, 67, 67, 67, 67, 67, 67, 67,  9,  9
  /* 190 */ , 10, 11, 33, 54, 49, 55, 50, 51, 52
}; // Size of table:200(x86)/200(x64) bytes.

/**********************************************************************************\
* rightSideTable[] holds a compressed form of the rightsides of all                *
* productions in the grammar. Only used for debugging.                             *
\**********************************************************************************/
static const unsigned char rightSideTable[472] = {
  /*   0 */  107
  /*   1 */ ,108
  /*   2 */ ,109
  /*   3 */ ,110
  /*   4 */ ,111
  /*   5 */ ,112
  /*   6 */ ,113
  /*   7 */ ,114
  /*   8 */ ,115
  /*   9 */ ,116
  /*  10 */ , 68,117, 59,118,119
  /*  11 */ ,118, 85,120
  /*  12 */ ,120
  /*  13 */ ,117, 87,121
  /*  14 */ , 39, 42,117,102,122,103, 69,102,123,103,124
  /*  15 */ , 39, 42,117, 69,102,123,103,124
  /*  16 */ , 39, 42,117,102,122,103,102,111,103,124
  /*  17 */ , 39, 42,117,102,111,103,124
  /*  18 */ , 39, 42,117,102,122,103,111
  /*  19 */ , 39, 42,117,111
  /*  20 */ ,117
  /*  21 */ ,122, 85,117
  /*  23 */ ,125
  /*  24 */ , 25, 34,117,119,124
  /*  25 */ ,111, 82,126,111
  /*  26 */ ,111, 84,111
  /*  27 */ ,111, 83,111
  /*  28 */ ,102,111,103
  /*  29 */ ,127
  /*  30 */ , 58,128,129,130, 34,131,119,132,133,134,124,135
  /*  32 */ ,  9
  /*  34 */ ,  9
  /*  35 */ , 27
  /*  36 */ ,129, 85,136
  /*  37 */ ,136
  /*  38 */ , 97
  /*  39 */ ,117, 86, 97
  /*  40 */ ,121
  /*  42 */ , 42,137
  /*  43 */ ,137, 85,138
  /*  44 */ ,138
  /*  45 */ ,139,140
  /*  47 */ ,139
  /*  48 */ , 40,139
  /*  49 */ ,131, 85,141
  /*  50 */ ,141
  /*  51 */ ,117
  /*  52 */ ,117,117
  /*  53 */ ,102,141,142, 44,141, 54,143,103
  /*  55 */ , 41
  /*  56 */ , 46
  /*  58 */ , 70,143
  /*  60 */ , 36,143
  /*  62 */ , 35, 14,125
  /*  64 */ , 55, 14,144
  /*  65 */ ,144, 85,145
  /*  66 */ ,145
  /*  67 */ ,121,146
  /*  69 */ , 11
  /*  70 */ , 26
  /*  72 */ , 33,147,  8
  /*  73 */ ,147,  8
  /*  74 */ , 13
  /*  75 */ , 62
  /*  76 */ , 57
  /*  78 */ , 37,148, 50
  /*  79 */ ,148, 50
  /*  80 */ , 60
  /*  81 */ , 29
  /*  82 */ ,143, 93,143
  /*  83 */ ,143, 94,143
  /*  84 */ ,101,149
  /*  85 */ ,149
  /*  86 */ ,150
  /*  87 */ ,102,143,103
  /*  88 */ ,151,152,151
  /*  89 */ , 30,102,111,103
  /*  90 */ ,151, 12,151, 94,151
  /*  91 */ ,151,101, 12,151, 94,151
  /*  92 */ ,151, 37,102,153,103
  /*  93 */ ,151,101, 37,102,153,103
  /*  94 */ ,151, 47,121
  /*  95 */ ,151,101, 47,121
  /*  96 */ ,151, 43, 52
  /*  97 */ ,151, 43,101, 52
  /*  98 */ ,111
  /*  99 */ ,125
  /* 100 */ ,125
  /* 101 */ , 89
  /* 102 */ , 90
  /* 103 */ , 91
  /* 104 */ , 92
  /* 105 */ , 87
  /* 106 */ , 88
  /* 107 */ ,125, 85,121
  /* 108 */ ,121
  /* 109 */ ,121, 95,121
  /* 110 */ ,121, 96,121
  /* 111 */ ,121,104,121
  /* 112 */ ,121, 97,121
  /* 113 */ ,121, 98,121
  /* 114 */ ,121, 99,121
  /* 115 */ ,121,100,121
  /* 116 */ , 96,154
  /* 117 */ , 95,154
  /* 118 */ ,154
  /* 119 */ ,155
  /* 120 */ ,156
  /* 121 */ ,157
  /* 122 */ ,158
  /* 123 */ ,138
  /* 124 */ ,159
  /* 125 */ ,160
  /* 126 */ ,161
  /* 127 */ , 19
  /* 128 */ , 20
  /* 129 */ , 21
  /* 130 */ , 52
  /* 131 */ ,102,121,103
  /* 132 */ , 15,102,121, 10,162,103
  /* 133 */ ,102,111,103
  /* 134 */ , 63,102,121, 34,121, 33,121,103
  /* 135 */ , 63,102,121, 85,121, 85,121,103
  /* 136 */ , 79,102,121, 85,121, 85,121,103
  /* 137 */ , 80,102,121, 85,121, 85,121,103
  /* 138 */ , 81,102,121, 85,121, 85,121, 85,121, 85,121, 85,121,103
  /* 139 */ , 17,102,163,103
  /* 140 */ ,164,102,128,121,103
  /* 141 */ , 49
  /* 142 */ , 48
  /* 143 */ , 64
  /* 144 */ ,128,121
  /* 145 */ , 97
  /* 146 */ ,117
  /* 147 */ ,117, 86,117
  /* 148 */ , 23,117, 22, 33,111
  /* 149 */ , 32,117, 42,137
  /* 150 */ , 18, 65,117, 47,117
  /* 151 */ , 18, 65,117,102,165, 85, 56, 45,102,166,103,103
  /* 152 */ , 18,167, 38,117, 54,117,102,166,103
  /* 154 */ , 66
  /* 155 */ ,166, 85,168
  /* 156 */ ,168
  /* 157 */ ,117,146
  /* 158 */ ,165, 85,169
  /* 159 */ ,169
  /* 160 */ ,117,162,170,171
  /* 161 */ ,172, 71
  /* 162 */ ,172, 72
  /* 163 */ ,172, 71,102,155,103
  /* 164 */ ,172, 72,102,155,103
  /* 165 */ ,172, 78
  /* 166 */ ,172, 76
  /* 167 */ ,172, 77
  /* 168 */ , 75
  /* 169 */ , 74
  /* 170 */ , 79
  /* 171 */ , 80
  /* 172 */ , 81
  /* 173 */ , 73,102,155,103
  /* 175 */ , 61
  /* 176 */ , 67
  /* 178 */ ,101, 52
  /* 180 */ , 24,173
  /* 181 */ ,161
  /* 182 */ ,155
  /* 183 */ , 95,155
  /* 184 */ , 96,155
  /* 185 */ ,156
  /* 186 */ ,157
  /* 187 */ ,158
  /* 188 */ , 28, 65,117
  /* 189 */ , 28, 38,117
  /* 190 */ , 31,107
  /* 191 */ ,105
  /* 192 */ ,  7
  /* 193 */ ,  6
  /* 194 */ ,  2
  /* 195 */ ,  1
  /* 196 */ ,  3
  /* 197 */ ,  4
  /* 198 */ ,  5
}; // Size of table:472(x86)/472(x64) bytes.

/**********************************************************************************\
* symbolNames is a space separated string with the names of all symbols used in    *
* grammar, terminals and nonTerminals. Only used for debugging.                    *
\**********************************************************************************/
static const char *symbolNames = {
  "EOI"                                               /* T     0               */
  " STRING"                                           /* T     1               */
  " NUMBER"                                           /* T     2               */
  " DATECONST"                                        /* T     3               */
  " TIMECONST"                                        /* T     4               */
  " TIMESTAMPCONST"                                   /* T     5               */
  " PARAM"                                            /* T     6               */
  " HOSTVAR"                                          /* T     7               */
  " ACCESSS"                                          /* T     8               */
  " ALL"                                              /* T     9               */
  " AS"                                               /* T    10               */
  " ASCENDING"                                        /* T    11               */
  " BETWEEN"                                          /* T    12               */
  " BROWSE"                                           /* T    13               */
  " BY"                                               /* T    14               */
  " CAST"                                             /* T    15               */
  " COLUMN"                                           /* T    16               */
  " COUNT"                                            /* T    17               */
  " CREATE"                                           /* T    18               */
  " CURRENTDATE"                                      /* T    19               */
  " CURRENTTIME"                                      /* T    20               */
  " CURRENTTIMESTAMP"                                 /* T    21               */
  " CURSOR"                                           /* T    22               */
  " DECLARE"                                          /* T    23               */
  " DEFAULT"                                          /* T    24               */
  " DELETESYM"                                        /* T    25               */
  " DESCENDING"                                       /* T    26               */
  " DISTINCT"                                         /* T    27               */
  " DROP"                                             /* T    28               */
  " EXCLUSIVE"                                        /* T    29               */
  " EXISTS"                                           /* T    30               */
  " EXPLAIN"                                          /* T    31               */
  " FETCH"                                            /* T    32               */
  " FOR"                                              /* T    33               */
  " FROM"                                             /* T    34               */
  " GROUP"                                            /* T    35               */
  " HAVING"                                           /* T    36               */
  " INSYM"                                            /* T    37               */
  " INDEX"                                            /* T    38               */
  " INSERT"                                           /* T    39               */
  " INDICATOR"                                        /* T    40               */
  " INNER"                                            /* T    41               */
  " INTO"                                             /* T    42               */
  " IS"                                               /* T    43               */
  " JOIN"                                             /* T    44               */
  " KEY"                                              /* T    45               */
  " LEFT"                                             /* T    46               */
  " LIKE"                                             /* T    47               */
  " MAX"                                              /* T    48               */
  " MIN"                                              /* T    49               */
  " MODE"                                             /* T    50               */
  " MULT"                                             /* T    51               */
  " NULLVAL"                                          /* T    52               */
  " ISNULL"                                           /* T    53               */
  " ON"                                               /* T    54               */
  " ORDER"                                            /* T    55               */
  " PRIMARY"                                          /* T    56               */
  " REPEATABLE"                                       /* T    57               */
  " SELECT"                                           /* T    58               */
  " SET"                                              /* T    59               */
  " SHARE"                                            /* T    60               */
  " SIGNED"                                           /* T    61               */
  " STABLE"                                           /* T    62               */
  " SUBSTRING"                                        /* T    63               */
  " SUM"                                              /* T    64               */
  " TABLE"                                            /* T    65               */
  " UNIQUE"                                           /* T    66               */
  " UNSIGNED"                                         /* T    67               */
  " UPDATE"                                           /* T    68               */
  " VALUES"                                           /* T    69               */
  " WHERE"                                            /* T    70               */
  " TYPECHAR"                                         /* T    71               */
  " TYPEWCHAR"                                        /* T    72               */
  " TYPEVARCHAR"                                      /* T    73               */
  " TYPEDOUBLE"                                       /* T    74               */
  " TYPEFLOAT"                                        /* T    75               */
  " TYPEINT"                                          /* T    76               */
  " TYPELONG"                                         /* T    77               */
  " TYPESHORT"                                        /* T    78               */
  " TYPEDATE"                                         /* T    79               */
  " TYPETIME"                                         /* T    80               */
  " TYPETIMESTAMP"                                    /* T    81               */
  " UNION"                                            /* T    82               */
  " SETDIFFERENCE"                                    /* T    83               */
  " INTERSECT"                                        /* T    84               */
  " COMMA"                                            /* T    85               */
  " DOT"                                              /* T    86               */
  " EQUAL"                                            /* T    87               */
  " NOTEQ"                                            /* T    88               */
  " RELOPLE"                                          /* T    89               */
  " RELOPLT"                                          /* T    90               */
  " RELOPGE"                                          /* T    91               */
  " RELOPGT"                                          /* T    92               */
  " OR"                                               /* T    93               */
  " AND"                                              /* T    94               */
  " PLUS"                                             /* T    95               */
  " MINUS"                                            /* T    96               */
  " STAR"                                             /* T    97               */
  " DIVOP"                                            /* T    98               */
  " MODOP"                                            /* T    99               */
  " EXPO"                                             /* T   100               */
  " NOT"                                              /* T   101               */
  " LPAR"                                             /* T   102               */
  " RPAR"                                             /* T   103               */
  " CONCAT"                                           /* T   104               */
  " NAME"                                             /* T   105               */
  " start"                                            /* NT  106 NTindex=0     */
  " stmt"                                             /* NT  107 NTindex=1     */
  " update_stmt"                                      /* NT  108 NTindex=2     */
  " insert_stmt"                                      /* NT  109 NTindex=3     */
  " delete_stmt"                                      /* NT  110 NTindex=4     */
  " select_stmt"                                      /* NT  111 NTindex=5     */
  " declare_stmt"                                     /* NT  112 NTindex=6     */
  " fetch_stmt"                                       /* NT  113 NTindex=7     */
  " create_stmt"                                      /* NT  114 NTindex=8     */
  " drop_stmt"                                        /* NT  115 NTindex=9     */
  " explain_stmt"                                     /* NT  116 NTindex=10    */
  " name"                                             /* NT  117 NTindex=11    */
  " assign_list"                                      /* NT  118 NTindex=12    */
  " opt_where"                                        /* NT  119 NTindex=13    */
  " assign"                                           /* NT  120 NTindex=14    */
  " expr"                                             /* NT  121 NTindex=15    */
  " name_list"                                        /* NT  122 NTindex=16    */
  " opt_expr_list"                                    /* NT  123 NTindex=17    */
  " opt_access"                                       /* NT  124 NTindex=18    */
  " expr_list"                                        /* NT  125 NTindex=19    */
  " opt_all"                                          /* NT  126 NTindex=20    */
  " simple_select"                                    /* NT  127 NTindex=21    */
  " opt_alldistinct"                                  /* NT  128 NTindex=22    */
  " select_list"                                      /* NT  129 NTindex=23    */
  " opt_into"                                         /* NT  130 NTindex=24    */
  " from_table_list"                                  /* NT  131 NTindex=25    */
  " opt_groupby"                                      /* NT  132 NTindex=26    */
  " opt_having"                                       /* NT  133 NTindex=27    */
  " opt_orderby"                                      /* NT  134 NTindex=28    */
  " opt_lockmode"                                     /* NT  135 NTindex=29    */
  " select_elem"                                      /* NT  136 NTindex=30    */
  " hostvar_list"                                     /* NT  137 NTindex=31    */
  " hostindi_var"                                     /* NT  138 NTindex=32    */
  " hostvar"                                          /* NT  139 NTindex=33    */
  " opt_indicator"                                    /* NT  140 NTindex=34    */
  " from_table"                                       /* NT  141 NTindex=35    */
  " opt_join_type"                                    /* NT  142 NTindex=36    */
  " search_condition"                                 /* NT  143 NTindex=37    */
  " order_elem_list"                                  /* NT  144 NTindex=38    */
  " order_elem"                                       /* NT  145 NTindex=39    */
  " opt_ascdesc"                                      /* NT  146 NTindex=40    */
  " access_mode"                                      /* NT  147 NTindex=41    */
  " lockmode"                                         /* NT  148 NTindex=42    */
  " boolean_primary"                                  /* NT  149 NTindex=43    */
  " predicate"                                        /* NT  150 NTindex=44    */
  " par_expr_list"                                    /* NT  151 NTindex=45    */
  " rel_op"                                           /* NT  152 NTindex=46    */
  " set_expr"                                         /* NT  153 NTindex=47    */
  " unary"                                            /* NT  154 NTindex=48    */
  " number_const"                                     /* NT  155 NTindex=49    */
  " date_const"                                       /* NT  156 NTindex=50    */
  " time_const"                                       /* NT  157 NTindex=51    */
  " timestamp_const"                                  /* NT  158 NTindex=52    */
  " tab_col"                                          /* NT  159 NTindex=53    */
  " param"                                            /* NT  160 NTindex=54    */
  " string_const"                                     /* NT  161 NTindex=55    */
  " type_def"                                         /* NT  162 NTindex=56    */
  " count_arg"                                        /* NT  163 NTindex=57    */
  " min_max_sum"                                      /* NT  164 NTindex=58    */
  " col_def_list"                                     /* NT  165 NTindex=59    */
  " keyfield_list"                                    /* NT  166 NTindex=60    */
  " opt_unique"                                       /* NT  167 NTindex=61    */
  " keyfield"                                         /* NT  168 NTindex=62    */
  " col_def"                                          /* NT  169 NTindex=63    */
  " opt_not_null"                                     /* NT  170 NTindex=64    */
  " opt_defaultvalue"                                 /* NT  171 NTindex=65    */
  " opt_sign"                                         /* NT  172 NTindex=66    */
  " constant"                                         /* NT  173 NTindex=67    */
}; // Size of string:1.520(x86)/1.520(x64) bytes

static const ParserTablesTemplate<106,174,199,404
                                 ,unsigned char
                                 ,unsigned char
                                 ,unsigned char
                                 ,short
                                 ,unsigned short> SqlTables_s(actionCode      , termListTable     , actionListTable, termSetTable
                                                             ,successorCode   , NTindexListTable  , stateListTable
                                                             ,productionLength, leftSideTable
                                                             ,rightSideTable  , symbolNames
                                                             ,10288, 10368);

const ParserTables *SqlParser::SqlTables = &SqlTables_s;
// Size of SqlTables_s: 68(x86)/128(x64) bytes. Size of SqlTables:4(x86)/8(x64) bytes

// Total size of table data:10.288(x86)/10.368(x64) bytes.
