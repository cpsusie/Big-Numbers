/* DO NOT EDIT THIS FILE - it is machine generated */

#line 102 "C:\\Mytools2015\\ParserGen\\cpp\\Cpp.y"
#include "stdafx.h"
#include "CppParser.h"

#line 44 "C:\\mytools2015\\ParserGen\\lib\\parsergencpp.par"

#pragma warning(disable : 4312)



/**********************************************************************************\
* The 4 arrays actionCode, termListTable, actionstateListTable, compressedLAsets   *
* holds a compressed action-matrix, used by LRParser to find                       *
* action = getAction(S,T), where S is current state, T is next terminal on input   *
*                                                                                  *
* The interpretation of action is:                                                 *
*   action <  0 - Reduce by production p, p == -action.                            *
*   action == 0 - Accept. Reduce by production 0.                                  *
*   action >  0 - Shift to newstate (=action),                                     *
*                 ie. push(newstate), set current state=newstate                   *
*                 and advance input 1 symbol.                                      *
*   action == _ParserError - Unexpected input. Do some recovery, to try to         *
*                 synchronize input and stack, in order to continue parse.         *
*                 (See LRParser::recover() in LRParser.cpp)                        *
*                                                                                  *
* For each state S, a #define is generated and used as element S in array          *
* actionCode. Each define looks as:                                                *
*                                                                                  *
* #define _acDDDD Code                                                             *
*                                                                                  *
* where DDDD is the statenumber S and Code is an unsigned int with the following   *
* format:                                                                          *
*                   0         1         2         3                                *
* Bit index:        01234567890123456789012345678901                               *
* Code     :        tttttttttttttttIFaaaaaaaaaaaaaaa                               *
*                                                                                  *
* t          : Bit[ 0-14]: unsigned short                                          *
* a          : Bit[17-31]: signed short                                            *
* F          : Bit 16    : Indicates how to interpret t and a.                     *
* I          : Bit 15    : In case F==1, indicates how to interpret t.             *
*                                                                                  *
* F == 0: Uncompressed Format.                                                     *
*      t: Index into array termListTable, pointing at the first element of         *
*         termList (see below).                                                    *
*      a: Index into array actionListTable, pointing at the first element of       *
*         actionList (see below).                                                  *
* F == 1: Compressed Format, used if there is only 1 possible action, a.           *
*         I==0: There is only 1 legal terminal in the state.                       *
*            t: Legal terminal.                                                    *
*            a: Action.                                                            *
*                                                                                  *
*         I==1: All actions in the state are reduce by the same production P = -a. *
*            t: Index into compressedLAsets, pointing at the first element of      *
*               LASet (see below).                                                 *
*            a: Action.                                                            *
*                                                                                  *
* F == 0: Use arrays termListTable and actionListTable to find action.             *
*      n                 : termListTable[t] = number of elements in termList.      *
*      termList[0..n-1]  : termListTable[t+1..t+n]                                 *
*                          Ordered list of legal terminals                         *
*      actionList[0..n-1]: actionListTable[a..a+n-1] (same length as termList).    *
*                                                                                  *
*      To get action, find index k in termList, so termList[k] == T                *
*      and set action = actionList[k]. If T is not found, set action = _ParseError.*
*      Note that both termList and actionList may be shared by several states.     *
*                                                                                  *
* F == 1 and I==1: Use array compressedLAsets which is a list of bitsets, each     *
*                  with terminalCount bits, a lookaheadset LAset with 1-bits       *
*                  for legal terminals, and 0-bits for illegal terminals.          *
*                                                                                  *
*      b                 : Number of bytes in each LAset = (terminalCount-1)/8+1   *
*      LAset[0..b-1]     : compressedLAsets[t..t+b-1]                              *
*                                                                                  *
*      As for uncompressed states, the same check for existence is done.           *
*      If terminal T is not present in LAset, set action = _ParseError.            *
*      Note that each LAset may be shared by several states.                       *
\**********************************************************************************/
#define _ac0000 0xffff8000 /* Reduce by 1 on tokens in LAset[0]       */
#define _ac0001 0x00000000 /* termList   0, actionList   0            */
#define _ac0002 0xfffd8000 /* Reduce by 2 on tokens in LAset[0]       */
#define _ac0003 0x0014000b /* termList   1, actionList   1            */
#define _ac0004 0x001c0010 /* termList   2, actionList   2            */
#define _ac0005 0xfff1800a /* Reduce by 8 on tokens in LAset[1]       */
#define _ac0006 0x002e001a /* termList   3, actionList   3            */
#define _ac0007 0xffed8014 /* Reduce by 10 on tokens in LAset[2]      */
#define _ac0008 0xffe98014 /* Reduce by 12 on tokens in LAset[2]      */
#define _ac0009 0xffe5801e /* Reduce by 14 on tokens in LAset[3]      */
#define _ac0010 0xffe3801e /* Reduce by 15 on tokens in LAset[3]      */
#define _ac0011 0xffe1801e /* Reduce by 16 on tokens in LAset[3]      */
#define _ac0012 0x003e0023 /* termList   4, actionList   4            */
#define _ac0013 0x00420023 /* termList   4, actionList   5            */
#define _ac0014 0xff6d8028 /* Reduce by 74 on tokens in LAset[4]      */
#define _ac0015 0x00460026 /* termList   5, actionList   6            */
#define _ac0016 0xfff98000 /* Reduce by 4 on tokens in LAset[0]       */
#define _ac0017 0x004a0029 /* termList   6, actionList   7            */
#define _ac0018 0xffdf8032 /* Reduce by 17 on tokens in LAset[5]      */
#define _ac0019 0x0054002f /* termList   7, actionList   8            */
#define _ac0020 0x005e0035 /* termList   8, actionList   9            */
#define _ac0021 0x006c003d /* termList   9, actionList  10            */
#define _ac0022 0x006c003d /* termList   9, actionList   9            */
#define _ac0023 0xfeb9803c /* Reduce by 164 on tokens in LAset[6]     */
#define _ac0024 0xfff3800a /* Reduce by 7 on tokens in LAset[1]       */
#define _ac0025 0xffeb8014 /* Reduce by 11 on tokens in LAset[2]      */
#define _ac0026 0xffe78014 /* Reduce by 13 on tokens in LAset[2]      */
#define _ac0027 0x005d0026 /* Shift  to 46 on LC                      */
#define _ac0028 0x00720041 /* termList  10, actionList  11            */
#define _ac0029 0xff8d8046 /* Reduce by 58 on tokens in LAset[7]      */
#define _ac0030 0x008c0041 /* termList  10, actionList  12            */
#define _ac0031 0x002f0048 /* Shift  to 23 on NAME                    */
#define _ac0032 0xfffb8000 /* Reduce by 3 on tokens in LAset[0]       */
#define _ac0033 0x006c003d /* termList   9, actionList   9            */
#define _ac0034 0xfff78000 /* Reduce by 5 on tokens in LAset[0]       */
#define _ac0035 0x00a6004f /* termList  11, actionList  13            */
#define _ac0036 0x00990041 /* Shift  to 76 on RPAR                    */
#define _ac0037 0xff618050 /* Reduce by 80 on tokens in LAset[8]      */
#define _ac0038 0x00be005c /* termList  12, actionList  14            */
#define _ac0039 0x00d60069 /* termList  13, actionList  15            */
#define _ac0040 0x00e2004f /* termList  11, actionList  16            */
#define _ac0041 0x00fa0070 /* termList  14, actionList  17            */
#define _ac0042 0x01080035 /* termList   8, actionList  18            */
#define _ac0043 0x01160078 /* termList  15, actionList  19            */
#define _ac0044 0x0122007f /* termList  16, actionList  20            */
#define _ac0045 0x0128007f /* termList  16, actionList  21            */
#define _ac0046 0xff8b805a /* Reduce by 59 on tokens in LAset[9]      */
#define _ac0047 0xff75801e /* Reduce by 70 on tokens in LAset[3]      */
#define _ac0048 0x002f0048 /* Shift  to 23 on NAME                    */
#define _ac0049 0x012e0083 /* termList  17, actionList  22            */
#define _ac0050 0xff6b8064 /* Reduce by 75 on tokens in LAset[10]     */
#define _ac0051 0x01320086 /* termList  18, actionList  23            */
#define _ac0052 0xffdd8032 /* Reduce by 18 on tokens in LAset[5]      */
#define _ac0053 0x0138008a /* termList  19, actionList  24            */
#define _ac0054 0xffc5806e /* Reduce by 30 on tokens in LAset[11]     */
#define _ac0055 0x00cd003f /* Shift  to 102 on RB                     */
#define _ac0056 0x0140008f /* termList  20, actionList  25            */
#define _ac0057 0xff218078 /* Reduce by 112 on tokens in LAset[12]    */
#define _ac0058 0xff1f8078 /* Reduce by 113 on tokens in LAset[12]    */
#define _ac0059 0xff1d8078 /* Reduce by 114 on tokens in LAset[12]    */
#define _ac0060 0x015e009f /* termList  21, actionList  26            */
#define _ac0061 0x00d70040 /* Shift  to 107 on LPAR                   */
#define _ac0062 0x019200ba /* termList  22, actionList  27            */
#define _ac0063 0x019200ba /* termList  22, actionList  22            */
#define _ac0064 0x01a800c6 /* termList  23, actionList  28            */
#define _ac0065 0x019200ba /* termList  22, actionList  22            */
#define _ac0066 0x019200ba /* termList  22, actionList  22            */
#define _ac0067 0x019200ba /* termList  22, actionList  22            */
#define _ac0068 0xfec78082 /* Reduce by 157 on tokens in LAset[13]    */
#define _ac0069 0x01da00e0 /* termList  24, actionList  29            */
#define _ac0070 0xfeef808c /* Reduce by 137 on tokens in LAset[14]    */
#define _ac0071 0x01ec00ea /* termList  25, actionList  30            */
#define _ac0072 0xfee98096 /* Reduce by 140 on tokens in LAset[15]    */
#define _ac0073 0x020000f5 /* termList  26, actionList  31            */
#define _ac0074 0x02160101 /* termList  27, actionList  32            */
#define _ac0075 0xfebd80a0 /* Reduce by 162 on tokens in LAset[16]    */
#define _ac0076 0xffbf806e /* Reduce by 33 on tokens in LAset[11]     */
#define _ac0077 0x02400117 /* termList  28, actionList  33            */
#define _ac0078 0xffd98032 /* Reduce by 20 on tokens in LAset[5]      */
#define _ac0079 0xfec580aa /* Reduce by 158 on tokens in LAset[17]    */
#define _ac0080 0x00be005c /* termList  12, actionList  12            */
#define _ac0081 0xffd380b4 /* Reduce by 23 on tokens in LAset[18]     */
#define _ac0082 0x027e0137 /* termList  29, actionList  34            */
#define _ac0083 0xffb380be /* Reduce by 39 on tokens in LAset[19]     */
#define _ac0084 0x0282013a /* termList  30, actionList  35            */
#define _ac0085 0xffad80be /* Reduce by 42 on tokens in LAset[19]     */
#define _ac0086 0xffab80be /* Reduce by 43 on tokens in LAset[19]     */
#define _ac0087 0xffa980c8 /* Reduce by 44 on tokens in LAset[20]     */
#define _ac0088 0x02940144 /* termList  31, actionList  36            */
#define _ac0089 0xffcf80b4 /* Reduce by 25 on tokens in LAset[18]     */
#define _ac0090 0x0151003f /* Shift  to 168 on RB                     */
#define _ac0091 0xffbd806e /* Reduce by 34 on tokens in LAset[11]     */
#define _ac0092 0x029e0137 /* termList  29, actionList  37            */
#define _ac0093 0x02a20137 /* termList  29, actionList  38            */
#define _ac0094 0xffb780be /* Reduce by 37 on tokens in LAset[19]     */
#define _ac0095 0xffc980b4 /* Reduce by 28 on tokens in LAset[18]     */
#define _ac0096 0xffc1806e /* Reduce by 32 on tokens in LAset[11]     */
#define _ac0097 0x02a6014a /* termList  32, actionList  39            */
#define _ac0098 0x02b00083 /* termList  17, actionList  40            */
#define _ac0099 0xff73801e /* Reduce by 71 on tokens in LAset[3]      */
#define _ac0100 0x002f0048 /* Shift  to 23 on NAME                    */
#define _ac0101 0x019200ba /* termList  22, actionList  22            */
#define _ac0102 0xffc3806e /* Reduce by 31 on tokens in LAset[11]     */
#define _ac0103 0x02b40137 /* termList  29, actionList  41            */
#define _ac0104 0x01650041 /* Shift  to 178 on RPAR                   */
#define _ac0105 0x02b80150 /* termList  33, actionList  42            */
#define _ac0106 0xfebb80a0 /* Reduce by 163 on tokens in LAset[16]    */
#define _ac0107 0x0140008f /* termList  20, actionList  20            */
#define _ac0108 0x02c600c6 /* termList  23, actionList  43            */
#define _ac0109 0x02f800c6 /* termList  23, actionList  44            */
#define _ac0110 0xff0d8078 /* Reduce by 122 on tokens in LAset[12]    */
#define _ac0111 0x019200ba /* termList  22, actionList  22            */
#define _ac0112 0x016f0048 /* Shift  to 183 on NAME                   */
#define _ac0113 0x032a0158 /* termList  34, actionList  45            */
#define _ac0114 0x034200c6 /* termList  23, actionList  46            */
#define _ac0115 0x037400c6 /* termList  23, actionList  47            */
#define _ac0116 0x03a600c6 /* termList  23, actionList  48            */
#define _ac0117 0x019200ba /* termList  22, actionList  22            */
#define _ac0118 0x019200ba /* termList  22, actionList  22            */
#define _ac0119 0x019200ba /* termList  22, actionList  22            */
#define _ac0120 0x019200ba /* termList  22, actionList  22            */
#define _ac0121 0x019200ba /* termList  22, actionList  22            */
#define _ac0122 0x019200ba /* termList  22, actionList  22            */
#define _ac0123 0x019200ba /* termList  22, actionList  22            */
#define _ac0124 0x019200ba /* termList  22, actionList  22            */
#define _ac0125 0x019200ba /* termList  22, actionList  22            */
#define _ac0126 0x019200ba /* termList  22, actionList  22            */
#define _ac0127 0x019200ba /* termList  22, actionList  22            */
#define _ac0128 0x019200ba /* termList  22, actionList  22            */
#define _ac0129 0x019200ba /* termList  22, actionList  22            */
#define _ac0130 0x019200ba /* termList  22, actionList  22            */
#define _ac0131 0x019200ba /* termList  22, actionList  22            */
#define _ac0132 0x019200ba /* termList  22, actionList  22            */
#define _ac0133 0xff6380d2 /* Reduce by 79 on tokens in LAset[21]     */
#define _ac0134 0xff5f8050 /* Reduce by 81 on tokens in LAset[8]      */
#define _ac0135 0xff5d8050 /* Reduce by 82 on tokens in LAset[8]      */
#define _ac0136 0x03d80165 /* termList  35, actionList  49            */
#define _ac0137 0xff5b80dc /* Reduce by 83 on tokens in LAset[22]     */
#define _ac0138 0xff5980dc /* Reduce by 84 on tokens in LAset[22]     */
#define _ac0139 0x03ea0026 /* termList   5, actionList  50            */
#define _ac0140 0x03ee016f /* termList  36, actionList  51            */
#define _ac0141 0x01ab0048 /* Shift  to 213 on NAME                   */
#define _ac0142 0x01ad002e /* Shift  to 214 on COLON                  */
#define _ac0143 0x01af0040 /* Shift  to 215 on LPAR                   */
#define _ac0144 0x01b10040 /* Shift  to 216 on LPAR                   */
#define _ac0145 0x0406017c /* termList  37, actionList  52            */
#define _ac0146 0x01b50040 /* Shift  to 218 on LPAR                   */
#define _ac0147 0x01b70028 /* Shift  to 219 on SEMI                   */
#define _ac0148 0x01b90028 /* Shift  to 220 on SEMI                   */
#define _ac0149 0x01bb0040 /* Shift  to 221 on LPAR                   */
#define _ac0150 0x019200ba /* termList  22, actionList  22            */
#define _ac0151 0x01bf002e /* Shift  to 223 on COLON                  */
#define _ac0152 0x019200ba /* termList  22, actionList  22            */
#define _ac0153 0x004b0026 /* Shift  to 37 on LC                      */
#define _ac0154 0x043a0197 /* termList  38, actionList  53            */
#define _ac0155 0x04660083 /* termList  17, actionList  54            */
#define _ac0156 0xfec18064 /* Reduce by 160 on tokens in LAset[10]    */
#define _ac0157 0xffd180b4 /* Reduce by 24 on tokens in LAset[18]     */
#define _ac0158 0x046a01ae /* termList  39, actionList  55            */
#define _ac0159 0x047401b4 /* termList  40, actionList  56            */
#define _ac0160 0xffa780c8 /* Reduce by 45 on tokens in LAset[20]     */
#define _ac0161 0x047c01b9 /* termList  41, actionList  57            */
#define _ac0162 0xffd580e6 /* Reduce by 22 on tokens in LAset[23]     */
#define _ac0163 0x048201bd /* termList  42, actionList  58            */
#define _ac0164 0x048e01c4 /* termList  43, actionList  59            */
#define _ac0165 0x049801b9 /* termList  41, actionList  60            */
#define _ac0166 0x049e01ca /* termList  44, actionList  61            */
#define _ac0167 0x02940144 /* termList  31, actionList  31            */
#define _ac0168 0xffcd80b4 /* Reduce by 26 on tokens in LAset[18]     */
#define _ac0169 0xffbb806e /* Reduce by 35 on tokens in LAset[11]     */
#define _ac0170 0x002f0048 /* Shift  to 23 on NAME                    */
#define _ac0171 0xffb9806e /* Reduce by 36 on tokens in LAset[11]     */
#define _ac0172 0xff95801e /* Reduce by 54 on tokens in LAset[3]      */
#define _ac0173 0xff89805a /* Reduce by 60 on tokens in LAset[9]      */
#define _ac0174 0xff6f801e /* Reduce by 73 on tokens in LAset[3]      */
#define _ac0175 0xff698064 /* Reduce by 76 on tokens in LAset[10]     */
#define _ac0176 0xff658064 /* Reduce by 78 on tokens in LAset[10]     */
#define _ac0177 0xff238078 /* Reduce by 111 on tokens in LAset[12]    */
#define _ac0178 0x019200ba /* termList  22, actionList  22            */
#define _ac0179 0x04a601cf /* termList  45, actionList  62            */
#define _ac0180 0x04d20137 /* termList  29, actionList  63            */
#define _ac0181 0x01d90041 /* Shift  to 236 on RPAR                   */
#define _ac0182 0x04d601e6 /* termList  46, actionList  64            */
#define _ac0183 0xff038078 /* Reduce by 127 on tokens in LAset[12]    */
#define _ac0184 0x01dd0041 /* Shift  to 238 on RPAR                   */
#define _ac0185 0xfeff8078 /* Reduce by 129 on tokens in LAset[12]    */
#define _ac0186 0x04da01e9 /* termList  47, actionList  65            */
#define _ac0187 0x04e400e0 /* termList  24, actionList  66            */
#define _ac0188 0x04f601ef /* termList  48, actionList  67            */
#define _ac0189 0x04fe00e0 /* termList  24, actionList  68            */
#define _ac0190 0x051000e0 /* termList  24, actionList  69            */
#define _ac0191 0xfeeb8096 /* Reduce by 139 on tokens in LAset[15]    */
#define _ac0192 0x05220101 /* termList  27, actionList  70            */
#define _ac0193 0x054c0101 /* termList  27, actionList  71            */
#define _ac0194 0x05760101 /* termList  27, actionList  72            */
#define _ac0195 0xfedd80f0 /* Reduce by 146 on tokens in LAset[24]    */
#define _ac0196 0xfedb80f0 /* Reduce by 147 on tokens in LAset[24]    */
#define _ac0197 0x05a00101 /* termList  27, actionList  73            */
#define _ac0198 0x05ca0101 /* termList  27, actionList  74            */
#define _ac0199 0x05f40101 /* termList  27, actionList  75            */
#define _ac0200 0x061e0101 /* termList  27, actionList  76            */
#define _ac0201 0x06480101 /* termList  27, actionList  77            */
#define _ac0202 0x06720101 /* termList  27, actionList  78            */
#define _ac0203 0x069c0026 /* termList   5, actionList  79            */
#define _ac0204 0xff858050 /* Reduce by 62 on tokens in LAset[8]      */
#define _ac0205 0x06a001f4 /* termList  49, actionList  80            */
#define _ac0206 0x06ac008a /* termList  19, actionList  81            */
#define _ac0207 0xff838032 /* Reduce by 63 on tokens in LAset[5]      */
#define _ac0208 0x019200ba /* termList  22, actionList  22            */
#define _ac0209 0xff5780dc /* Reduce by 85 on tokens in LAset[22]     */
#define _ac0210 0xff5580dc /* Reduce by 86 on tokens in LAset[22]     */
#define _ac0211 0x06b40026 /* termList   5, actionList  82            */
#define _ac0212 0x01ef0028 /* Shift  to 247 on SEMI                   */
#define _ac0213 0xff290028 /* Reduce by 108 on SEMI                   */
#define _ac0214 0x0406017c /* termList  37, actionList  37            */
#define _ac0215 0x06b80158 /* termList  34, actionList  83            */
#define _ac0216 0x06b80158 /* termList  34, actionList  34            */
#define _ac0217 0x01f90020 /* Shift  to 252 on WHILE                  */
#define _ac0218 0x06d0016f /* termList  36, actionList  84            */
#define _ac0219 0xff4380dc /* Reduce by 95 on tokens in LAset[22]     */
#define _ac0220 0xff4180dc /* Reduce by 96 on tokens in LAset[22]     */
#define _ac0221 0x019200ba /* termList  22, actionList  22            */
#define _ac0222 0x0201002e /* Shift  to 256 on COLON                  */
#define _ac0223 0xff3b80dc /* Reduce by 99 on tokens in LAset[22]     */
#define _ac0224 0x06e80026 /* termList   5, actionList  85            */
#define _ac0225 0x02090024 /* Shift  to 260 on CATCH                  */
#define _ac0226 0xfec380aa /* Reduce by 159 on tokens in LAset[17]    */
#define _ac0227 0x00be005c /* termList  12, actionList  12            */
#define _ac0228 0xffb180be /* Reduce by 40 on tokens in LAset[19]     */
#define _ac0229 0x06ec004f /* termList  11, actionList  86            */
#define _ac0230 0x070401b9 /* termList  41, actionList  87            */
#define _ac0231 0x070a01fb /* termList  50, actionList  88            */
#define _ac0232 0xffb580be /* Reduce by 38 on tokens in LAset[19]     */
#define _ac0233 0x070e00c6 /* termList  23, actionList  89            */
#define _ac0234 0xff198078 /* Reduce by 116 on tokens in LAset[12]    */
#define _ac0235 0xff178078 /* Reduce by 117 on tokens in LAset[12]    */
#define _ac0236 0xff158078 /* Reduce by 118 on tokens in LAset[12]    */
#define _ac0237 0xff058078 /* Reduce by 126 on tokens in LAset[12]    */
#define _ac0238 0xff018078 /* Reduce by 128 on tokens in LAset[12]    */
#define _ac0239 0x019200ba /* termList  22, actionList  22            */
#define _ac0240 0x019200ba /* termList  22, actionList  22            */
#define _ac0241 0xff878050 /* Reduce by 61 on tokens in LAset[8]      */
#define _ac0242 0x074001fe /* termList  51, actionList  90            */
#define _ac0243 0x00be005c /* termList  12, actionList  12            */
#define _ac0244 0x019200ba /* termList  22, actionList  22            */
#define _ac0245 0xff778032 /* Reduce by 69 on tokens in LAset[5]      */
#define _ac0246 0xff5380dc /* Reduce by 87 on tokens in LAset[22]     */
#define _ac0247 0xff5180dc /* Reduce by 88 on tokens in LAset[22]     */
#define _ac0248 0xff4f80dc /* Reduce by 89 on tokens in LAset[22]     */
#define _ac0249 0x021d0041 /* Shift  to 270 on RPAR                   */
#define _ac0250 0x07480203 /* termList  52, actionList  91            */
#define _ac0251 0x021f0041 /* Shift  to 271 on RPAR                   */
#define _ac0252 0x02210040 /* Shift  to 272 on LPAR                   */
#define _ac0253 0x02230028 /* Shift  to 273 on SEMI                   */
#define _ac0254 0x074e0203 /* termList  52, actionList  92            */
#define _ac0255 0x07540137 /* termList  29, actionList  93            */
#define _ac0256 0xff3d80dc /* Reduce by 98 on tokens in LAset[22]     */
#define _ac0257 0xff3980dc /* Reduce by 100 on tokens in LAset[22]    */
#define _ac0258 0x07580207 /* termList  53, actionList  94            */
#define _ac0259 0xff3580fa /* Reduce by 102 on tokens in LAset[25]    */
#define _ac0260 0x02290040 /* Shift  to 276 on LPAR                   */
#define _ac0261 0xfebf8064 /* Reduce by 161 on tokens in LAset[10]    */
#define _ac0262 0xff9b8104 /* Reduce by 51 on tokens in LAset[26]     */
#define _ac0263 0x022b003f /* Shift  to 277 on RB                     */
#define _ac0264 0x079a01b4 /* termList  40, actionList  95            */
#define _ac0265 0xfefb0041 /* Reduce by 131 on RPAR                   */
#define _ac0266 0x07a200e0 /* termList  24, actionList  96            */
#define _ac0267 0xff818032 /* Reduce by 64 on tokens in LAset[5]      */
#define _ac0268 0xff7b8032 /* Reduce by 67 on tokens in LAset[5]      */
#define _ac0269 0xff798032 /* Reduce by 68 on tokens in LAset[5]      */
#define _ac0270 0x0406017c /* termList  37, actionList  37            */
#define _ac0271 0x0406017c /* termList  37, actionList  37            */
#define _ac0272 0x06b80158 /* termList  34, actionList  34            */
#define _ac0273 0x07b4016f /* termList  36, actionList  97            */
#define _ac0274 0x004b0026 /* Shift  to 37 on LC                      */
#define _ac0275 0xff3380fa /* Reduce by 103 on tokens in LAset[25]    */
#define _ac0276 0x07cc0229 /* termList  54, actionList  98            */
#define _ac0277 0xff998104 /* Reduce by 52 on tokens in LAset[26]     */
#define _ac0278 0x023f0041 /* Shift  to 287 on RPAR                   */
#define _ac0279 0x07d4022e /* termList  55, actionList  99            */
#define _ac0280 0xff4980dc /* Reduce by 92 on tokens in LAset[22]     */
#define _ac0281 0x02430041 /* Shift  to 289 on RPAR                   */
#define _ac0282 0x02450028 /* Shift  to 290 on SEMI                   */
#define _ac0283 0xff3f80dc /* Reduce by 97 on tokens in LAset[22]     */
#define _ac0284 0x02470041 /* Shift  to 291 on RPAR                   */
#define _ac0285 0x0814024f /* termList  56, actionList 100            */
#define _ac0286 0xff2f0041 /* Reduce by 105 on RPAR                   */
#define _ac0287 0xff9f8104 /* Reduce by 49 on tokens in LAset[26]     */
#define _ac0288 0x0406017c /* termList  37, actionList  37            */
#define _ac0289 0x02510028 /* Shift  to 296 on SEMI                   */
#define _ac0290 0x08220158 /* termList  34, actionList 101            */
#define _ac0291 0x004b0026 /* Shift  to 37 on LC                      */
#define _ac0292 0x083a007f /* termList  16, actionList 102            */
#define _ac0293 0x0840003d /* termList   9, actionList 103            */
#define _ac0294 0x0840003d /* termList   9, actionList   9            */
#define _ac0295 0xff4b80dc /* Reduce by 91 on tokens in LAset[22]     */
#define _ac0296 0xff4780dc /* Reduce by 93 on tokens in LAset[22]     */
#define _ac0297 0x02570041 /* Shift  to 299 on RPAR                   */
#define _ac0298 0xff3180fa /* Reduce by 104 on tokens in LAset[25]    */
#define _ac0299 0x0406017c /* termList  37, actionList  37            */
#define _ac0300 0xff4580dc /* Reduce by 94 on tokens in LAset[22]     */

static const unsigned int actionCode[301] = {
   _ac0000,_ac0001,_ac0002,_ac0003,_ac0004,_ac0005,_ac0006,_ac0007,_ac0008,_ac0009
  ,_ac0010,_ac0011,_ac0012,_ac0013,_ac0014,_ac0015,_ac0016,_ac0017,_ac0018,_ac0019
  ,_ac0020,_ac0021,_ac0022,_ac0023,_ac0024,_ac0025,_ac0026,_ac0027,_ac0028,_ac0029
  ,_ac0030,_ac0031,_ac0032,_ac0033,_ac0034,_ac0035,_ac0036,_ac0037,_ac0038,_ac0039
  ,_ac0040,_ac0041,_ac0042,_ac0043,_ac0044,_ac0045,_ac0046,_ac0047,_ac0048,_ac0049
  ,_ac0050,_ac0051,_ac0052,_ac0053,_ac0054,_ac0055,_ac0056,_ac0057,_ac0058,_ac0059
  ,_ac0060,_ac0061,_ac0062,_ac0063,_ac0064,_ac0065,_ac0066,_ac0067,_ac0068,_ac0069
  ,_ac0070,_ac0071,_ac0072,_ac0073,_ac0074,_ac0075,_ac0076,_ac0077,_ac0078,_ac0079
  ,_ac0080,_ac0081,_ac0082,_ac0083,_ac0084,_ac0085,_ac0086,_ac0087,_ac0088,_ac0089
  ,_ac0090,_ac0091,_ac0092,_ac0093,_ac0094,_ac0095,_ac0096,_ac0097,_ac0098,_ac0099
  ,_ac0100,_ac0101,_ac0102,_ac0103,_ac0104,_ac0105,_ac0106,_ac0107,_ac0108,_ac0109
  ,_ac0110,_ac0111,_ac0112,_ac0113,_ac0114,_ac0115,_ac0116,_ac0117,_ac0118,_ac0119
  ,_ac0120,_ac0121,_ac0122,_ac0123,_ac0124,_ac0125,_ac0126,_ac0127,_ac0128,_ac0129
  ,_ac0130,_ac0131,_ac0132,_ac0133,_ac0134,_ac0135,_ac0136,_ac0137,_ac0138,_ac0139
  ,_ac0140,_ac0141,_ac0142,_ac0143,_ac0144,_ac0145,_ac0146,_ac0147,_ac0148,_ac0149
  ,_ac0150,_ac0151,_ac0152,_ac0153,_ac0154,_ac0155,_ac0156,_ac0157,_ac0158,_ac0159
  ,_ac0160,_ac0161,_ac0162,_ac0163,_ac0164,_ac0165,_ac0166,_ac0167,_ac0168,_ac0169
  ,_ac0170,_ac0171,_ac0172,_ac0173,_ac0174,_ac0175,_ac0176,_ac0177,_ac0178,_ac0179
  ,_ac0180,_ac0181,_ac0182,_ac0183,_ac0184,_ac0185,_ac0186,_ac0187,_ac0188,_ac0189
  ,_ac0190,_ac0191,_ac0192,_ac0193,_ac0194,_ac0195,_ac0196,_ac0197,_ac0198,_ac0199
  ,_ac0200,_ac0201,_ac0202,_ac0203,_ac0204,_ac0205,_ac0206,_ac0207,_ac0208,_ac0209
  ,_ac0210,_ac0211,_ac0212,_ac0213,_ac0214,_ac0215,_ac0216,_ac0217,_ac0218,_ac0219
  ,_ac0220,_ac0221,_ac0222,_ac0223,_ac0224,_ac0225,_ac0226,_ac0227,_ac0228,_ac0229
  ,_ac0230,_ac0231,_ac0232,_ac0233,_ac0234,_ac0235,_ac0236,_ac0237,_ac0238,_ac0239
  ,_ac0240,_ac0241,_ac0242,_ac0243,_ac0244,_ac0245,_ac0246,_ac0247,_ac0248,_ac0249
  ,_ac0250,_ac0251,_ac0252,_ac0253,_ac0254,_ac0255,_ac0256,_ac0257,_ac0258,_ac0259
  ,_ac0260,_ac0261,_ac0262,_ac0263,_ac0264,_ac0265,_ac0266,_ac0267,_ac0268,_ac0269
  ,_ac0270,_ac0271,_ac0272,_ac0273,_ac0274,_ac0275,_ac0276,_ac0277,_ac0278,_ac0279
  ,_ac0280,_ac0281,_ac0282,_ac0283,_ac0284,_ac0285,_ac0286,_ac0287,_ac0288,_ac0289
  ,_ac0290,_ac0291,_ac0292,_ac0293,_ac0294,_ac0295,_ac0296,_ac0297,_ac0298,_ac0299
  ,_ac0300
}; // Size of table:1.204(x86)/1.208(x64) bytes.

static const unsigned char termListTable[599] = {
    10,   0,   4,   5,   6,  40,  57,  64,  70,  71,  72                                                     /*    0 Used by state  (1) */
  ,  4,  40,  57,  64,  72                                                                                   /*    1 Used by state  (3) */
  ,  9,   4,   5,   6,  40,  57,  64,  70,  71,  72                                                          /*    2 Used by state  (4) */
  ,  8,   4,   5,   6,  40,  57,  64,  71,  72                                                               /*    3 Used by state  (6) */
  ,  2,  38,  72                                                                                             /*    4 Used by states (12,13) */
  ,  2,  40,  42                                                                                             /*    5 Used by states (15,139,203,211,224) */
  ,  5,  38,  40,  42,  62,  64                                                                              /*    6 Used by state  (17) */
  ,  5,  40,  42,  43,  62,  64                                                                              /*    7 Used by state  (19) */
  ,  7,  40,  42,  43,  46,  62,  64,  65                                                                    /*    8 Used by states (20,42) */
  ,  3,  57,  64,  72                                                                                        /*    9 Used by states (21,22,33,293,294) */
  , 13,   4,   5,   6,  38,  40,  42,  46,  57,  62,  64,  65,  71,  72                                      /*   10 Used by states (28,30) */
  , 12,   1,   2,   3,  51,  56,  57,  59,  60,  61,  63,  64,  72                                           /*   11 Used by states (35,40,229) */
  , 12,   1,   2,   3,  38,  51,  56,  57,  59,  60,  61,  64,  72                                           /*   12 Used by states (38,80,227,243) */
  ,  6,   4,   5,   6,  41,  65,  70                                                                         /*   13 Used by state  (39) */
  ,  7,   4,   5,   6,  41,  65,  70,  72                                                                    /*   14 Used by state  (41) */
  ,  6,  38,  40,  42,  62,  64,  65                                                                         /*   15 Used by state  (43) */
  ,  3,  62,  64,  65                                                                                        /*   16 Used by states (44,45,292) */
  ,  2,  39,  42                                                                                             /*   17 Used by states (49,98,155) */
  ,  3,  39,  42,  43                                                                                        /*   18 Used by state  (51) */
  ,  4,  40,  42,  62,  64                                                                                   /*   19 Used by states (53,206) */
  , 15,   1,   2,   3,   4,   5,   6,  51,  56,  57,  59,  60,  61,  64,  70,  72                            /*   20 Used by states (56,107) */
  , 26,   1,  39,  40,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58   /*   21 Used by state  (60) */
      ,  61,  62,  63,  64,  65,  66
  , 11,   1,   2,   3,  51,  56,  57,  59,  60,  61,  64,  72                                                /*   22 Used by states (62,63,65,66,67,101,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,150,152,178,208,221,239,240,244) */
  , 25,  39,  40,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  61   /*   23 Used by states (64,108,109,114,115,116,233) */
      ,  62,  63,  64,  65,  66
  ,  9,  39,  40,  42,  43,  44,  45,  46,  63,  65                                                          /*   24 Used by states (69,187,189,190,266) */
  , 10,  39,  40,  42,  43,  44,  45,  46,  47,  63,  65                                                     /*   25 Used by state  (71) */
  , 11,  39,  40,  42,  43,  44,  45,  46,  47,  48,  63,  65                                                /*   26 Used by state  (73) */
  , 21,  39,  40,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  63   /*   27 Used by states (74,192,193,194,197,198,199,200,201,202) */
      ,  65
  , 31,   1,   2,   3,   4,   5,   6,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  37,  38   /*   28 Used by state  (77) */
      ,  39,  40,  51,  56,  57,  59,  60,  61,  64,  71,  72
  ,  2,  42,  65                                                                                             /*   29 Used by states (82,92,93,103,180,255) */
  ,  9,   4,   5,   6,  42,  57,  62,  64,  65,  72                                                          /*   30 Used by state  (84) */
  ,  5,  42,  57,  62,  64,  65                                                                              /*   31 Used by states (88,167) */
  ,  5,   4,   5,   6,  39,  71                                                                              /*   32 Used by state  (97) */
  ,  7,   4,   5,   6,  57,  62,  64,  65                                                                    /*   33 Used by state  (105) */
  , 12,   1,   2,   3,  51,  56,  57,  59,  60,  61,  64,  65,  72                                           /*   34 Used by states (113,215,216,272,290) */
  ,  9,   4,   5,   6,  40,  46,  57,  64,  71,  72                                                          /*   35 Used by state  (136) */
  , 12,   1,   2,   3,  40,  51,  56,  57,  59,  60,  61,  64,  72                                           /*   36 Used by states (140,218,273) */
  , 26,   1,   2,   3,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  37,  38,  40,  51,  56   /*   37 Used by states (145,214,270,271,288,299) */
      ,  57,  59,  60,  61,  64,  72
  , 22,  40,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  61,  62   /*   38 Used by state  (154) */
      ,  64,  66
  ,  5,   4,   5,   6,  41,  70                                                                              /*   39 Used by state  (158) */
  ,  4,  42,  62,  64,  65                                                                                   /*   40 Used by states (159,264) */
  ,  3,  42,  62,  65                                                                                        /*   41 Used by states (161,165,230) */
  ,  6,  42,  57,  62,  64,  65,  72                                                                         /*   42 Used by state  (163) */
  ,  5,  57,  62,  64,  65,  72                                                                              /*   43 Used by state  (164) */
  ,  4,  57,  62,  64,  65                                                                                   /*   44 Used by state  (166) */
  , 22,   1,  42,  43,  44,  45,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  61,  62,  64   /*   45 Used by state  (179) */
      ,  65,  66
  ,  2,  42,  63                                                                                             /*   46 Used by state  (182) */
  ,  5,  42,  43,  44,  45,  65                                                                              /*   47 Used by state  (186) */
  ,  4,  43,  44,  45,  46                                                                                   /*   48 Used by state  (188) */
  ,  6,  40,  42,  43,  46,  62,  64                                                                         /*   49 Used by state  (205) */
  ,  2,  62,  65                                                                                             /*   50 Used by state  (231) */
  ,  4,  46,  57,  64,  72                                                                                   /*   51 Used by state  (242) */
  ,  3,  40,  42,  65                                                                                        /*   52 Used by states (250,254) */
  , 33,   1,   2,   3,   4,   5,   6,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37   /*   53 Used by state  (258) */
      ,  38,  39,  40,  51,  56,  57,  59,  60,  61,  64,  71,  72,  73
  ,  4,   4,   5,   6,  41                                                                                   /*   54 Used by state  (276) */
  , 32,   1,   2,   3,   4,   5,   6,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  37,  38   /*   55 Used by state  (279) */
      ,  39,  40,  51,  56,  57,  59,  60,  61,  64,  71,  72,  73
  ,  7,   4,   5,   6,  57,  64,  65,  72                                                                    /*   56 Used by state  (285) */
}; // Size of table:600(x86)/600(x64) bytes.

static const short actionListTable[1059] = {
      0,   9,  12,  14,  -6,  -6,  -6,   5,   4,  -6                                                         /*   0 Used by state  (1) */
  ,  16,  21,  22,  23                                                                                       /*   1 Used by state  (3) */
  , -13, -13, -13, -13, -13, -13,  24, -13, -13                                                              /*   2 Used by state  (4) */
  ,   9,  12,  14,  -9,  -9,  -9,  26,  -9                                                                   /*   3 Used by state  (6) */
  , -56,  29                                                                                                 /*   4 Used by state  (12) */
  ,  31,  23                                                                                                 /*   5 Used by state  (13) */
  ,  32,  33                                                                                                 /*   6 Used by state  (15) */
  ,  37, -21, -21,  35,  36                                                                                  /*   7 Used by state  (17) */
  , -19, -19,  38,  40,  39                                                                                  /*   8 Used by state  (19) */
  , -22, -22, -22, -22, -22,  41, -22                                                                        /*   9 Used by state  (20) */
  ,  21,  22,  23                                                                                            /*  10 Used by states (21,22,33) */
  , -55, -55, -55, -57, -55, -55, -55, -55, -55, -55, -55, -55, -55                                          /*  11 Used by state  (28) */
  , -72, -72, -72,  48, -72, -72, -72, -72, -72, -72, -72, -72, -72                                          /*  12 Used by state  (30) */
  ,  75,  58,  57,  66,  62,  67,  61,  63,  65,  54,  56,  59                                               /*  13 Used by state  (35) */
  ,  75,  58,  57,  80,  66,  62,  67,  61,  63,  65,  56,  59                                               /*  14 Used by states (38,80,227,243) */
  ,   9,  12,  14,  86,  81,  88                                                                             /*  15 Used by state  (39) */
  ,  75,  58,  57,  66,  62,  67,  61,  63,  65,  89,  56,  59                                               /*  16 Used by state  (40) */
  ,   9,  12,  14,  86,  91,  88,  23                                                                        /*  17 Used by state  (41) */
  , -27, -27, -27, -27,  40,  39, -27                                                                        /*  18 Used by state  (42) */
  , -29, -29, -29,  35,  36, -29                                                                             /*  19 Used by state  (43) */
  ,  40,  39,  95                                                                                            /*  20 Used by state  (44) */
  ,  35,  36,  96                                                                                            /*  21 Used by state  (45) */
  ,  99, 100                                                                                                 /*  22 Used by state  (49) */
  , -77, -77, 101                                                                                            /*  23 Used by state  (51) */
  , -21, -21,  35,  36                                                                                       /*  24 Used by state  (53) */
  ,  75,  58,  57,   9,  12,  14,  66,  62,  67,  61,  63,  65,  56,  88,  59                                /*  25 Used by states (56,107) */
  , 106,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115       /*  26 Used by state  (60) */
  ,-115,-115,-115,-115,-115,-115
  ,  75,  58,  57,  66,  62,  67,  61,  63,  65,  56,  59                                                    /*  27 Used by states (62,63,65,66,67,101,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,150,152,178,208,221,239,240,244) */
  ,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154, 110       /*  28 Used by state  (64) */
  , 111,-154, 113,-154, 112
  ,-133,-133,-133, 120, 119, 118,-133,-133,-133                                                              /*  29 Used by state  (69) */
  ,-138,-138,-138,-138,-138,-138,-138, 121,-138,-138                                                         /*  30 Used by state  (71) */
  ,-141,-141,-141,-141,-141,-141,-141,-141, 122,-141,-141                                                    /*  31 Used by state  (73) */
  ,-143,-143,-143,-143,-143,-143,-143,-143,-143, 130, 129, 128, 124, 123, 127, 131, 132, 125, 126,-143       /*  32 Used by state  (74) */
  ,-143
  ,  75,  58,  57,   9,  12,  14, 140, 141, 143, 149, 150, 151, 147, 148, 144, 145, 146, 153, 152,  37       /*  33 Used by state  (77) */
  , 133, 137,  66,  62,  67,  61,  63,  65,  56,  26, 154
  , 158, 157                                                                                                 /*  34 Used by state  (82) */
  ,   9,  12,  14, -48, 163, -48, 164, -48,  23                                                              /*  35 Used by state  (84) */
  , -48, 167, -48, 166, -48                                                                                  /*  36 Used by states (88,167) */
  , 170, 169                                                                                                 /*  37 Used by state  (92) */
  , 158, 171                                                                                                 /*  38 Used by state  (93) */
  ,   9,  12,  14, 172,  26                                                                                  /*  39 Used by state  (97) */
  , 174, 100                                                                                                 /*  40 Used by state  (98) */
  , 117, 177                                                                                                 /*  41 Used by state  (103) */
  ,   9,  12,  14, 167, -48, 166, -48                                                                        /*  42 Used by state  (105) */
  ,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120, 110       /*  43 Used by state  (108) */
  , 111,-120, 113,-120, 112
  ,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121, 110       /*  44 Used by state  (109) */
  , 111,-121, 113,-121, 112
  ,  75,  58,  57,  66,  62,  67,  61,  63,  65,  56, 185,  59                                               /*  45 Used by state  (113) */
  ,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123, 110       /*  46 Used by state  (114) */
  , 111,-123, 113,-123, 112
  ,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124, 110       /*  47 Used by state  (115) */
  , 111,-124, 113,-124, 112
  ,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125, 110       /*  48 Used by state  (116) */
  , 111,-125, 113,-125, 112
  ,   9,  12,  14, 204, 208,  21,  22,  26,  23                                                              /*  49 Used by state  (136) */
  , 209, 117                                                                                                 /*  50 Used by state  (139) */
  ,  75,  58,  57, 210,  66,  62,  67,  61,  63,  65,  56,  59                                               /*  51 Used by state  (140) */
  ,  75,  58,  57, 140, 141, 143, 149, 150, 151, 147, 148, 144, 145, 146, 153, 152,  37, 137,  66,  62       /*  52 Used by states (145,214,270,271,288,299) */
  ,  67,  61,  63,  65,  56, 154
  ,-114,-114,-114,-114,-114,-108,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114       /*  53 Used by state  (154) */
  ,-114,-114
  , 226, 227                                                                                                 /*  54 Used by state  (155) */
  ,   9,  12,  14,  86,  88                                                                                  /*  55 Used by state  (158) */
  , -41,  40,  39, -41                                                                                       /*  56 Used by state  (159) */
  , -46, 229, -46                                                                                            /*  57 Used by state  (161) */
  , -48, 163, -48, 164, -48,  23                                                                             /*  58 Used by state  (163) */
  , 163, -48, 164, -48,  23                                                                                  /*  59 Used by state  (164) */
  , -47, 229, -47                                                                                            /*  60 Used by state  (165) */
  , 167, -48, 166, -48                                                                                       /*  61 Used by state  (166) */
  , 106,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115       /*  62 Used by state  (179) */
  , 234,-115
  , 117, 235                                                                                                 /*  63 Used by state  (180) */
  , 117, 237                                                                                                 /*  64 Used by state  (182) */
  , 239, 120, 119, 118,-130                                                                                  /*  65 Used by state  (186) */
  ,-132,-132,-132, 120, 119, 118,-132,-132,-132                                                              /*  66 Used by state  (187) */
  , 120, 119, 118, 240                                                                                       /*  67 Used by state  (188) */
  ,-135,-135,-135, 120, 119, 118,-135,-135,-135                                                              /*  68 Used by state  (189) */
  ,-136,-136,-136, 120, 119, 118,-136,-136,-136                                                              /*  69 Used by state  (190) */
  ,-142,-142,-142,-142,-142,-142,-142,-142,-142, 130, 129, 128, 124, 123, 127, 131, 132, 125, 126,-142       /*  70 Used by state  (192) */
  ,-142
  ,-144,-144,-144,-144,-144,-144,-144,-144,-144,-144,-144,-144,-144,-144, 127, 131, 132, 125, 126,-144       /*  71 Used by state  (193) */
  ,-144
  ,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145, 123, 127, 131, 132, 125, 126,-145       /*  72 Used by state  (194) */
  ,-145
  ,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148, 131, 132, 125, 126,-148       /*  73 Used by state  (197) */
  ,-148
  ,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149, 124, 123, 127, 131, 132, 125, 126,-149       /*  74 Used by state  (198) */
  ,-149
  ,-150,-150,-150,-150,-150,-150,-150,-150,-150,-150,-150, 128, 124, 123, 127, 131, 132, 125, 126,-150       /*  75 Used by state  (199) */
  ,-150
  ,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151, 129, 128, 124, 123, 127, 131, 132, 125, 126,-151       /*  76 Used by state  (200) */
  ,-151
  ,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152, 125, 126,-152       /*  77 Used by state  (201) */
  ,-152
  ,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153,-153, 125, 126,-153       /*  78 Used by state  (202) */
  ,-153
  , 241, 242                                                                                                 /*  79 Used by state  (203) */
  , -66, -66, 243, 244,  40,  39                                                                             /*  80 Used by state  (205) */
  , -65, -65,  35,  36                                                                                       /*  81 Used by state  (206) */
  , 246, 117                                                                                                 /*  82 Used by state  (211) */
  ,  75,  58,  57,  66,  62,  67,  61,  63,  65,  56,-109,  59                                               /*  83 Used by states (215,216,272) */
  ,  75,  58,  57,-155,  66,  62,  67,  61,  63,  65,  56,  59                                               /*  84 Used by state  (218) */
  , 257, 117                                                                                                 /*  85 Used by state  (224) */
  ,  75,  58,  57,  66,  62,  67,  61,  63,  65, 262,  56,  59                                               /*  86 Used by state  (229) */
  , -50, 229, -50                                                                                            /*  87 Used by state  (230) */
  , 229, 264                                                                                                 /*  88 Used by state  (231) */
  ,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119, 110       /*  89 Used by state  (233) */
  , 111,-119, 113,-119, 112
  , 208,  21,  22,  23                                                                                       /*  90 Used by state  (242) */
  ,-110, 117,-110                                                                                            /*  91 Used by state  (250) */
  ,-156, 117,-156                                                                                            /*  92 Used by state  (254) */
  , 117, 274                                                                                                 /*  93 Used by state  (255) */
  ,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101, 260,-101       /*  94 Used by state  (258) */
  ,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101
  , -53, -53, 278, -53                                                                                       /*  95 Used by state  (264) */
  ,-134,-134,-134,-134,-134, 118,-134,-134,-134                                                              /*  96 Used by state  (266) */
  ,  75,  58,  57,-109,  66,  62,  67,  61,  63,  65,  56,  59                                               /*  97 Used by state  (273) */
  ,   9,  12,  14, 286                                                                                       /*  98 Used by state  (276) */
  , -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90       /*  99 Used by state  (279) */
  , -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, 288
  ,   9,  12,  14, 293, 294,-107,  23                                                                        /* 100 Used by state  (285) */
  ,  75,  58,  57,  66,  62,  67,  61,  63,  65,  56,-155,  59                                               /* 101 Used by state  (290) */
  ,  40,  39,-106                                                                                            /* 102 Used by state  (292) */
  , 293, 294,  23                                                                                            /* 103 Used by states (293,294) */
}; // Size of table:2.120(x86)/2.120(x64) bytes.

static const unsigned char compressedLAsets[270] = {
   0x71,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0xc1,0x01 /*   0  10 tokens Used by states (0,2,16,32,34) */
  ,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x01,0x01 /*   1   4 tokens Used by states (5,24) */
  ,0x70,0x00,0x00,0x00,0x00,0x41,0x00,0x02,0x81,0x01 /*   2   9 tokens Used by states (7,8,25,26) */
  ,0x70,0x00,0x00,0x00,0x00,0x45,0x00,0x42,0x83,0x01 /*   3  12 tokens Used by states (9,10,11,47,99,172,174) */
  ,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x01 /*   4   2 tokens Used by state  (14) */
  ,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00 /*   5   2 tokens Used by states (18,52,78,207,245,267,268,269) */
  ,0x70,0x00,0x00,0x00,0xc0,0x4d,0x00,0x42,0x83,0x01 /*   6  15 tokens Used by state  (23) */
  ,0x70,0x00,0x00,0x00,0x40,0x45,0x00,0x42,0x83,0x01 /*   7  13 tokens Used by state  (29) */
  ,0x7e,0x00,0x00,0xff,0xef,0x01,0x08,0x3b,0x81,0x01 /*   8  31 tokens Used by states (37,134,135,204,241) */
  ,0x70,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00 /*   9   5 tokens Used by states (46,173) */
  ,0x00,0x00,0x00,0x00,0x80,0x04,0x00,0x00,0x00,0x00 /*  10   2 tokens Used by states (50,156,175,176,261) */
  ,0x00,0x00,0x00,0x00,0x40,0x05,0x00,0x40,0x03,0x00 /*  11   6 tokens Used by states (54,76,91,96,102,169,171) */
  ,0x00,0x00,0x00,0x00,0x80,0xfd,0xff,0xe7,0x07,0x00 /*  12  25 tokens Used by states (57,58,59,110,177,183,185,234,235,236,237,238) */
  ,0x00,0x00,0x00,0x00,0x80,0x45,0x00,0x80,0x00,0x00 /*  13   5 tokens Used by state  (68) */
  ,0x00,0x00,0x00,0x00,0x80,0x7d,0x00,0x80,0x02,0x00 /*  14   9 tokens Used by state  (70) */
  ,0x00,0x00,0x00,0x00,0x80,0xfd,0x00,0x80,0x02,0x00 /*  15  10 tokens Used by states (72,191) */
  ,0x02,0x00,0x00,0x00,0x80,0xfd,0xff,0xe7,0x07,0x00 /*  16  26 tokens Used by states (75,106) */
  ,0x00,0x00,0x00,0x00,0x80,0x05,0x00,0x00,0x00,0x00 /*  17   3 tokens Used by states (79,226) */
  ,0x00,0x00,0x00,0x00,0x00,0x4d,0x00,0x40,0x03,0x00 /*  18   7 tokens Used by states (81,89,95,157,168) */
  ,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x02,0x00 /*  19   2 tokens Used by states (83,85,86,94,228,232) */
  ,0x70,0x00,0x00,0x00,0x00,0x04,0x00,0x42,0x03,0x01 /*  20   9 tokens Used by states (87,160) */
  ,0x7f,0x00,0x00,0xff,0xff,0x01,0x08,0x3b,0xc1,0x03 /*  21  35 tokens Used by state  (133) */
  ,0x7e,0x00,0x00,0xff,0xef,0x01,0x08,0x3b,0x81,0x03 /*  22  32 tokens Used by states (137,138,209,210,219,220,223,246,247,248,256,257,280,283,295,296,300) */
  ,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x40,0x03,0x00 /*  23   4 tokens Used by state  (162) */
  ,0x00,0x00,0x00,0x00,0x80,0xfd,0xff,0x87,0x02,0x00 /*  24  21 tokens Used by states (195,196) */
  ,0x7e,0x00,0x00,0xff,0xff,0x01,0x08,0x3b,0x81,0x03 /*  25  33 tokens Used by states (259,275,298) */
  ,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x40,0x02,0x00 /*  26   3 tokens Used by states (262,277,287) */
}; // Size of table:272(x86)/272(x64) bytes.

/**********************************************************************************\
* The 3 arrays NTindexListTable, stateListTable and successorCode holds a          *
* compressed succesor-matrix, used by LRParser to find newstate = successor(S,A)   *
* as last part of a reduction with production P, A -> alfa.                        *
* A reduction by production P goes as follows:                                     *
*   Pop L elements from stack, where L = length of alfa;                           *
*   S = state on stacktop;                                                         *
*   A = leftside of the reduce production P;                                       *
*   newstate = successor(S,A);                                                     *
*   push(newstate), and set current state = newstate.                              *
*                                                                                  *
* For each relevant state S, a #define is generated and used as element S in array *
* successorCode. Each define has the format:                                       *
*                                                                                  *
* #define _suDDDD Code                                                             *
*                                                                                  *
* where DDDD is the statenumber S and Code is an unsigned int with the following   *
* format:                                                                          *
*                   0         1         2         3                                *
* Bit index:        01234567890123456789012345678901                               *
* Code              iiiiiiiiiiiiiiiiFrrrrrrrrrrrrrrr                               *
*                                                                                  *
* i          : Bit[ 0-15]: unsigned short                                          *
* r          : Bit[17-31]: unsigned short                                          *
* F          : Bit 16    : Indicates how to interpret i and r.                     *
*                                                                                  *
* F == 0: Uncompressed Format.                                                     *
*      i: Index into array NTindexListTable, pointing at the first element of      *
*         NTIndexList (see below).                                                 *
*      r: Index into array stateListTable, pointing at the first element of        *
*         stateList (see below).                                                   *
* F == 1: Compressed Format, used if there is only 1 possible newstate.            *
*      i: Index A' of nonterminal A, A' = (A - terminalCount).                     *
*      r: New state.                                                               *
*                                                                                  *
* F == 0: Use arrays NTIndexListTable and stateListTable to find newstate.         *
*      n                  : NTIndexListTable[i] = number of elements in NTIndexList*
*      NTIndexList[0..n-1]: NTIndexListTable[i+1..i+n]                             *
*                           Ordered list of possible nonterminal-indices.          *
*      stateList[0..n-1]  : stateListTable[r..r+n-1], same length as NTIndexList   *
*                                                                                  *
*      To get newstate, find index k in NTIndexList, so NTIndexList[k] == A',      *
*      and set newstate = stateList[k].                                            *
*      A' = (A - terminalCount) will always exist.                                 *
*      Note that both NTIndexList and stateList may be shared by several states.   *
\**********************************************************************************/
#define _su0000 0x00030001 /* Goto 1 on ext_def_list                  */
#define _su0001 0x00000000 /* NTindexList   0, stateList   0          */
#define _su0003 0x00100009 /* NTindexList   1, stateList   1          */
#define _su0006 0x001a000f /* NTindexList   2, stateList   2          */
#define _su0012 0x00240015 /* NTindexList   3, stateList   3          */
#define _su0013 0x003d000f /* Goto 30 on name                         */
#define _su0017 0x00450006 /* Goto 34 on compound_stmt                */
#define _su0021 0x00280018 /* NTindexList   4, stateList   4          */
#define _su0022 0x002e0018 /* NTindexList   4, stateList   5          */
#define _su0030 0x005f001e /* Goto 47 on opt_enum_list                */
#define _su0031 0x0034001c /* NTindexList   5, stateList   6          */
#define _su0033 0x003a0020 /* NTindexList   6, stateList   7          */
#define _su0035 0x00420025 /* NTindexList   7, stateList   8          */
#define _su0037 0x009b0021 /* Goto 77 on stmt_list                    */
#define _su0038 0x00560030 /* NTindexList   8, stateList   9          */
#define _su0039 0x006a003b /* NTindexList   9, stateList  10          */
#define _su0040 0x007a0025 /* NTindexList   7, stateList  11          */
#define _su0041 0x008e0044 /* NTindexList  10, stateList  12          */
#define _su0046 0x00c30018 /* Goto 97 on def_list                     */
#define _su0048 0x00a2001c /* NTindexList   5, stateList  13          */
#define _su0056 0x00a8004f /* NTindexList  11, stateList  14          */
#define _su0062 0x00c6005f /* NTindexList  12, stateList  15          */
#define _su0063 0x00ca005f /* NTindexList  12, stateList  16          */
#define _su0065 0x00ce005f /* NTindexList  12, stateList  17          */
#define _su0066 0x00d2005f /* NTindexList  12, stateList  18          */
#define _su0067 0x00d6005f /* NTindexList  12, stateList  19          */
#define _su0077 0x00da0062 /* NTindexList  13, stateList  20          */
#define _su0080 0x01000076 /* NTindexList  14, stateList  21          */
#define _su0084 0x01160082 /* NTindexList  15, stateList  22          */
#define _su0088 0x014b0016 /* Goto 165 on abs_decl                    */
#define _su0097 0x0124008a /* NTindexList  16, stateList  23          */
#define _su0100 0x01320092 /* NTindexList  17, stateList  24          */
#define _su0101 0x01360025 /* NTindexList   7, stateList  25          */
#define _su0105 0x014a0095 /* NTindexList  18, stateList  26          */
#define _su0107 0x0154004f /* NTindexList  11, stateList  27          */
#define _su0111 0x0172009b /* NTindexList  19, stateList  28          */
#define _su0113 0x018400a5 /* NTindexList  20, stateList  29          */
#define _su0117 0x019600af /* NTindexList  21, stateList  30          */
#define _su0118 0x01a600af /* NTindexList  21, stateList  31          */
#define _su0119 0x01b600af /* NTindexList  21, stateList  32          */
#define _su0120 0x01c600af /* NTindexList  21, stateList  33          */
#define _su0121 0x01d600b8 /* NTindexList  22, stateList  34          */
#define _su0122 0x01e000be /* NTindexList  23, stateList  35          */
#define _su0123 0x01e600be /* NTindexList  23, stateList  36          */
#define _su0124 0x01ec00be /* NTindexList  23, stateList  37          */
#define _su0125 0x01f200be /* NTindexList  23, stateList  38          */
#define _su0126 0x01f800be /* NTindexList  23, stateList  39          */
#define _su0127 0x01fe00be /* NTindexList  23, stateList  40          */
#define _su0128 0x020400be /* NTindexList  23, stateList  41          */
#define _su0129 0x020a00be /* NTindexList  23, stateList  42          */
#define _su0130 0x021000be /* NTindexList  23, stateList  43          */
#define _su0131 0x021600be /* NTindexList  23, stateList  44          */
#define _su0132 0x021c00be /* NTindexList  23, stateList  45          */
#define _su0136 0x022200c2 /* NTindexList  24, stateList  46          */
#define _su0140 0x0236009b /* NTindexList  19, stateList  47          */
#define _su0141 0x01a90024 /* Goto 212 on target                      */
#define _su0145 0x024800cd /* NTindexList  25, stateList  48          */
#define _su0150 0x02600025 /* NTindexList   7, stateList  49          */
#define _su0152 0x0274009b /* NTindexList  19, stateList  50          */
#define _su0153 0x01c30006 /* Goto 225 on compound_stmt               */
#define _su0158 0x028600da /* NTindexList  26, stateList  51          */
#define _su0163 0x029400e2 /* NTindexList  27, stateList  52          */
#define _su0164 0x029a00e2 /* NTindexList  27, stateList  53          */
#define _su0166 0x01cf0016 /* Goto 231 on abs_decl                    */
#define _su0167 0x01cd0016 /* Goto 230 on abs_decl                    */
#define _su0170 0x01d1000f /* Goto 232 on name                        */
#define _su0178 0x02a0005f /* NTindexList  12, stateList  54          */
#define _su0208 0x02a40025 /* NTindexList   7, stateList  55          */
#define _su0214 0x02b800cd /* NTindexList  25, stateList  56          */
#define _su0215 0x02d000e6 /* NTindexList  28, stateList  57          */
#define _su0216 0x02e400e6 /* NTindexList  28, stateList  58          */
#define _su0218 0x02f800f1 /* NTindexList  29, stateList  59          */
#define _su0221 0x030c009b /* NTindexList  19, stateList  60          */
#define _su0225 0x031e00fc /* NTindexList  30, stateList  61          */
#define _su0227 0x03220030 /* NTindexList   8, stateList  62          */
#define _su0229 0x03360025 /* NTindexList   7, stateList  63          */
#define _su0239 0x034a00a5 /* NTindexList  20, stateList  64          */
#define _su0240 0x035c00af /* NTindexList  21, stateList  65          */
#define _su0242 0x036c00ff /* NTindexList  31, stateList  66          */
#define _su0243 0x03740030 /* NTindexList   8, stateList  67          */
#define _su0244 0x03880025 /* NTindexList   7, stateList  68          */
#define _su0258 0x02270028 /* Goto 275 on exception_handler           */
#define _su0270 0x039c00cd /* NTindexList  25, stateList  69          */
#define _su0271 0x03b400cd /* NTindexList  25, stateList  70          */
#define _su0272 0x03cc00e6 /* NTindexList  28, stateList  71          */
#define _su0273 0x03e000e6 /* NTindexList  28, stateList  72          */
#define _su0274 0x02370006 /* Goto 283 on compound_stmt               */
#define _su0276 0x03f40104 /* NTindexList  32, stateList  73          */
#define _su0285 0x0400010b /* NTindexList  33, stateList  74          */
#define _su0288 0x040c00cd /* NTindexList  25, stateList  75          */
#define _su0290 0x042400f1 /* NTindexList  29, stateList  76          */
#define _su0291 0x02550006 /* Goto 298 on compound_stmt               */
#define _su0293 0x04380112 /* NTindexList  34, stateList  77          */
#define _su0294 0x043c0112 /* NTindexList  34, stateList  78          */
#define _su0299 0x044000cd /* NTindexList  25, stateList  79          */

#define nil (unsigned int)-1
static const unsigned int successorCode[301] = {
   _su0000,_su0001,nil    ,_su0003,nil    ,nil    ,_su0006,nil    ,nil    ,nil
  ,nil    ,nil    ,_su0012,_su0013,nil    ,nil    ,nil    ,_su0017,nil    ,nil
  ,nil    ,_su0021,_su0022,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,_su0030,_su0031,nil    ,_su0033,nil    ,_su0035,nil    ,_su0037,_su0038,_su0039
  ,_su0040,_su0041,nil    ,nil    ,nil    ,nil    ,_su0046,nil    ,_su0048,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0056,nil    ,nil    ,nil
  ,nil    ,nil    ,_su0062,_su0063,nil    ,_su0065,_su0066,_su0067,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0077,nil    ,nil
  ,_su0080,nil    ,nil    ,nil    ,_su0084,nil    ,nil    ,nil    ,_su0088,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0097,nil    ,nil
  ,_su0100,_su0101,nil    ,nil    ,nil    ,_su0105,nil    ,_su0107,nil    ,nil
  ,nil    ,_su0111,nil    ,_su0113,nil    ,nil    ,nil    ,_su0117,_su0118,_su0119
  ,_su0120,_su0121,_su0122,_su0123,_su0124,_su0125,_su0126,_su0127,_su0128,_su0129
  ,_su0130,_su0131,_su0132,nil    ,nil    ,nil    ,_su0136,nil    ,nil    ,nil
  ,_su0140,_su0141,nil    ,nil    ,nil    ,_su0145,nil    ,nil    ,nil    ,nil
  ,_su0150,nil    ,_su0152,_su0153,nil    ,nil    ,nil    ,nil    ,_su0158,nil
  ,nil    ,nil    ,nil    ,_su0163,_su0164,nil    ,_su0166,_su0167,nil    ,nil
  ,_su0170,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0178,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0208,nil
  ,nil    ,nil    ,nil    ,nil    ,_su0214,_su0215,_su0216,nil    ,_su0218,nil
  ,nil    ,_su0221,nil    ,nil    ,nil    ,_su0225,nil    ,_su0227,nil    ,_su0229
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0239
  ,_su0240,nil    ,_su0242,_su0243,_su0244,nil    ,nil    ,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0258,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil    ,nil
  ,_su0270,_su0271,_su0272,_su0273,_su0274,nil    ,_su0276,nil    ,nil    ,nil
  ,nil    ,nil    ,nil    ,nil    ,nil    ,_su0285,nil    ,nil    ,_su0288,nil
  ,_su0290,_su0291,nil    ,_su0293,_su0294,nil    ,nil    ,nil    ,nil    ,_su0299
  ,nil
}; // Size of table:1.204(x86)/1.208(x64) bytes.

static const unsigned char NTindexListTable[277] = {
     8,   2,   3,   7,   8,   9,  10,  11,  29                                                               /*    0 Used by state  (1) */
  ,  5,   4,   5,  12,  13,  15                                                                              /*    1 Used by state  (3) */
  ,  5,   8,   9,  10,  11,  29                                                                              /*    2 Used by state  (6) */
  ,  2,  23,  25                                                                                             /*    3 Used by state  (12) */
  ,  3,   5,  13,  15                                                                                        /*    4 Used by states (21,22) */
  ,  3,  15,  31,  32                                                                                        /*    5 Used by states (31,48) */
  ,  4,   5,  12,  13,  15                                                                                   /*    6 Used by state  (33) */
  , 10,  17,  35,  42,  43,  45,  46,  47,  48,  49,  50                                                     /*    7 Used by states (35,40,101,150,208,229,244) */
  , 10,  14,  35,  42,  43,  45,  46,  47,  48,  49,  50                                                     /*    8 Used by states (38,227,243) */
  ,  8,   9,  10,  11,  16,  19,  20,  21,  29                                                               /*    9 Used by state  (39) */
  , 10,   9,  10,  11,  15,  16,  18,  19,  20,  21,  29                                                     /*   10 Used by state  (41) */
  , 15,   9,  10,  11,  20,  21,  29,  35,  42,  43,  45,  46,  47,  48,  49,  50                            /*   11 Used by states (56,107) */
  ,  2,  42,  43                                                                                             /*   12 Used by states (62,63,65,66,67,178) */
  , 19,   6,   7,   8,   9,  10,  11,  26,  29,  34,  35,  36,  42,  43,  45,  46,  47,  48,  49,  50        /*   13 Used by state  (77) */
  , 11,  14,  35,  42,  43,  45,  46,  47,  48,  49,  50,  51                                                /*   14 Used by state  (80) */
  ,  7,   9,  10,  11,  13,  15,  22,  29                                                                    /*   15 Used by state  (84) */
  ,  7,   7,   8,   9,  10,  11,  26,  29                                                                    /*   16 Used by state  (97) */
  ,  2,  15,  32                                                                                             /*   17 Used by state  (100) */
  ,  5,   9,  10,  11,  22,  29                                                                              /*   18 Used by state  (105) */
  ,  9,  35,  42,  43,  45,  46,  47,  48,  49,  50                                                          /*   19 Used by states (111,140,152,221) */
  ,  9,  42,  43,  44,  45,  46,  47,  48,  49,  50                                                          /*   20 Used by states (113,239) */
  ,  8,  42,  43,  45,  46,  47,  48,  49,  50                                                               /*   21 Used by states (117,118,119,120,240) */
  ,  5,  42,  43,  48,  49,  50                                                                              /*   22 Used by state  (121) */
  ,  3,  42,  43,  50                                                                                        /*   23 Used by states (122,123,124,125,126,127,128,129,130,131,132) */
  , 10,   5,   8,   9,  10,  11,  13,  15,  27,  28,  29                                                     /*   24 Used by state  (136) */
  , 12,   6,  34,  35,  36,  42,  43,  45,  46,  47,  48,  49,  50                                           /*   25 Used by states (145,214,270,271,288,299) */
  ,  7,   9,  10,  11,  19,  20,  21,  29                                                                    /*   26 Used by state  (158) */
  ,  3,  13,  15,  22                                                                                        /*   27 Used by states (163,164) */
  , 10,  35,  37,  42,  43,  45,  46,  47,  48,  49,  50                                                     /*   28 Used by states (215,216,272,273) */
  , 10,  35,  38,  42,  43,  45,  46,  47,  48,  49,  50                                                     /*   29 Used by states (218,290) */
  ,  2,  39,  40                                                                                             /*   30 Used by state  (225) */
  ,  4,   5,  13,  15,  28                                                                                   /*   31 Used by state  (242) */
  ,  6,   9,  10,  11,  20,  29,  41                                                                         /*   32 Used by state  (276) */
  ,  6,   9,  10,  11,  13,  15,  29                                                                         /*   33 Used by state  (285) */
  ,  2,  13,  15                                                                                             /*   34 Used by states (293,294) */
}; // Size of table:280(x86)/280(x64) bytes.

static const unsigned short stateListTable[556] = {
      2,   3,   6,   7,   8,  10,  11,  13                                                                   /*   0 Used by state  (1) */
  ,  15,  17,  18,  19,  20                                                                                  /*   1 Used by state  (3) */
  ,  25,   8,  10,  11,  13                                                                                  /*   2 Used by state  (6) */
  ,  27,  28                                                                                                 /*   3 Used by state  (12) */
  ,  43,  42,  20                                                                                            /*   4 Used by state  (21) */
  ,  45,  44,  20                                                                                            /*   5 Used by state  (22) */
  ,  51,  49,  50                                                                                            /*   6 Used by state  (31) */
  ,  53,  52,  19,  20                                                                                       /*   7 Used by state  (33) */
  ,  55,  68,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*   8 Used by state  (35) */
  ,  78,  79,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*   9 Used by state  (38) */
  ,  87,  10,  11,  82,  83,  84,  85,  13                                                                   /*  10 Used by state  (39) */
  ,  90,  68,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  11 Used by state  (40) */
  ,  87,  10,  11,  94,  93,  92,  83,  84,  85,  13                                                         /*  12 Used by state  (41) */
  ,  51,  98,  50                                                                                            /*  13 Used by state  (48) */
  ,  87,  10,  11, 105, 104,  13, 103,  64,  60,  69,  70,  71,  72,  73,  74                                /*  14 Used by state  (56) */
  , 108,  60                                                                                                 /*  15 Used by state  (62) */
  , 109,  60                                                                                                 /*  16 Used by state  (63) */
  , 114,  60                                                                                                 /*  17 Used by state  (65) */
  , 115,  60                                                                                                 /*  18 Used by state  (66) */
  , 116,  60                                                                                                 /*  19 Used by state  (67) */
  , 138, 136,   7,   8,  10,  11, 135,  13, 134, 139, 142,  64,  60,  69,  70,  71,  72,  73,  74            /*  20 Used by state  (77) */
  , 156,  79,  64,  60,  69,  70,  71,  72,  73,  74, 155                                                    /*  21 Used by state  (80) */
  , 160,  10,  11, 159, 162, 161,  13                                                                        /*  22 Used by state  (84) */
  , 136,   7,   8,  10,  11, 173,  13                                                                        /*  23 Used by state  (97) */
  ,  51, 175                                                                                                 /*  24 Used by state  (100) */
  , 176,  68,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  25 Used by state  (101) */
  , 160,  10,  11, 161,  13                                                                                  /*  26 Used by state  (105) */
  ,  87,  10,  11, 105, 181,  13, 180,  64, 179,  69,  70,  71,  72,  73,  74                                /*  27 Used by state  (107) */
  , 182,  64,  60,  69,  70,  71,  72,  73,  74                                                              /*  28 Used by state  (111) */
  ,  64,  60, 184, 186,  70,  71,  72,  73,  74                                                              /*  29 Used by state  (113) */
  ,  64,  60, 187,  70,  71,  72,  73,  74                                                                   /*  30 Used by state  (117) */
  ,  64,  60, 188,  70,  71,  72,  73,  74                                                                   /*  31 Used by state  (118) */
  ,  64,  60, 189,  70,  71,  72,  73,  74                                                                   /*  32 Used by state  (119) */
  ,  64,  60, 190,  70,  71,  72,  73,  74                                                                   /*  33 Used by state  (120) */
  ,  64,  60, 191,  73,  74                                                                                  /*  34 Used by state  (121) */
  ,  64,  60, 192                                                                                            /*  35 Used by state  (122) */
  ,  64,  60, 193                                                                                            /*  36 Used by state  (123) */
  ,  64,  60, 194                                                                                            /*  37 Used by state  (124) */
  ,  64,  60, 195                                                                                            /*  38 Used by state  (125) */
  ,  64,  60, 196                                                                                            /*  39 Used by state  (126) */
  ,  64,  60, 197                                                                                            /*  40 Used by state  (127) */
  ,  64,  60, 198                                                                                            /*  41 Used by state  (128) */
  ,  64,  60, 199                                                                                            /*  42 Used by state  (129) */
  ,  64,  60, 200                                                                                            /*  43 Used by state  (130) */
  ,  64,  60, 201                                                                                            /*  44 Used by state  (131) */
  ,  64,  60, 202                                                                                            /*  45 Used by state  (132) */
  , 206,  25,   8,  10,  11, 205,  20, 203, 207,  13                                                         /*  46 Used by state  (136) */
  , 211,  64,  60,  69,  70,  71,  72,  73,  74                                                              /*  47 Used by state  (140) */
  , 138, 217, 139, 142,  64,  60,  69,  70,  71,  72,  73,  74                                               /*  48 Used by state  (145) */
  , 222,  68,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  49 Used by state  (150) */
  , 224,  64,  60,  69,  70,  71,  72,  73,  74                                                              /*  50 Used by state  (152) */
  ,  87,  10,  11, 228,  84,  85,  13                                                                        /*  51 Used by state  (158) */
  ,  42, 162, 230                                                                                            /*  52 Used by state  (163) */
  ,  44, 162, 231                                                                                            /*  53 Used by state  (164) */
  , 233,  60                                                                                                 /*  54 Used by state  (178) */
  , 245,  68,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  55 Used by state  (208) */
  , 138, 248, 139, 142,  64,  60,  69,  70,  71,  72,  73,  74                                               /*  56 Used by state  (214) */
  , 250, 249,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  57 Used by state  (215) */
  , 250, 251,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  58 Used by state  (216) */
  , 254, 253,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  59 Used by state  (218) */
  , 255,  64,  60,  69,  70,  71,  72,  73,  74                                                              /*  60 Used by state  (221) */
  , 258, 259                                                                                                 /*  61 Used by state  (225) */
  , 261,  79,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  62 Used by state  (227) */
  , 263,  68,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  63 Used by state  (229) */
  ,  64,  60, 265, 186,  70,  71,  72,  73,  74                                                              /*  64 Used by state  (239) */
  ,  64,  60, 266,  70,  71,  72,  73,  74                                                                   /*  65 Used by state  (240) */
  , 206, 205,  20, 267                                                                                       /*  66 Used by state  (242) */
  , 268,  79,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  67 Used by state  (243) */
  , 269,  68,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  68 Used by state  (244) */
  , 138, 279, 139, 142,  64,  60,  69,  70,  71,  72,  73,  74                                               /*  69 Used by state  (270) */
  , 138, 280, 139, 142,  64,  60,  69,  70,  71,  72,  73,  74                                               /*  70 Used by state  (271) */
  , 250, 281,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  71 Used by state  (272) */
  , 250, 282,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  72 Used by state  (273) */
  ,  87,  10,  11, 285,  13, 284                                                                             /*  73 Used by state  (276) */
  , 160,  10,  11, 292, 162,  13                                                                             /*  74 Used by state  (285) */
  , 138, 295, 139, 142,  64,  60,  69,  70,  71,  72,  73,  74                                               /*  75 Used by state  (288) */
  , 254, 297,  64,  60,  69,  70,  71,  72,  73,  74                                                         /*  76 Used by state  (290) */
  ,  42, 162                                                                                                 /*  77 Used by state  (293) */
  ,  44, 162                                                                                                 /*  78 Used by state  (294) */
  , 138, 300, 139, 142,  64,  60,  69,  70,  71,  72,  73,  74                                               /*  79 Used by state  (299) */
}; // Size of table:1.112(x86)/1.112(x64) bytes.

/**********************************************************************************\
* The productionLength[] is indexed by production number and holds the number of   *
* symbols on the right side of each production.                                    *
\**********************************************************************************/
static const unsigned char productionLength[165] = {
  /*   0 */    1,  0,  2,  3,  2,  3,  0,  2,  1,  1
  /*  10 */ ,  1,  2,  1,  1,  1,  1,  1,  1,  3,  1
  /*  20 */ ,  3,  1,  1,  3,  4,  3,  4,  2,  3,  2
  /*  30 */ ,  3,  4,  3,  3,  3,  4,  4,  1,  3,  1
  /*  40 */ ,  3,  2,  1,  1,  1,  2,  2,  2,  0,  5
  /*  50 */ ,  2,  3,  4,  3,  5,  2,  0,  1,  1,  0
  /*  60 */ ,  2,  3,  2,  1,  3,  1,  1,  3,  3,  2
  /*  70 */ ,  3,  4,  0,  3,  1,  1,  3,  1,  3,  3
  /*  80 */ ,  0,  2,  2,  1,  1,  2,  2,  3,  3,  3
  /*  90 */ ,  5,  7,  5,  7,  9,  2,  2,  5,  3,  2
  /* 100 */ ,  3,  3,  1,  2,  5,  1,  2,  1,  1,  0
  /* 110 */ ,  1,  3,  1,  1,  1,  1,  4,  4,  4,  4
  /* 120 */ ,  2,  2,  2,  2,  2,  2,  4,  3,  4,  3
  /* 130 */ ,  1,  3,  3,  1,  5,  3,  3,  1,  1,  3
  /* 140 */ ,  1,  1,  3,  1,  3,  3,  3,  3,  3,  3
  /* 150 */ ,  3,  3,  3,  3,  1,  0,  1,  1,  1,  3
  /* 160 */ ,  1,  3,  1,  2,  1
}; // Size of table:168(x86)/168(x64) bytes.

/**********************************************************************************\
* leftSideTable[] is indexed by production number.                                 *
* leftSideTable[p] = A', A' = (A - terminalCount)                                  *
*                        where A is the left side of production p.                 *
* A' = 0..nonterminalCount-1.                                                      *
* p  = 0..productionCount-1                                                        *
\**********************************************************************************/
static const unsigned char leftSideTable[165] = {
  /*   0 */    0,  1,  1,  2,  2,  2,  3,  3,  3,  3
  /*  10 */ ,  7,  7,  8,  8,  9,  9,  9,  4,  4, 12
  /*  20 */ , 12, 12, 13, 13, 13, 13, 13, 13, 13,  5
  /*  30 */ ,  5,  5,  5,  5,  5,  5,  5, 18, 18, 16
  /*  40 */ , 16, 19, 19, 19, 20, 20, 21, 21, 22, 22
  /*  50 */ , 22, 22, 22, 22, 11, 11, 23, 23, 25, 24
  /*  60 */ , 24, 26, 26, 27, 27, 28, 28, 28, 28, 28
  /*  70 */ , 10, 10, 30, 30, 29, 31, 31, 32, 32,  6
  /*  80 */ , 33, 33, 33, 34, 34, 34, 34, 34, 34, 34
  /*  90 */ , 34, 34, 34, 34, 34, 34, 34, 34, 34, 34
  /* 100 */ , 34, 34, 39, 39, 40, 41, 41, 41, 36, 37
  /* 110 */ , 37, 42, 42, 42, 42, 42, 42, 42, 42, 42
  /* 120 */ , 42, 42, 42, 42, 42, 42, 42, 42, 42, 42
  /* 130 */ , 44, 44, 35, 35, 45, 45, 45, 45, 46, 47
  /* 140 */ , 47, 48, 49, 49, 50, 50, 50, 50, 50, 50
  /* 150 */ , 50, 50, 50, 50, 50, 38, 38, 17, 14, 14
  /* 160 */ , 51, 51, 43, 43, 15
}; // Size of table:168(x86)/168(x64) bytes.

/**********************************************************************************\
* rightSideTable[] holds a compressed form of the rightsides of all                *
* productions in the grammar. Only used for debugging.                             *
\**********************************************************************************/
static const unsigned char rightSideTable[376] = {
  /*   0 */   75
  /*   2 */ , 75, 76
  /*   3 */ , 77, 78, 40
  /*   4 */ , 77, 40
  /*   5 */ , 77, 79, 80
  /*   7 */ , 71, 70
  /*   8 */ , 70
  /*   9 */ , 81
  /*  10 */ , 82
  /*  11 */ , 81, 82
  /*  12 */ , 83
  /*  13 */ , 71
  /*  14 */ ,  4
  /*  15 */ , 84
  /*  16 */ , 85
  /*  17 */ , 86
  /*  18 */ , 78, 42, 86
  /*  19 */ , 87
  /*  20 */ , 87, 43, 88
  /*  21 */ , 79
  /*  22 */ , 89
  /*  23 */ , 87, 64, 65
  /*  24 */ , 87, 64, 90, 65
  /*  25 */ , 87, 62, 63
  /*  26 */ , 87, 62, 91, 63
  /*  27 */ , 57, 87
  /*  28 */ , 64, 87, 65
  /*  29 */ , 57, 79
  /*  30 */ , 79, 62, 63
  /*  31 */ , 79, 62, 91, 63
  /*  32 */ , 64, 79, 65
  /*  33 */ , 79, 64, 65
  /*  34 */ , 89, 64, 65
  /*  35 */ , 89, 64, 92, 65
  /*  36 */ , 89, 64, 90, 65
  /*  37 */ , 89
  /*  38 */ , 92, 42, 89
  /*  39 */ , 93
  /*  40 */ , 90, 42, 93
  /*  41 */ , 94, 87
  /*  42 */ , 95
  /*  43 */ , 41
  /*  44 */ , 83
  /*  45 */ , 94, 83
  /*  46 */ , 94, 96
  /*  47 */ , 70, 96
  /*  49 */ , 64, 96, 65, 64, 65
  /*  50 */ , 57, 96
  /*  51 */ , 96, 62, 63
  /*  52 */ , 96, 62, 91, 63
  /*  53 */ , 64, 96, 65
  /*  54 */ ,  5, 97, 38, 98, 39
  /*  55 */ ,  5, 99
  /*  57 */ , 99
  /*  58 */ , 72
  /*  60 */ , 98,100
  /*  61 */ , 81,101, 40
  /*  62 */ , 81, 40
  /*  63 */ ,102
  /*  64 */ ,101, 42,102
  /*  65 */ , 79
  /*  66 */ , 87
  /*  67 */ , 87, 43, 88
  /*  68 */ , 87, 46, 91
  /*  69 */ , 46, 91
  /*  70 */ ,103, 89,104
  /*  71 */ ,103, 38,105, 39
  /*  73 */ , 38,105, 39
  /*  74 */ ,  6
  /*  75 */ ,106
  /*  76 */ ,105, 42,106
  /*  77 */ , 89
  /*  78 */ , 89, 43, 91
  /*  79 */ , 38,107, 39
  /*  81 */ ,107,108
  /*  82 */ ,107,100
  /*  83 */ , 40
  /*  84 */ , 80
  /*  85 */ ,109, 40
  /*  86 */ , 24, 40
  /*  87 */ , 24,109, 40
  /*  88 */ , 25,110, 40
  /*  89 */ ,110, 46,108
  /*  90 */ , 26, 64,111, 65,108
  /*  91 */ , 26, 64,111, 65,108, 73,108
  /*  92 */ , 32, 64,111, 65,108
  /*  93 */ , 33,108, 32, 64,111, 65, 40
  /*  94 */ , 34, 64,112, 40,111, 40,112, 65,108
  /*  95 */ , 30, 40
  /*  96 */ , 31, 40
  /*  97 */ , 27, 64,109, 65, 80
  /*  98 */ , 28, 91, 46
  /*  99 */ , 29, 46
  /* 100 */ , 37,109, 40
  /* 101 */ , 35, 80,113
  /* 102 */ ,114
  /* 103 */ ,113,114
  /* 104 */ , 36, 64,115, 65, 80
  /* 105 */ , 41
  /* 106 */ , 94, 87
  /* 107 */ , 94
  /* 108 */ , 72
  /* 110 */ ,109
  /* 111 */ , 64,109, 65
  /* 112 */ ,  3
  /* 113 */ ,  2
  /* 114 */ , 72
  /* 115 */ ,117
  /* 116 */ , 59, 64,117, 65
  /* 117 */ , 59, 64,109, 65
  /* 118 */ , 59, 64, 95, 65
  /* 119 */ , 64, 95, 65,116
  /* 120 */ , 56,116
  /* 121 */ , 60,116
  /* 122 */ ,116, 61
  /* 123 */ , 61,116
  /* 124 */ , 51,116
  /* 125 */ , 57,116
  /* 126 */ ,116, 62,109, 63
  /* 127 */ ,116, 66, 72
  /* 128 */ ,116, 64,118, 65
  /* 129 */ ,116, 64, 65
  /* 130 */ ,119
  /* 131 */ ,119, 42,118
  /* 132 */ ,109, 42,119
  /* 133 */ ,119
  /* 134 */ ,119, 45,119, 46,119
  /* 135 */ ,119, 44,119
  /* 136 */ ,119, 43,119
  /* 137 */ ,120
  /* 138 */ ,121
  /* 139 */ ,121, 47,122
  /* 140 */ ,122
  /* 141 */ ,123
  /* 142 */ ,123, 48,124
  /* 143 */ ,124
  /* 144 */ ,124, 53,124
  /* 145 */ ,124, 52,124
  /* 146 */ ,124, 57,124
  /* 147 */ ,124, 58,124
  /* 148 */ ,124, 54,124
  /* 149 */ ,124, 51,124
  /* 150 */ ,124, 50,124
  /* 151 */ ,124, 49,124
  /* 152 */ ,124, 55,124
  /* 153 */ ,124, 56,124
  /* 154 */ ,116
  /* 156 */ ,109
  /* 157 */ ,109
  /* 158 */ ,109
  /* 159 */ , 38,125, 39
  /* 160 */ , 88
  /* 161 */ ,125, 42, 88
  /* 162 */ ,  1
  /* 163 */ ,117,  1
  /* 164 */ , 72
}; // Size of table:376(x86)/376(x64) bytes.

/**********************************************************************************\
* symbolNames is a space separated string with the names of all symbols used in    *
* grammar, terminals and nonTerminals. Only used for debugging.                    *
\**********************************************************************************/
static const char *symbolNames = {
  "EOI"                                               /* T     0               */
  " STRING"                                           /* T     1               */
  " ICON"                                             /* T     2               */
  " FCON"                                             /* T     3               */
  " TYPE"                                             /* T     4               */
  " STRUCT"                                           /* T     5               */
  " ENUM"                                             /* T     6               */
  " DEFINE"                                           /* T     7               */
  " ENDIF"                                            /* T     8               */
  " IFDEF"                                            /* T     9               */
  " IFNDEF"                                           /* T    10               */
  " INCLUDE"                                          /* T    11               */
  " UNDEF"                                            /* T    12               */
  " EXTERN"                                           /* T    13               */
  " STATIC"                                           /* T    14               */
  " VIRTUAL"                                          /* T    15               */
  " REGISTER"                                         /* T    16               */
  " AUTO"                                             /* T    17               */
  " OPERATOR"                                         /* T    18               */
  " SIGNED"                                           /* T    19               */
  " PRIVATE"                                          /* T    20               */
  " PUBLIC"                                           /* T    21               */
  " PROTECTED"                                        /* T    22               */
  " TEMPLATE"                                         /* T    23               */
  " RETURN"                                           /* T    24               */
  " GOTO"                                             /* T    25               */
  " IF"                                               /* T    26               */
  " SWITCH"                                           /* T    27               */
  " CASE"                                             /* T    28               */
  " DEFAULT"                                          /* T    29               */
  " BREAK"                                            /* T    30               */
  " CONTINUE"                                         /* T    31               */
  " WHILE"                                            /* T    32               */
  " DO"                                               /* T    33               */
  " FOR"                                              /* T    34               */
  " TRYSTMT"                                          /* T    35               */
  " CATCH"                                            /* T    36               */
  " THROW"                                            /* T    37               */
  " LC"                                               /* T    38               */
  " RC"                                               /* T    39               */
  " SEMI"                                             /* T    40               */
  " ELLIPSIS"                                         /* T    41               */
  " COMMA"                                            /* T    42               */
  " EQUAL"                                            /* T    43               */
  " ASSIGNOP"                                         /* T    44               */
  " QUEST"                                            /* T    45               */
  " COLON"                                            /* T    46               */
  " OROR"                                             /* T    47               */
  " ANDAND"                                           /* T    48               */
  " OR"                                               /* T    49               */
  " XOR"                                              /* T    50               */
  " AND"                                              /* T    51               */
  " EQUOP"                                            /* T    52               */
  " RELOP"                                            /* T    53               */
  " SHIFTOP"                                          /* T    54               */
  " PLUS"                                             /* T    55               */
  " MINUS"                                            /* T    56               */
  " STAR"                                             /* T    57               */
  " DIVOP"                                            /* T    58               */
  " SIZEOF"                                           /* T    59               */
  " UNOP"                                             /* T    60               */
  " INCOP"                                            /* T    61               */
  " LB"                                               /* T    62               */
  " RB"                                               /* T    63               */
  " LPAR"                                             /* T    64               */
  " RPAR"                                             /* T    65               */
  " STRUCTOP"                                         /* T    66               */
  " COLONCOLON"                                       /* T    67               */
  " NEWOP"                                            /* T    68               */
  " DELETEOP"                                         /* T    69               */
  " TTYPE"                                            /* T    70               */
  " CLASS"                                            /* T    71               */
  " NAME"                                             /* T    72               */
  " ELSE"                                             /* T    73               */
  " program"                                          /* NT   74 NTindex=0     */
  " ext_def_list"                                     /* NT   75 NTindex=1     */
  " ext_def"                                          /* NT   76 NTindex=2     */
  " opt_specifiers"                                   /* NT   77 NTindex=3     */
  " ext_decl_list"                                    /* NT   78 NTindex=4     */
  " funct_decl"                                       /* NT   79 NTindex=5     */
  " compound_stmt"                                    /* NT   80 NTindex=6     */
  " specifiers"                                       /* NT   81 NTindex=7     */
  " type_or_class"                                    /* NT   82 NTindex=8     */
  " type_specifier"                                   /* NT   83 NTindex=9     */
  " enum_specifier"                                   /* NT   84 NTindex=10    */
  " struct_specifier"                                 /* NT   85 NTindex=11    */
  " ext_decl"                                         /* NT   86 NTindex=12    */
  " var_decl"                                         /* NT   87 NTindex=13    */
  " initializer"                                      /* NT   88 NTindex=14    */
  " name"                                             /* NT   89 NTindex=15    */
  " var_list"                                         /* NT   90 NTindex=16    */
  " const_expr"                                       /* NT   91 NTindex=17    */
  " name_list"                                        /* NT   92 NTindex=18    */
  " param_declaration"                                /* NT   93 NTindex=19    */
  " type"                                             /* NT   94 NTindex=20    */
  " abstract_decl"                                    /* NT   95 NTindex=21    */
  " abs_decl"                                         /* NT   96 NTindex=22    */
  " opt_tag"                                          /* NT   97 NTindex=23    */
  " def_list"                                         /* NT   98 NTindex=24    */
  " tag"                                              /* NT   99 NTindex=25    */
  " def"                                              /* NT  100 NTindex=26    */
  " decl_list"                                        /* NT  101 NTindex=27    */
  " decl"                                             /* NT  102 NTindex=28    */
  " enum"                                             /* NT  103 NTindex=29    */
  " opt_enum_list"                                    /* NT  104 NTindex=30    */
  " enumerator_list"                                  /* NT  105 NTindex=31    */
  " enumerator"                                       /* NT  106 NTindex=32    */
  " stmt_list"                                        /* NT  107 NTindex=33    */
  " statement"                                        /* NT  108 NTindex=34    */
  " expr"                                             /* NT  109 NTindex=35    */
  " target"                                           /* NT  110 NTindex=36    */
  " test"                                             /* NT  111 NTindex=37    */
  " opt_expr"                                         /* NT  112 NTindex=38    */
  " handler_list"                                     /* NT  113 NTindex=39    */
  " exception_handler"                                /* NT  114 NTindex=40    */
  " catch_type"                                       /* NT  115 NTindex=41    */
  " unary"                                            /* NT  116 NTindex=42    */
  " string_const"                                     /* NT  117 NTindex=43    */
  " args"                                             /* NT  118 NTindex=44    */
  " non_comma_expr"                                   /* NT  119 NTindex=45    */
  " or_expr"                                          /* NT  120 NTindex=46    */
  " or_list"                                          /* NT  121 NTindex=47    */
  " and_expr"                                         /* NT  122 NTindex=48    */
  " and_list"                                         /* NT  123 NTindex=49    */
  " binary"                                           /* NT  124 NTindex=50    */
  " initializer_list"                                 /* NT  125 NTindex=51    */
}; // Total size of string:996(x86)/1.000(x64) bytes

static const ParserTablesTemplate<74,126,165,301
                                 ,unsigned char
                                 ,unsigned char
                                 ,unsigned char
                                 ,short
                                 ,unsigned short> CppTables_s(actionCode      , termListTable     , actionListTable, compressedLAsets
                                                             ,successorCode   , NTindexListTable  , stateListTable
                                                             ,productionLength, leftSideTable
                                                             ,rightSideTable  , symbolNames
                                                             ,8572, 8648);

const ParserTables *CppParser::CppTables = &CppTables_s;
// Size of CppTables_s: 68(x86)/128(x64) bytes. Size of CppTables:4(x86)/8(x64) bytes

// Total size of table data:8.572(x86)/8.648(x64) bytes.


