/* DO NOT EDIT THIS FILE - it is machine generated */
#line 102 "C:\\Mytools2015\\ParserGen\\cpp\\Cpp.y"
#include "stdafx.h"
#include "CppParser.h"

#line 36 "C:\\mytools2015\\ParserGen\\lib\\parsergencpp.par"
#include <ParserTablesTemplate.h>

using namespace LRParsing;

#define _tc0000 0x00000000 /*                                                                  */
#define _tc0001 0x0094804b /* STRING     Split(_ts0000,_ts0001)                                */
#define _tc0002 0x01518000 /* ICON       Shift to  168 on states in shiftStateBitSet[0]        */
#define _tc0003 0x014f8000 /* FCON       Shift to  167 on states in shiftStateBitSet[0]        */
#define _tc0004 0x01118022 /* TYPE       Shift to  136 on states in shiftStateBitSet[2]        */
#define _tc0005 0x01178022 /* STRUCT     Shift to  139 on states in shiftStateBitSet[2]        */
#define _tc0006 0x01198022 /* ENUM       Shift to  140 on states in shiftStateBitSet[2]        */
#define _tc0007 0x00c38033 /* RETURN     Shift to   97 on states in shiftStateBitSet[3]        */
#define _tc0008 0x019d8033 /* GOTO       Shift to  206 on states in shiftStateBitSet[3]        */
#define _tc0009 0x01a18033 /* IF         Shift to  208 on states in shiftStateBitSet[3]        */
#define _tc0010 0x01ab8033 /* SWITCH     Shift to  213 on states in shiftStateBitSet[3]        */
#define _tc0011 0x00c78033 /* CASE       Shift to   99 on states in shiftStateBitSet[3]        */
#define _tc0012 0x01ad8033 /* DEFAULT    Shift to  214 on states in shiftStateBitSet[3]        */
#define _tc0013 0x01a78033 /* BREAK      Shift to  211 on states in shiftStateBitSet[3]        */
#define _tc0014 0x01a98033 /* CONTINUE   Shift to  212 on states in shiftStateBitSet[3]        */
#define _tc0015 0x0098804d /* WHILE      Split(_ts0002,_ts0003)                                */
#define _tc0016 0x00c58033 /* DO         Shift to   98 on states in shiftStateBitSet[3]        */
#define _tc0017 0x01a58033 /* FOR        Shift to  210 on states in shiftStateBitSet[3]        */
#define _tc0018 0x00278033 /* TRYSTMT    Shift to   19 on states in shiftStateBitSet[3]        */
#define _tc0019 0x02278044 /* CATCH      Shift to  275 on states in shiftStateBitSet[4]        */
#define _tc0020 0x00c98033 /* THROW      Shift to  100 on states in shiftStateBitSet[3]        */
#define _tc0021 0x009c8051 /* LC         Split(_ts0004,_ts0007)                                */
#define _tc0022 0x00060004 /* RC         shiftFromStateArray    1, shiftToStateArrayTable    1 */
#define _tc0023 0x00a48053 /* SEMI       Split(_ts0008,_ts0009)                                */
#define _tc0024 0x00a88057 /* COMMA      Split(_ts0010,_ts0013)                                */
#define _tc0025 0x00b08059 /* EQUAL      Split(_ts0014,_ts0015)                                */
#define _tc0026 0x00a58099 /* ASSIGNOP   Shift to   82 on states in shiftStateBitSet[9]        */
#define _tc0027 0x00a380aa /* QUEST      Shift to   81 on states in shiftStateBitSet[10]       */
#define _tc0028 0x00b4805b /* COLON      Split(_ts0016,_ts0017)                                */
#define _tc0029 0x00a900ad /* OROR       Shift to   84 from  173                               */
#define _tc0030 0x00ab00af /* ANDAND     Shift to   85 from  175                               */
#define _tc0031 0x00bb80cc /* OR         Shift to   93 on states in shiftStateBitSet[12]       */
#define _tc0032 0x00b980dd /* XOR        Shift to   92 on states in shiftStateBitSet[13]       */
#define _tc0033 0x00b8805d /* AND        Split(_ts0018,_ts0019)                                */
#define _tc0034 0x00af80ff /* EQUOP      Shift to   87 on states in shiftStateBitSet[15]       */
#define _tc0035 0x00ad8110 /* RELOP      Shift to   86 on states in shiftStateBitSet[16]       */
#define _tc0036 0x00b58121 /* SHIFTOP    Shift to   90 on states in shiftStateBitSet[17]       */
#define _tc0037 0x00bd8132 /* PLUS       Shift to   94 on states in shiftStateBitSet[18]       */
#define _tc0038 0x00bc805f /* MINUS      Split(_ts0020,_ts0021)                                */
#define _tc0039 0x00c08063 /* STAR       Split(_ts0022,_ts0025)                                */
#define _tc0040 0x00b38143 /* DIVOP      Shift to   89 on states in shiftStateBitSet[19]       */
#define _tc0041 0x01558000 /* SIZEOF     Shift to  170 on states in shiftStateBitSet[0]        */
#define _tc0042 0x00878000 /* UNOP       Shift to   67 on states in shiftStateBitSet[0]        */
#define _tc0043 0x00c88065 /* INCOP      Split(_ts0026,_ts0027)                                */
#define _tc0044 0x00cc8069 /* LB         Split(_ts0028,_ts0031)                                */
#define _tc0045 0x007c0046 /* RB         shiftFromStateArray    8, shiftToStateArrayTable    8 */
#define _tc0046 0x00d4806d /* LPAR       Split(_ts0032,_ts0035)                                */
#define _tc0047 0x00d20073 /* RPAR       shiftFromStateArray   10, shiftToStateArrayTable   10 */
#define _tc0048 0x01918154 /* STRUCTOP   Shift to  200 on states in shiftStateBitSet[20]       */
#define _tc0049 0x00dc806f /* TTYPE      Split(_ts0036,_ts0037)                                */
#define _tc0050 0x00e08071 /* CLASS      Split(_ts0038,_ts0039)                                */
#define _tc0051 0x00e48075 /* NAME       Split(_ts0040,_ts0043)                                */
#define _tc0052 0x00f9011f /* ELSE       Shift to  124 from  287                               */
#define _tc0053 0x00000000 /*                                                                  */
#define _tc0054 0x00000000 /*                                                                  */
#define _tc0055 0x00000000 /*                                                                  */
#define _tc0056 0x00000000 /*                                                                  */
#define _tc0057 0x00000000 /*                                                                  */
#define _tc0058 0x00000000 /*                                                                  */
#define _tc0059 0x00000000 /*                                                                  */
#define _tc0060 0x00000000 /*                                                                  */
#define _tc0061 0x00000000 /*                                                                  */
#define _tc0062 0x00000000 /*                                                                  */
#define _tc0063 0x00000000 /*                                                                  */
#define _tc0064 0x00000000 /*                                                                  */
#define _tc0065 0x00000000 /*                                                                  */
#define _tc0066 0x00000000 /*                                                                  */
#define _tc0067 0x00000000 /*                                                                  */
#define _tc0068 0x00000000 /*                                                                  */
#define _tc0069 0x00000000 /*                                                                  */
#define _tc0070 0x00ec8077 /* ELLIPSIS   Split(_ts0044,_ts0045)                                */
#define _tc0071 0x00000000 /*                                                                  */
#define _tc0072 0x00000000 /*                                                                  */
#define _tc0073 0x00000000 /*                                                                  */
#define _ts0000 0x01618000 /* Shift to  176 on states in shiftStateBitSet[0]                    Used by 1 terminal  [STRING]*/
#define _ts0001 0x018d8011 /* Shift to  198 on states in shiftStateBitSet[1]                    Used by 1 terminal  [STRING]*/
#define _ts0002 0x01a38033 /* Shift to  209 on states in shiftStateBitSet[3]                    Used by 1 terminal  [WHILE]*/
#define _ts0003 0x021d00f8 /* Shift to  270 from  248                                           Used by 1 terminal  [WHILE]*/
#define _ts0004 0x01398055 /* Shift to  156 on states in shiftStateBitSet[5]                    Used by 1 terminal  [LC]*/
#define _ts0005 0x00918066 /* Shift to   72 on states in shiftStateBitSet[6]                    Used by 1 terminal  [LC]*/
#define _ts0006 0x00000000 /* shiftFromStateArray    0, shiftToStateArrayTable    0             Used by 1 terminal  [LC]*/
#define _ts0007 0x009e8050 /* Split(_ts0005,_ts0006)                                            Used by 1 terminal  [LC]*/
#define _ts0008 0x01998033 /* Shift to  204 on states in shiftStateBitSet[3]                    Used by 1 terminal  [SEMI]*/
#define _ts0009 0x0010000a /* shiftFromStateArray    2, shiftToStateArrayTable    2             Used by 1 terminal  [SEMI]*/
#define _ts0010 0x00a18077 /* Shift to   80 on states in shiftStateBitSet[7]                    Used by 1 terminal  [COMMA]*/
#define _ts0011 0x00178088 /* Shift to   11 on states in shiftStateBitSet[8]                    Used by 1 terminal  [COMMA]*/
#define _ts0012 0x002c0019 /* shiftFromStateArray    3, shiftToStateArrayTable    3             Used by 1 terminal  [COMMA]*/
#define _ts0013 0x00aa8056 /* Split(_ts0011,_ts0012)                                            Used by 1 terminal  [COMMA]*/
#define _ts0014 0x00a78099 /* Shift to   83 on states in shiftStateBitSet[9]                    Used by 1 terminal  [EQUAL]*/
#define _ts0015 0x003a0021 /* shiftFromStateArray    4, shiftToStateArrayTable    4             Used by 1 terminal  [EQUAL]*/
#define _ts0016 0x00d380bb /* Shift to  105 on states in shiftStateBitSet[11]                   Used by 1 terminal  [COLON]*/
#define _ts0017 0x00400025 /* shiftFromStateArray    5, shiftToStateArrayTable    5             Used by 1 terminal  [COLON]*/
#define _ts0018 0x008b8000 /* Shift to   69 on states in shiftStateBitSet[0]                    Used by 1 terminal  [AND]*/
#define _ts0019 0x00b780ee /* Shift to   91 on states in shiftStateBitSet[14]                   Used by 1 terminal  [AND]*/
#define _ts0020 0x00858000 /* Shift to   66 on states in shiftStateBitSet[0]                    Used by 1 terminal  [MINUS]*/
#define _ts0021 0x00bf8132 /* Shift to   95 on states in shiftStateBitSet[18]                   Used by 1 terminal  [MINUS]*/
#define _ts0022 0x008d8000 /* Shift to   70 on states in shiftStateBitSet[0]                    Used by 1 terminal  [STAR]*/
#define _ts0023 0x00b18143 /* Shift to   88 on states in shiftStateBitSet[19]                   Used by 1 terminal  [STAR]*/
#define _ts0024 0x004a002b /* shiftFromStateArray    6, shiftToStateArrayTable    6             Used by 1 terminal  [STAR]*/
#define _ts0025 0x00c28062 /* Split(_ts0023,_ts0024)                                            Used by 1 terminal  [STAR]*/
#define _ts0026 0x00898000 /* Shift to   68 on states in shiftStateBitSet[0]                    Used by 1 terminal  [INCOP]*/
#define _ts0027 0x018f8154 /* Shift to  199 on states in shiftStateBitSet[20]                   Used by 1 terminal  [INCOP]*/
#define _ts0028 0x009d8154 /* Shift to   78 on states in shiftStateBitSet[20]                   Used by 1 terminal  [LB]*/
#define _ts0029 0x007d8165 /* Shift to   62 on states in shiftStateBitSet[21]                   Used by 1 terminal  [LB]*/
#define _ts0030 0x006a003c /* shiftFromStateArray    7, shiftToStateArrayTable    7             Used by 1 terminal  [LB]*/
#define _ts0031 0x00ce8068 /* Split(_ts0029,_ts0030)                                            Used by 1 terminal  [LB]*/
#define _ts0032 0x00838000 /* Shift to   65 on states in shiftStateBitSet[0]                    Used by 1 terminal  [LPAR]*/
#define _ts0033 0x009f8154 /* Shift to   79 on states in shiftStateBitSet[20]                   Used by 1 terminal  [LPAR]*/
#define _ts0034 0x008a004e /* shiftFromStateArray    9, shiftToStateArrayTable    9             Used by 1 terminal  [LPAR]*/
#define _ts0035 0x00d6806c /* Split(_ts0033,_ts0034)                                            Used by 1 terminal  [LPAR]*/
#define _ts0036 0x01758176 /* Shift to  186 on states in shiftStateBitSet[22]                   Used by 1 terminal  [TTYPE]*/
#define _ts0037 0x0100008b /* shiftFromStateArray   11, shiftToStateArrayTable   11             Used by 1 terminal  [TTYPE]*/
#define _ts0038 0x01298187 /* Shift to  148 on states in shiftStateBitSet[23]                   Used by 1 terminal  [CLASS]*/
#define _ts0039 0x01090034 /* Shift to  132 from   52                                           Used by 1 terminal  [CLASS]*/
#define _ts0040 0x01538198 /* Shift to  169 on states in shiftStateBitSet[24]                   Used by 1 terminal  [NAME]*/
#define _ts0041 0x012381a9 /* Shift to  145 on states in shiftStateBitSet[25]                   Used by 1 terminal  [NAME]*/
#define _ts0042 0x0104008e /* shiftFromStateArray   12, shiftToStateArrayTable   12             Used by 1 terminal  [NAME]*/
#define _ts0043 0x00e68074 /* Split(_ts0041,_ts0042)                                            Used by 1 terminal  [NAME]*/
#define _ts0044 0x017181ba /* Shift to  184 on states in shiftStateBitSet[26]                   Used by 1 terminal  [ELLIPSIS]*/
#define _ts0045 0x024b007a /* Shift to  293 from  122                                           Used by 1 terminal  [ELLIPSIS]*/

static const unsigned int shiftCodeArray[120] = {
   _tc0000,_tc0001,_tc0002,_tc0003,_tc0004,_tc0005,_tc0006,_tc0007,_tc0008,_tc0009
  ,_tc0010,_tc0011,_tc0012,_tc0013,_tc0014,_tc0015,_tc0016,_tc0017,_tc0018,_tc0019
  ,_tc0020,_tc0021,_tc0022,_tc0023,_tc0024,_tc0025,_tc0026,_tc0027,_tc0028,_tc0029
  ,_tc0030,_tc0031,_tc0032,_tc0033,_tc0034,_tc0035,_tc0036,_tc0037,_tc0038,_tc0039
  ,_tc0040,_tc0041,_tc0042,_tc0043,_tc0044,_tc0045,_tc0046,_tc0047,_tc0048,_tc0049
  ,_tc0050,_tc0051,_tc0052,_tc0053,_tc0054,_tc0055,_tc0056,_tc0057,_tc0058,_tc0059
  ,_tc0060,_tc0061,_tc0062,_tc0063,_tc0064,_tc0065,_tc0066,_tc0067,_tc0068,_tc0069
  ,_tc0070,_tc0071,_tc0072,_tc0073
  ,_ts0000,_ts0001,_ts0002,_ts0003,_ts0004,_ts0005,_ts0006,_ts0007,_ts0008,_ts0009
  ,_ts0010,_ts0011,_ts0012,_ts0013,_ts0014,_ts0015,_ts0016,_ts0017,_ts0018,_ts0019
  ,_ts0020,_ts0021,_ts0022,_ts0023,_ts0024,_ts0025,_ts0026,_ts0027,_ts0028,_ts0029
  ,_ts0030,_ts0031,_ts0032,_ts0033,_ts0034,_ts0035,_ts0036,_ts0037,_ts0038,_ts0039
  ,_ts0040,_ts0041,_ts0042,_ts0043,_ts0044,_ts0045
}; // Size of table:480(x86)/480(x64) bytes.

static const unsigned short shiftFromStateArrayTable[153] = {
     3,   0, 149, 152                                                                                        /*   0 Used by 1 terminal  [LC]                          */
  ,  5,   5,  10,  71,  74, 216                                                                              /*   1 Used by 1 terminal  [RC]                          */
  , 14,  18,  40,  41,  53,  96,  97, 141, 211, 212, 240, 246, 271, 290, 295                                 /*   2 Used by 1 terminal  [SEMI]                        */
  ,  7,  25, 141, 181, 190, 191, 216, 240                                                                    /*   3 Used by 1 terminal  [COMMA]                       */
  ,  3,   2,  39, 162                                                                                        /*   4 Used by 1 terminal  [EQUAL]                       */
  ,  5,  27,  39, 207, 214, 251                                                                              /*   5 Used by 1 terminal  [COLON]                       */
  , 16,  53,  55,  56,  58,  73,  76,  96, 102, 103, 115, 123, 126, 127, 129, 186, 223                       /*   6 Used by 1 terminal  [STAR]                        */
  ,  9,   1, 157, 158, 164, 220, 222, 242, 255, 256                                                          /*   7 Used by 1 terminal  [LB]                          */
  ,  7,  24,  59,  62, 112, 166, 188, 278                                                                    /*   8 Used by 1 terminal  [RB]                          */
  , 36,   1,   2,   3,   4,  20,  39,  51,  53,  55,  56,  58,  73,  76,  96, 102, 103, 115, 123, 126, 127   /*   9 Used by 1 terminal  [LPAR]                        */
      , 129, 144, 157, 158, 164, 170, 186, 208, 209, 210, 213, 223, 242, 270, 275, 279
  , 23,   4,  12,  22,  23,  46,  61,  63,  79, 155, 158, 181, 190, 191, 197, 233, 235, 256, 268, 269, 286   /*  10 Used by 1 terminal  [RPAR]                        */
      , 289, 292, 298
  ,  2,  52, 132                                                                                             /*  11 Used by 1 terminal  [TTYPE]                       */
  , 10,  71,  98, 106, 118, 119, 124, 128, 139, 200, 206                                                     /*  12 Used by 1 terminal  [NAME]                        */
}; // Size of table:308(x86)/312(x64) bytes.

static const unsigned short shiftToStateArrayTable[140] = {
     57, 159,  64                                                                                            /*   0 Used by 1 terminal  [LC]                          */
  , 195, 229, 201, 227, 253                                                                                  /*   1 Used by 1 terminal  [RC]                          */
  , 244, 265, 273, 142, 241, 245, 153, 249, 250, 263, 266, 121, 125, 297                                     /*   2 Used by 1 terminal  [SEMI]                        */
  , 113,  58, 101,  21, 101, 111, 115                                                                        /*   3 Used by 1 terminal  [COMMA]                       */
  ,  60, 116,  75                                                                                            /*   4 Used by 1 terminal  [EQUAL]                       */
  , 114, 117, 106, 252, 272                                                                                  /*   5 Used by 1 terminal  [COLON]                       */
  ,  55,  55,  55,  55, 102, 129,  55, 102, 102,  55, 126, 126, 126, 129, 129, 129                           /*   6 Used by 1 terminal  [STAR]                        */
  ,  59,  59,  59,  59, 112, 112,  59, 112, 112                                                              /*   7 Used by 1 terminal  [LB]                          */
  , 261, 165, 187, 277, 196, 224, 285                                                                        /*   8 Used by 1 terminal  [RB]                          */
  , 155,  61,  61,  61,  61,  61,  61,  56,  56,  56,  56, 103, 223,  56, 103, 103,  56, 127, 127, 127       /*   9 Used by 1 terminal  [LPAR]                        */
  , 223,  63, 155, 155, 155,  77, 223, 107, 108, 109, 110, 223, 155, 120, 122, 286
  , 193, 232, 258, 259,  49, 180, 189, 236, 177, 194, 218, 225, 226, 104, 260, 262, 279, 118, 119, 294       /*  10 Used by 1 terminal  [RPAR]                        */
  , 295,  50, 128
  , 133, 146                                                                                                 /*  11 Used by 1 terminal  [TTYPE]                       */
  , 215, 215, 215, 215, 215, 215, 215, 151, 234, 247                                                         /*  12 Used by 1 terminal  [NAME]                        */
}; // Size of table:280(x86)/280(x64) bytes.

static const unsigned char shiftStateBitSetTable[459] = { /* range:[0-128], bytes in bitset=17 */
   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x58,0xfe,0xe9,0xff,0xff,0x1e,0xff,0xf7,0x33,0x01 /*   0  55 states Used by 10 terminals [1-3,33,38-39,41-43,46]*/
  ,0x40,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*   1   2 states Used by 1 terminal  [STRING]           */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x50,0xa0,0x82,0x36,0x00,0x00,0x21,0x00,0x00,0x0c,0x00 /*   2  14 states Used by 3 terminals [TYPE STRUCT ENUM] */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x04,0x04,0xc0,0x10,0x01 /*   3   7 states Used by 14 terminals [7-18,20,23]      */
  ,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*   4   2 states Used by 1 terminal  [CATCH]            */
  ,0x02,0x00,0x08,0x00,0x00,0x00,0x06,0x00,0x80,0x00,0x00,0x00,0x04,0x04,0xc0,0x10,0x01 /*   5  11 states Used by 1 terminal  [LC]               */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x80,0x10,0x00,0x00 /*   6   4 states Used by 1 terminal  [LC]               */
  ,0x00,0x10,0x84,0x01,0x00,0x73,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*   7   9 states Used by 1 terminal  [COMMA]            */
  ,0x20,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*   8   2 states Used by 1 terminal  [COMMA]            */
  ,0x00,0x01,0x00,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*   9   6 states Used by 2 terminals [EQUAL ASSIGNOP]   */
  ,0x00,0x01,0x00,0x3e,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  10   7 states Used by 1 terminal  [QUEST]            */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x08,0x00,0x00 /*  11   2 states Used by 1 terminal  [COLON]            */
  ,0x00,0x02,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  12   2 states Used by 1 terminal  [OR]               */
  ,0x00,0x02,0x00,0x40,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  13   3 states Used by 1 terminal  [XOR]              */
  ,0x00,0x02,0x00,0x40,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  14   4 states Used by 1 terminal  [AND]              */
  ,0x00,0x02,0x00,0x40,0x1c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  15   5 states Used by 1 terminal  [EQUOP]            */
  ,0x00,0x02,0x00,0x40,0x1d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  16   6 states Used by 1 terminal  [RELOP]            */
  ,0x00,0x02,0x00,0xc0,0x1d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  17   7 states Used by 1 terminal  [SHIFTOP]          */
  ,0x00,0x02,0x00,0xc0,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  18   8 states Used by 2 terminals [PLUS MINUS]       */
  ,0x00,0x02,0x00,0xc0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  19  10 states Used by 2 terminals [STAR DIVOP]       */
  ,0x80,0xe0,0x03,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  20   7 states Used by 4 terminals [43-44,46,48]      */
  ,0x1c,0x00,0x10,0x00,0x80,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  21   6 states Used by 1 terminal  [LB]               */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xa0,0x02,0x20,0x00,0x00,0x20,0x00,0x00,0x00,0x00 /*  22   5 states Used by 1 terminal  [TTYPE]            */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x80,0x04,0x00,0x00,0x01,0x00,0x00,0x00,0x00 /*  23   4 states Used by 1 terminal  [CLASS]            */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x58,0x7e,0xe9,0xff,0xff,0x1a,0xfb,0x37,0x23,0x00 /*  24  48 states Used by 1 terminal  [NAME]             */
  ,0x01,0x08,0x20,0x00,0x00,0x00,0xa0,0x87,0x01,0x02,0x00,0x00,0xc1,0x00,0x08,0xc8,0x00 /*  25  18 states Used by 1 terminal  [NAME]             */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xa0,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00 /*  26   3 states Used by 1 terminal  [ELLIPSIS]         */
}; // Size of table:460(x86)/464(x64) bytes.

#define _rc0000 0x00037fff /*                                                       */
#define _rc0001 0x002b8000 /* Reduce by   21 on tokens in termBitSet[0]             */
#define _rc0002 0x00278000 /* Reduce by   19 on tokens in termBitSet[0]             */
#define _rc0003 0x00378007 /* Reduce by   27 on tokens in termBitSet[1]             */
#define _rc0004 0x00037fff /*                                                       */
#define _rc0005 0x00037fff /*                                                       */
#define _rc0006 0x00e7800e /* Reduce by  115 on tokens in termBitSet[2]             */
#define _rc0007 0x01358015 /* Reduce by  154 on tokens in termBitSet[3]             */
#define _rc0008 0x010b801c /* Reduce by  133 on tokens in termBitSet[4]             */
#define _rc0009 0x011f8023 /* Reduce by  143 on tokens in termBitSet[5]             */
#define _rc0010 0x00037fff /*                                                       */
#define _rc0011 0x00037fff /*                                                       */
#define _rc0012 0x00037fff /*                                                       */
#define _rc0013 0x00f18015 /* Reduce by  120 on tokens in termBitSet[3]             */
#define _rc0014 0x00f38015 /* Reduce by  121 on tokens in termBitSet[3]             */
#define _rc0015 0x00f78015 /* Reduce by  123 on tokens in termBitSet[3]             */
#define _rc0016 0x00f98015 /* Reduce by  124 on tokens in termBitSet[3]             */
#define _rc0017 0x00fb8015 /* Reduce by  125 on tokens in termBitSet[3]             */
#define _rc0018 0x00037fff /*                                                       */
#define _rc0019 0x00037fff /*                                                       */
#define _rc0020 0x0053802a /* Reduce by   41 on tokens in termBitSet[6]             */
#define _rc0021 0x00037fff /*                                                       */
#define _rc0022 0x00e78031 /* Reduce by  115 on tokens in termBitSet[7]             */
#define _rc0023 0x00037fff /*                                                       */
#define _rc0024 0x00037fff /*                                                       */
#define _rc0025 0x0105002f /* Reduce by  130 on RPAR                                */
#define _rc0026 0x0109801c /* Reduce by  132 on tokens in termBitSet[4]             */
#define _rc0027 0x00037fff /*                                                       */
#define _rc0028 0x010f801c /* Reduce by  135 on tokens in termBitSet[4]             */
#define _rc0029 0x0111801c /* Reduce by  136 on tokens in termBitSet[4]             */
#define _rc0030 0x011d8023 /* Reduce by  142 on tokens in termBitSet[5]             */
#define _rc0031 0x01218038 /* Reduce by  144 on tokens in termBitSet[8]             */
#define _rc0032 0x0123803f /* Reduce by  145 on tokens in termBitSet[9]             */
#define _rc0033 0x01298046 /* Reduce by  148 on tokens in termBitSet[10]            */
#define _rc0034 0x012b804d /* Reduce by  149 on tokens in termBitSet[11]            */
#define _rc0035 0x012d8054 /* Reduce by  150 on tokens in termBitSet[12]            */
#define _rc0036 0x012f805b /* Reduce by  151 on tokens in termBitSet[13]            */
#define _rc0037 0x01318062 /* Reduce by  152 on tokens in termBitSet[14]            */
#define _rc0038 0x01338062 /* Reduce by  153 on tokens in termBitSet[14]            */
#define _rc0039 0x00858000 /* Reduce by   66 on tokens in termBitSet[0]             */
#define _rc0040 0x00037fff /*                                                       */
#define _rc0041 0x00037fff /*                                                       */
#define _rc0042 0x00037fff /*                                                       */
#define _rc0043 0x00ef8015 /* Reduce by  119 on tokens in termBitSet[3]             */
#define _rc0044 0x00dd8069 /* Reduce by  110 on tokens in termBitSet[15]            */
#define _rc0045 0x01398069 /* Reduce by  156 on tokens in termBitSet[15]            */
#define _rc0046 0x00037fff /*                                                       */
#define _rc0047 0x00cb8070 /* Reduce by  101 on tokens in termBitSet[16]            */
#define _rc0048 0x010d8077 /* Reduce by  134 on tokens in termBitSet[17]            */
#define _rc0049 0x00037fff /*                                                       */
#define _rc0050 0x00037fff /*                                                       */
#define _rc0051 0x00d5002f /* Reduce by  106 on RPAR                                */
#define _rc0052 0x025a812e /* Split(_rs0000,_rs0001)                                */
#define _rc0053 0x00037fff /*                                                       */
#define _rc0054 0x0013807e /* Reduce by    9 on tokens in termBitSet[18]            */
#define _rc0055 0x00037fff /*                                                       */
#define _rc0056 0x00037fff /*                                                       */
#define _rc0057 0x00037fff /*                                                       */
#define _rc0058 0x00037fff /*                                                       */
#define _rc0059 0x00037fff /*                                                       */
#define _rc0060 0x00037fff /*                                                       */
#define _rc0061 0x00037fff /*                                                       */
#define _rc0062 0x00037fff /*                                                       */
#define _rc0063 0x00037fff /*                                                       */
#define _rc0064 0x00037fff /*                                                       */
#define _rc0065 0x00037fff /*                                                       */
#define _rc0066 0x00037fff /*                                                       */
#define _rc0067 0x00037fff /*                                                       */
#define _rc0068 0x00037fff /*                                                       */
#define _rc0069 0x00037fff /*                                                       */
#define _rc0070 0x00037fff /*                                                       */
#define _rc0071 0x00037fff /*                                                       */
#define _rc0072 0x00037fff /*                                                       */
#define _rc0073 0x00618085 /* Reduce by   48 on tokens in termBitSet[19]            */
#define _rc0074 0x00037fff /*                                                       */
#define _rc0075 0x00037fff /*                                                       */
#define _rc0076 0x0061808c /* Reduce by   48 on tokens in termBitSet[20]            */
#define _rc0077 0x00037fff /*                                                       */
#define _rc0078 0x00037fff /*                                                       */
#define _rc0079 0x00037fff /*                                                       */
#define _rc0080 0x00037fff /*                                                       */
#define _rc0081 0x00037fff /*                                                       */
#define _rc0082 0x00037fff /*                                                       */
#define _rc0083 0x00037fff /*                                                       */
#define _rc0084 0x00037fff /*                                                       */
#define _rc0085 0x00037fff /*                                                       */
#define _rc0086 0x00037fff /*                                                       */
#define _rc0087 0x00037fff /*                                                       */
#define _rc0088 0x00037fff /*                                                       */
#define _rc0089 0x00037fff /*                                                       */
#define _rc0090 0x00037fff /*                                                       */
#define _rc0091 0x00037fff /*                                                       */
#define _rc0092 0x00037fff /*                                                       */
#define _rc0093 0x00037fff /*                                                       */
#define _rc0094 0x00037fff /*                                                       */
#define _rc0095 0x00037fff /*                                                       */
#define _rc0096 0x00037fff /*                                                       */
#define _rc0097 0x00037fff /*                                                       */
#define _rc0098 0x00037fff /*                                                       */
#define _rc0099 0x00037fff /*                                                       */
#define _rc0100 0x00037fff /*                                                       */
#define _rc0101 0x00037fff /*                                                       */
#define _rc0102 0x00618085 /* Reduce by   48 on tokens in termBitSet[19]            */
#define _rc0103 0x0061808c /* Reduce by   48 on tokens in termBitSet[20]            */
#define _rc0104 0x00037fff /*                                                       */
#define _rc0105 0x00037fff /*                                                       */
#define _rc0106 0x00037fff /*                                                       */
#define _rc0107 0x00db002f /* Reduce by  109 on RPAR                                */
#define _rc0108 0x00db002f /* Reduce by  109 on RPAR                                */
#define _rc0109 0x01370017 /* Reduce by  155 on SEMI                                */
#define _rc0110 0x00037fff /*                                                       */
#define _rc0111 0x00037fff /*                                                       */
#define _rc0112 0x00037fff /*                                                       */
#define _rc0113 0x00037fff /*                                                       */
#define _rc0114 0x00037fff /*                                                       */
#define _rc0115 0x00037fff /*                                                       */
#define _rc0116 0x00037fff /*                                                       */
#define _rc0117 0x00037fff /*                                                       */
#define _rc0118 0x00037fff /*                                                       */
#define _rc0119 0x00037fff /*                                                       */
#define _rc0120 0x00db002f /* Reduce by  109 on RPAR                                */
#define _rc0121 0x00db0017 /* Reduce by  109 on SEMI                                */
#define _rc0122 0x00037fff /*                                                       */
#define _rc0123 0x00d7002f /* Reduce by  107 on RPAR                                */
#define _rc0124 0x00037fff /*                                                       */
#define _rc0125 0x0137002f /* Reduce by  155 on RPAR                                */
#define _rc0126 0x00037fff /*                                                       */
#define _rc0127 0x00037fff /*                                                       */
#define _rc0128 0x00037fff /*                                                       */
#define _rc0129 0x00618085 /* Reduce by   48 on tokens in termBitSet[19]            */
#define _rc0130 0x00038093 /* Reduce by    1 on tokens in termBitSet[21]            */
#define _rc0131 0x00058093 /* Reduce by    2 on tokens in termBitSet[21]            */
#define _rc0132 0x001b809a /* Reduce by   13 on tokens in termBitSet[22]            */
#define _rc0133 0x0011807e /* Reduce by    8 on tokens in termBitSet[18]            */
#define _rc0134 0x001580a1 /* Reduce by   10 on tokens in termBitSet[23]            */
#define _rc0135 0x001980a1 /* Reduce by   12 on tokens in termBitSet[23]            */
#define _rc0136 0x001d80a8 /* Reduce by   14 on tokens in termBitSet[24]            */
#define _rc0137 0x001f80a8 /* Reduce by   15 on tokens in termBitSet[24]            */
#define _rc0138 0x002180a8 /* Reduce by   16 on tokens in termBitSet[24]            */
#define _rc0139 0x00710015 /* Reduce by   56 on LC                                  */
#define _rc0140 0x009580af /* Reduce by   74 on tokens in termBitSet[25]            */
#define _rc0141 0x00037fff /*                                                       */
#define _rc0142 0x00098093 /* Reduce by    4 on tokens in termBitSet[21]            */
#define _rc0143 0x00238000 /* Reduce by   17 on tokens in termBitSet[0]             */
#define _rc0144 0x002d80b6 /* Reduce by   22 on tokens in termBitSet[26]            */
#define _rc0145 0x014980bd /* Reduce by  164 on tokens in termBitSet[27]            */
#define _rc0146 0x000f807e /* Reduce by    7 on tokens in termBitSet[18]            */
#define _rc0147 0x001780a1 /* Reduce by   11 on tokens in termBitSet[23]            */
#define _rc0148 0x001b80a1 /* Reduce by   13 on tokens in termBitSet[23]            */
#define _rc0149 0x00037fff /*                                                       */
#define _rc0150 0x025e8130 /* Split(_rs0002,_rs0003)                                */
#define _rc0151 0x007580c4 /* Reduce by   58 on tokens in termBitSet[28]            */
#define _rc0152 0x009180a8 /* Reduce by   72 on tokens in termBitSet[24]            */
#define _rc0153 0x00078093 /* Reduce by    3 on tokens in termBitSet[21]            */
#define _rc0154 0x000b8093 /* Reduce by    5 on tokens in termBitSet[21]            */
#define _rc0155 0x00037fff /*                                                       */
#define _rc0156 0x00a180cb /* Reduce by   80 on tokens in termBitSet[29]            */
#define _rc0157 0x003b80d2 /* Reduce by   29 on tokens in termBitSet[30]            */
#define _rc0158 0x00037fff /*                                                       */
#define _rc0159 0x007780d9 /* Reduce by   59 on tokens in termBitSet[31]            */
#define _rc0160 0x008d80a8 /* Reduce by   70 on tokens in termBitSet[24]            */
#define _rc0161 0x009780e0 /* Reduce by   75 on tokens in termBitSet[32]            */
#define _rc0162 0x009b80e0 /* Reduce by   77 on tokens in termBitSet[32]            */
#define _rc0163 0x00258000 /* Reduce by   18 on tokens in termBitSet[0]             */
#define _rc0164 0x002b8000 /* Reduce by   21 on tokens in termBitSet[0]             */
#define _rc0165 0x003d80e7 /* Reduce by   30 on tokens in termBitSet[33]            */
#define _rc0166 0x00037fff /*                                                       */
#define _rc0167 0x00e1800e /* Reduce by  112 on tokens in termBitSet[2]             */
#define _rc0168 0x00e3800e /* Reduce by  113 on tokens in termBitSet[2]             */
#define _rc0169 0x00e5800e /* Reduce by  114 on tokens in termBitSet[2]             */
#define _rc0170 0x00037fff /*                                                       */
#define _rc0171 0x013b80ee /* Reduce by  157 on tokens in termBitSet[34]            */
#define _rc0172 0x011380f5 /* Reduce by  137 on tokens in termBitSet[35]            */
#define _rc0173 0x011580f5 /* Reduce by  138 on tokens in termBitSet[35]            */
#define _rc0174 0x011980fc /* Reduce by  140 on tokens in termBitSet[36]            */
#define _rc0175 0x011b80fc /* Reduce by  141 on tokens in termBitSet[36]            */
#define _rc0176 0x01458103 /* Reduce by  162 on tokens in termBitSet[37]            */
#define _rc0177 0x004380e7 /* Reduce by   33 on tokens in termBitSet[33]            */
#define _rc0178 0x00298000 /* Reduce by   20 on tokens in termBitSet[0]             */
#define _rc0179 0x013d810a /* Reduce by  158 on tokens in termBitSet[38]            */
#define _rc0180 0x002f8111 /* Reduce by   23 on tokens in termBitSet[39]            */
#define _rc0181 0x00037fff /*                                                       */
#define _rc0182 0x004f802a /* Reduce by   39 on tokens in termBitSet[6]             */
#define _rc0183 0x0055802a /* Reduce by   42 on tokens in termBitSet[6]             */
#define _rc0184 0x0057802a /* Reduce by   43 on tokens in termBitSet[6]             */
#define _rc0185 0x00598118 /* Reduce by   44 on tokens in termBitSet[40]            */
#define _rc0186 0x00618085 /* Reduce by   48 on tokens in termBitSet[19]            */
#define _rc0187 0x00338111 /* Reduce by   25 on tokens in termBitSet[39]            */
#define _rc0188 0x00037fff /*                                                       */
#define _rc0189 0x004580e7 /* Reduce by   34 on tokens in termBitSet[33]            */
#define _rc0190 0x00037fff /*                                                       */
#define _rc0191 0x00037fff /*                                                       */
#define _rc0192 0x004b802a /* Reduce by   37 on tokens in termBitSet[6]             */
#define _rc0193 0x00398111 /* Reduce by   28 on tokens in termBitSet[39]            */
#define _rc0194 0x004180e7 /* Reduce by   32 on tokens in termBitSet[33]            */
#define _rc0195 0x008f80a8 /* Reduce by   71 on tokens in termBitSet[24]            */
#define _rc0196 0x003f80e7 /* Reduce by   31 on tokens in termBitSet[33]            */
#define _rc0197 0x00037fff /*                                                       */
#define _rc0198 0x01478103 /* Reduce by  163 on tokens in termBitSet[37]            */
#define _rc0199 0x00f5800e /* Reduce by  122 on tokens in termBitSet[2]             */
#define _rc0200 0x00037fff /*                                                       */
#define _rc0201 0x009f811f /* Reduce by   79 on tokens in termBitSet[41]            */
#define _rc0202 0x00a380cb /* Reduce by   81 on tokens in termBitSet[29]            */
#define _rc0203 0x00a580cb /* Reduce by   82 on tokens in termBitSet[29]            */
#define _rc0204 0x00a78070 /* Reduce by   83 on tokens in termBitSet[16]            */
#define _rc0205 0x00a98070 /* Reduce by   84 on tokens in termBitSet[16]            */
#define _rc0206 0x00037fff /*                                                       */
#define _rc0207 0x00037fff /*                                                       */
#define _rc0208 0x00037fff /*                                                       */
#define _rc0209 0x00037fff /*                                                       */
#define _rc0210 0x00037fff /*                                                       */
#define _rc0211 0x00037fff /*                                                       */
#define _rc0212 0x00037fff /*                                                       */
#define _rc0213 0x00037fff /*                                                       */
#define _rc0214 0x00037fff /*                                                       */
#define _rc0215 0x02628132 /* Split(_rs0004,_rs0005)                                */
#define _rc0216 0x00037fff /*                                                       */
#define _rc0217 0x014180e0 /* Reduce by  160 on tokens in termBitSet[32]            */
#define _rc0218 0x00318111 /* Reduce by   24 on tokens in termBitSet[39]            */
#define _rc0219 0x005b8118 /* Reduce by   45 on tokens in termBitSet[40]            */
#define _rc0220 0x005d802a /* Reduce by   46 on tokens in termBitSet[6]             */
#define _rc0221 0x002d812d /* Reduce by   22 on tokens in termBitSet[43]            */
#define _rc0222 0x005f802a /* Reduce by   47 on tokens in termBitSet[6]             */
#define _rc0223 0x0061808c /* Reduce by   48 on tokens in termBitSet[20]            */
#define _rc0224 0x00358111 /* Reduce by   26 on tokens in termBitSet[39]            */
#define _rc0225 0x004780e7 /* Reduce by   35 on tokens in termBitSet[33]            */
#define _rc0226 0x004980e7 /* Reduce by   36 on tokens in termBitSet[33]            */
#define _rc0227 0x006d80a8 /* Reduce by   54 on tokens in termBitSet[24]            */
#define _rc0228 0x007980d9 /* Reduce by   60 on tokens in termBitSet[31]            */
#define _rc0229 0x009380a8 /* Reduce by   73 on tokens in termBitSet[24]            */
#define _rc0230 0x009980e0 /* Reduce by   76 on tokens in termBitSet[32]            */
#define _rc0231 0x009d80e0 /* Reduce by   78 on tokens in termBitSet[32]            */
#define _rc0232 0x00df800e /* Reduce by  111 on tokens in termBitSet[2]             */
#define _rc0233 0x00037fff /*                                                       */
#define _rc0234 0x00ff800e /* Reduce by  127 on tokens in termBitSet[2]             */
#define _rc0235 0x00037fff /*                                                       */
#define _rc0236 0x0103800e /* Reduce by  129 on tokens in termBitSet[2]             */
#define _rc0237 0x011780fc /* Reduce by  139 on tokens in termBitSet[36]            */
#define _rc0238 0x01258015 /* Reduce by  146 on tokens in termBitSet[3]             */
#define _rc0239 0x01278015 /* Reduce by  147 on tokens in termBitSet[3]             */
#define _rc0240 0x00037fff /*                                                       */
#define _rc0241 0x007d80cb /* Reduce by   62 on tokens in termBitSet[29]            */
#define _rc0242 0x00838000 /* Reduce by   65 on tokens in termBitSet[0]             */
#define _rc0243 0x007f8000 /* Reduce by   63 on tokens in termBitSet[0]             */
#define _rc0244 0x00ab8070 /* Reduce by   85 on tokens in termBitSet[16]            */
#define _rc0245 0x00ad8070 /* Reduce by   86 on tokens in termBitSet[16]            */
#define _rc0246 0x00037fff /*                                                       */
#define _rc0247 0x00d90017 /* Reduce by  108 on SEMI                                */
#define _rc0248 0x00037fff /*                                                       */
#define _rc0249 0x00bf8070 /* Reduce by   95 on tokens in termBitSet[16]            */
#define _rc0250 0x00c18070 /* Reduce by   96 on tokens in termBitSet[16]            */
#define _rc0251 0x00037fff /*                                                       */
#define _rc0252 0x00c78070 /* Reduce by   99 on tokens in termBitSet[16]            */
#define _rc0253 0x013f810a /* Reduce by  159 on tokens in termBitSet[38]            */
#define _rc0254 0x0051802a /* Reduce by   40 on tokens in termBitSet[6]             */
#define _rc0255 0x0065802a /* Reduce by   50 on tokens in termBitSet[6]             */
#define _rc0256 0x00037fff /*                                                       */
#define _rc0257 0x004d802a /* Reduce by   38 on tokens in termBitSet[6]             */
#define _rc0258 0x00e9800e /* Reduce by  116 on tokens in termBitSet[2]             */
#define _rc0259 0x00eb800e /* Reduce by  117 on tokens in termBitSet[2]             */
#define _rc0260 0x00ed800e /* Reduce by  118 on tokens in termBitSet[2]             */
#define _rc0261 0x00fd800e /* Reduce by  126 on tokens in termBitSet[2]             */
#define _rc0262 0x0101800e /* Reduce by  128 on tokens in termBitSet[2]             */
#define _rc0263 0x007b80cb /* Reduce by   61 on tokens in termBitSet[29]            */
#define _rc0264 0x008b8000 /* Reduce by   69 on tokens in termBitSet[0]             */
#define _rc0265 0x00af8070 /* Reduce by   87 on tokens in termBitSet[16]            */
#define _rc0266 0x00b18070 /* Reduce by   88 on tokens in termBitSet[16]            */
#define _rc0267 0x00b38070 /* Reduce by   89 on tokens in termBitSet[16]            */
#define _rc0268 0x00037fff /*                                                       */
#define _rc0269 0x00037fff /*                                                       */
#define _rc0270 0x00037fff /*                                                       */
#define _rc0271 0x00037fff /*                                                       */
#define _rc0272 0x00c58070 /* Reduce by   98 on tokens in termBitSet[16]            */
#define _rc0273 0x00c98070 /* Reduce by  100 on tokens in termBitSet[16]            */
#define _rc0274 0x00cd8134 /* Reduce by  102 on tokens in termBitSet[44]            */
#define _rc0275 0x00037fff /*                                                       */
#define _rc0276 0x014380e0 /* Reduce by  161 on tokens in termBitSet[32]            */
#define _rc0277 0x00678085 /* Reduce by   51 on tokens in termBitSet[19]            */
#define _rc0278 0x00037fff /*                                                       */
#define _rc0279 0x006b8085 /* Reduce by   53 on tokens in termBitSet[19]            */
#define _rc0280 0x0107002f /* Reduce by  131 on RPAR                                */
#define _rc0281 0x00818000 /* Reduce by   64 on tokens in termBitSet[0]             */
#define _rc0282 0x00878000 /* Reduce by   67 on tokens in termBitSet[0]             */
#define _rc0283 0x00898000 /* Reduce by   68 on tokens in termBitSet[0]             */
#define _rc0284 0x00cf8134 /* Reduce by  103 on tokens in termBitSet[44]            */
#define _rc0285 0x00698085 /* Reduce by   52 on tokens in termBitSet[19]            */
#define _rc0286 0x00037fff /*                                                       */
#define _rc0287 0x00b580cb /* Reduce by   90 on tokens in termBitSet[29]            */
#define _rc0288 0x00b98070 /* Reduce by   92 on tokens in termBitSet[16]            */
#define _rc0289 0x00037fff /*                                                       */
#define _rc0290 0x00037fff /*                                                       */
#define _rc0291 0x00c38070 /* Reduce by   97 on tokens in termBitSet[16]            */
#define _rc0292 0x00037fff /*                                                       */
#define _rc0293 0x00d3002f /* Reduce by  105 on RPAR                                */
#define _rc0294 0x00638085 /* Reduce by   49 on tokens in termBitSet[19]            */
#define _rc0295 0x00037fff /*                                                       */
#define _rc0296 0x00b78070 /* Reduce by   91 on tokens in termBitSet[16]            */
#define _rc0297 0x00bb8070 /* Reduce by   93 on tokens in termBitSet[16]            */
#define _rc0298 0x00037fff /*                                                       */
#define _rc0299 0x00d18134 /* Reduce by  104 on tokens in termBitSet[44]            */
#define _rc0300 0x00bd8070 /* Reduce by   94 on tokens in termBitSet[16]            */
#define _rs0000 0x000d807e /* Reduce by    6 on tokens in termBitSet[18]  Used by 1 state  [52]*/
#define _rs0001 0x00010000 /* Reduce by    0 (Accept) on EOI              Used by 1 state  [52]*/
#define _rs0002 0x006f80a8 /* Reduce by   55 on tokens in termBitSet[24]  Used by 1 state  [150]*/
#define _rs0003 0x00730015 /* Reduce by   57 on LC                        Used by 1 state  [150]*/
#define _rs0004 0x00e58126 /* Reduce by  114 on tokens in termBitSet[42]  Used by 1 state  [215]*/
#define _rs0005 0x00d9001c /* Reduce by  108 on COLON                     Used by 1 state  [215]*/

static const unsigned int reduceCodeArray[307] = {
   _rc0000,_rc0001,_rc0002,_rc0003,_rc0004,_rc0005,_rc0006,_rc0007,_rc0008,_rc0009
  ,_rc0010,_rc0011,_rc0012,_rc0013,_rc0014,_rc0015,_rc0016,_rc0017,_rc0018,_rc0019
  ,_rc0020,_rc0021,_rc0022,_rc0023,_rc0024,_rc0025,_rc0026,_rc0027,_rc0028,_rc0029
  ,_rc0030,_rc0031,_rc0032,_rc0033,_rc0034,_rc0035,_rc0036,_rc0037,_rc0038,_rc0039
  ,_rc0040,_rc0041,_rc0042,_rc0043,_rc0044,_rc0045,_rc0046,_rc0047,_rc0048,_rc0049
  ,_rc0050,_rc0051,_rc0052,_rc0053,_rc0054,_rc0055,_rc0056,_rc0057,_rc0058,_rc0059
  ,_rc0060,_rc0061,_rc0062,_rc0063,_rc0064,_rc0065,_rc0066,_rc0067,_rc0068,_rc0069
  ,_rc0070,_rc0071,_rc0072,_rc0073,_rc0074,_rc0075,_rc0076,_rc0077,_rc0078,_rc0079
  ,_rc0080,_rc0081,_rc0082,_rc0083,_rc0084,_rc0085,_rc0086,_rc0087,_rc0088,_rc0089
  ,_rc0090,_rc0091,_rc0092,_rc0093,_rc0094,_rc0095,_rc0096,_rc0097,_rc0098,_rc0099
  ,_rc0100,_rc0101,_rc0102,_rc0103,_rc0104,_rc0105,_rc0106,_rc0107,_rc0108,_rc0109
  ,_rc0110,_rc0111,_rc0112,_rc0113,_rc0114,_rc0115,_rc0116,_rc0117,_rc0118,_rc0119
  ,_rc0120,_rc0121,_rc0122,_rc0123,_rc0124,_rc0125,_rc0126,_rc0127,_rc0128,_rc0129
  ,_rc0130,_rc0131,_rc0132,_rc0133,_rc0134,_rc0135,_rc0136,_rc0137,_rc0138,_rc0139
  ,_rc0140,_rc0141,_rc0142,_rc0143,_rc0144,_rc0145,_rc0146,_rc0147,_rc0148,_rc0149
  ,_rc0150,_rc0151,_rc0152,_rc0153,_rc0154,_rc0155,_rc0156,_rc0157,_rc0158,_rc0159
  ,_rc0160,_rc0161,_rc0162,_rc0163,_rc0164,_rc0165,_rc0166,_rc0167,_rc0168,_rc0169
  ,_rc0170,_rc0171,_rc0172,_rc0173,_rc0174,_rc0175,_rc0176,_rc0177,_rc0178,_rc0179
  ,_rc0180,_rc0181,_rc0182,_rc0183,_rc0184,_rc0185,_rc0186,_rc0187,_rc0188,_rc0189
  ,_rc0190,_rc0191,_rc0192,_rc0193,_rc0194,_rc0195,_rc0196,_rc0197,_rc0198,_rc0199
  ,_rc0200,_rc0201,_rc0202,_rc0203,_rc0204,_rc0205,_rc0206,_rc0207,_rc0208,_rc0209
  ,_rc0210,_rc0211,_rc0212,_rc0213,_rc0214,_rc0215,_rc0216,_rc0217,_rc0218,_rc0219
  ,_rc0220,_rc0221,_rc0222,_rc0223,_rc0224,_rc0225,_rc0226,_rc0227,_rc0228,_rc0229
  ,_rc0230,_rc0231,_rc0232,_rc0233,_rc0234,_rc0235,_rc0236,_rc0237,_rc0238,_rc0239
  ,_rc0240,_rc0241,_rc0242,_rc0243,_rc0244,_rc0245,_rc0246,_rc0247,_rc0248,_rc0249
  ,_rc0250,_rc0251,_rc0252,_rc0253,_rc0254,_rc0255,_rc0256,_rc0257,_rc0258,_rc0259
  ,_rc0260,_rc0261,_rc0262,_rc0263,_rc0264,_rc0265,_rc0266,_rc0267,_rc0268,_rc0269
  ,_rc0270,_rc0271,_rc0272,_rc0273,_rc0274,_rc0275,_rc0276,_rc0277,_rc0278,_rc0279
  ,_rc0280,_rc0281,_rc0282,_rc0283,_rc0284,_rc0285,_rc0286,_rc0287,_rc0288,_rc0289
  ,_rc0290,_rc0291,_rc0292,_rc0293,_rc0294,_rc0295,_rc0296,_rc0297,_rc0298,_rc0299
  ,_rc0300
  ,_rs0000,_rs0001,_rs0002,_rs0003,_rs0004,_rs0005
}; // Size of table:1.228(x86)/1.232(x64) bytes.

#define termArrayTable   nullptr
#define reduceArrayTable nullptr

static const unsigned char termBitSetTable[315] = { /* range:[0-52], bytes in bitset=7 */
   0x00,0x00,0x80,0x01,0x00,0x00,0x00 /*   0   2 tokens Used by 13 states [1-2,39,143,163-164,178,242-243,264,281-283]*/
  ,0x00,0x00,0x80,0x13,0x00,0x80,0x00 /*   1   5 tokens Used by 1 state  [3]                   */
  ,0x00,0x00,0xc0,0xff,0xff,0xf9,0x01 /*   2  25 tokens Used by 13 states [6,167-169,199,232,234,236,258-262]*/
  ,0x00,0x00,0xc0,0xff,0xff,0xa1,0x00 /*   3  21 tokens Used by 9 states [7,13-17,43,238-239]  */
  ,0x00,0x00,0xc0,0x11,0x00,0xa0,0x00 /*   4   6 tokens Used by 4 states [8,26,28-29]          */
  ,0x00,0x00,0xc0,0x7f,0x00,0xa0,0x00 /*   5  11 tokens Used by 2 states [9,30]                */
  ,0x00,0x00,0x00,0x01,0x00,0x80,0x00 /*   6   2 tokens Used by 10 states [20,182-184,192,220,222,254-255,257]*/
  ,0x00,0x00,0x00,0xef,0xff,0x59,0x01 /*   7  20 tokens Used by 1 state  [22]                  */
  ,0x00,0x00,0xc0,0xff,0x0f,0xa0,0x00 /*   8  16 tokens Used by 1 state  [31]                  */
  ,0x00,0x00,0xc0,0xff,0x07,0xa0,0x00 /*   9  15 tokens Used by 1 state  [32]                  */
  ,0x00,0x00,0xc0,0xff,0x1f,0xa0,0x00 /*  10  17 tokens Used by 1 state  [33]                  */
  ,0x00,0x00,0xc0,0xff,0x03,0xa0,0x00 /*  11  14 tokens Used by 1 state  [34]                  */
  ,0x00,0x00,0xc0,0xff,0x01,0xa0,0x00 /*  12  13 tokens Used by 1 state  [35]                  */
  ,0x00,0x00,0xc0,0xff,0x00,0xa0,0x00 /*  13  12 tokens Used by 1 state  [36]                  */
  ,0x00,0x00,0xc0,0xff,0x7f,0xa0,0x00 /*  14  19 tokens Used by 2 states [37-38]               */
  ,0x00,0x00,0x80,0x00,0x00,0x80,0x00 /*  15   2 tokens Used by 2 states [44-45]               */
  ,0xfe,0xff,0xf7,0x00,0xc2,0x4e,0x1c /*  16  32 tokens Used by 18 states [47,204-205,244-245,249-250,252,265-267,272-273,288,291,296-297,300]*/
  ,0x00,0x00,0xc0,0x17,0x00,0xa0,0x00 /*  17   8 tokens Used by 1 state  [48]                  */
  ,0x00,0x00,0x80,0x00,0x80,0x40,0x08 /*  18   4 tokens Used by 4 states [52,54,133,146]       */
  ,0x00,0x00,0x00,0x01,0x00,0x90,0x00 /*  19   3 tokens Used by 8 states [73,102,129,186,277,279,285,294]*/
  ,0x00,0x00,0x00,0x00,0x00,0x90,0x00 /*  20   2 tokens Used by 3 states [76,103,223]          */
  ,0x71,0x00,0x80,0x00,0x80,0x40,0x0e /*  21  10 tokens Used by 5 states [130-131,142,153-154] */
  ,0x70,0x00,0x80,0x00,0x80,0x40,0x0c /*  22   8 tokens Used by 1 state  [132]                 */
  ,0x70,0x00,0x80,0x10,0x80,0x40,0x0c /*  23   9 tokens Used by 4 states [134-135,147-148]     */
  ,0x70,0x00,0x80,0x11,0x80,0xd0,0x0c /*  24  12 tokens Used by 9 states [136-138,150,152,160,195,227,229]*/
  ,0x00,0x00,0x20,0x00,0x00,0x00,0x08 /*  25   2 tokens Used by 1 state  [140]                 */
  ,0x00,0x00,0x80,0x13,0x00,0x90,0x00 /*  26   6 tokens Used by 1 state  [144]                 */
  ,0x70,0x00,0xe0,0x13,0x80,0xd0,0x0c /*  27  15 tokens Used by 1 state  [145]                 */
  ,0x70,0x00,0xa0,0x11,0x80,0xd0,0x0c /*  28  13 tokens Used by 1 state  [151]                 */
  ,0xfe,0xff,0xf7,0x00,0xc2,0x4e,0x0c /*  29  31 tokens Used by 6 states [156,202-203,241,263,287]*/
  ,0x00,0x00,0xa0,0x01,0x00,0x80,0x00 /*  30   4 tokens Used by 1 state  [157]                 */
  ,0x70,0x00,0x40,0x00,0x00,0x00,0x04 /*  31   5 tokens Used by 2 states [159,228]             */
  ,0x00,0x00,0x40,0x01,0x00,0x00,0x00 /*  32   2 tokens Used by 6 states [161-162,217,230-231,276]*/
  ,0x00,0x00,0xa0,0x01,0x00,0xd0,0x00 /*  33   6 tokens Used by 7 states [165,177,189,194,196,225-226]*/
  ,0x00,0x00,0xc0,0x11,0x00,0x20,0x00 /*  34   5 tokens Used by 1 state  [171]                 */
  ,0x00,0x00,0xc0,0x1f,0x00,0xa0,0x00 /*  35   9 tokens Used by 2 states [172-173]             */
  ,0x00,0x00,0xc0,0x3f,0x00,0xa0,0x00 /*  36  10 tokens Used by 3 states [174-175,237]         */
  ,0x02,0x00,0xc0,0xff,0xff,0xf9,0x01 /*  37  26 tokens Used by 2 states [176,198]             */
  ,0x00,0x00,0xc0,0x01,0x00,0x00,0x00 /*  38   3 tokens Used by 2 states [179,253]             */
  ,0x00,0x00,0x80,0x13,0x00,0xd0,0x00 /*  39   7 tokens Used by 5 states [180,187,193,218,224] */
  ,0x70,0x00,0x00,0x01,0x80,0xd0,0x08 /*  40   9 tokens Used by 2 states [185,219]             */
  ,0xff,0xff,0xff,0x00,0xc2,0x4e,0x1e /*  41  35 tokens Used by 1 state  [201]                 */
  ,0x00,0x00,0x80,0xef,0xff,0x59,0x01 /*  42  21 tokens Used by 1 state  [215]                 */
  ,0x00,0x00,0x00,0x01,0x00,0xd0,0x00 /*  43   4 tokens Used by 1 state  [221]                 */
  ,0xfe,0xff,0xff,0x00,0xc2,0x4e,0x1c /*  44  33 tokens Used by 3 states [274,284,299]         */
}; // Size of table:316(x86)/320(x64) bytes.

#define _nc0000 0x00000000 /*                                                       */
#define _nc0001 0x00697fff /* ext_def_list      Shift to   52 No check (1 state )   */
#define _nc0002 0x01077fff /* ext_def           Shift to  131 No check (1 state )   */
#define _nc0003 0x006b7fff /* opt_specifiers    Shift to   53 No check (1 state )   */
#define _nc0004 0x011b7fff /* ext_decl_list     Shift to  141 No check (1 state )   */
#define _nc0005 0x00688035 /* funct_decl        Split(_ns0000,_ns0001)              */
#define _nc0006 0x006c8037 /* compound_stmt     Split(_ns0002,_ns0003)              */
#define _nc0007 0x00708039 /* specifiers        Split(_ns0004,_ns0005)              */
#define _nc0008 0x0074803b /* type_or_class     Split(_ns0006,_ns0007)              */
#define _nc0009 0x0078803f /* type_specifier    Split(_ns0008,_ns0011)              */
#define _nc0010 0x01137fff /* enum_specifier    Shift to  137 No check (14 states)  */
#define _nc0011 0x01157fff /* struct_specifier  Shift to  138 No check (14 states)  */
#define _nc0012 0x0010000a /* ext_decl          stateArray    2, newStateArray    2 */
#define _nc0013 0x00808043 /* var_decl          Split(_ns0012,_ns0015)              */
#define _nc0014 0x00200014 /* initializer       stateArray    4, newStateArray    4 */
#define _nc0015 0x00888047 /* name              Split(_ns0016,_ns0019)              */
#define _nc0016 0x00340020 /* var_list          stateArray    6, newStateArray    6 */
#define _nc0017 0x00380023 /* const_expr        stateArray    7, newStateArray    7 */
#define _nc0018 0x017d7fff /* name_list         Shift to  190 No check (1 state )   */
#define _nc0019 0x00908049 /* param_declaration Split(_ns0020,_ns0021)              */
#define _nc0020 0x0094804d /* type              Split(_ns0022,_ns0025)              */
#define _nc0021 0x009c804f /* abstract_decl     Split(_ns0026,_ns0027)              */
#define _nc0022 0x00a08053 /* abs_decl          Split(_ns0028,_ns0031)              */
#define _nc0023 0x012b7fff /* opt_tag           Shift to  149 No check (1 state )   */
#define _nc0024 0x00957fff /* def_list          Shift to   74 No check (1 state )   */
#define _nc0025 0x012d7fff /* tag               Shift to  150 No check (1 state )   */
#define _nc0026 0x00500032 /* def               stateArray   10, newStateArray   10 */
#define _nc0027 0x01e17fff /* decl_list         Shift to  240 No check (1 state )   */
#define _nc0028 0x00540035 /* decl              stateArray   11, newStateArray   11 */
#define _nc0029 0x00017fff /* enum              Shift to    0 No check (14 states)  */
#define _nc0030 0x01417fff /* opt_enum_list     Shift to  160 No check (1 state )   */
#define _nc0031 0x00580038 /* enumerator_list   stateArray   12, newStateArray   12 */
#define _nc0032 0x00a88055 /* enumerator        Split(_ns0032,_ns0033)              */
#define _nc0033 0x008f7fff /* stmt_list         Shift to   71 No check (1 state )   */
#define _nc0034 0x005c003b /* statement         stateArray   13, newStateArray   13 */
#define _nc0035 0x00ac8059 /* expr              Split(_ns0034,_ns0037)              */
#define _nc0036 0x00b4805b /* target            Split(_ns0038,_ns0039)              */
#define _nc0037 0x008a0054 /* test              stateArray   15, newStateArray   15 */
#define _nc0038 0x00920059 /* opt_expr          stateArray   16, newStateArray   16 */
#define _nc0039 0x005f7fff /* handler_list      Shift to   47 No check (1 state )   */
#define _nc0040 0x0096005c /* exception_handler stateArray   17, newStateArray   17 */
#define _nc0041 0x02497fff /* catch_type        Shift to  292 No check (1 state )   */
#define _nc0042 0x00b8805d /* unary             Split(_ns0040,_ns0041)              */
#define _nc0043 0x00bc805f /* string_const      Split(_ns0042,_ns0043)              */
#define _nc0044 0x00a60066 /* args              stateArray   19, newStateArray   19 */
#define _nc0045 0x00c08063 /* non_comma_expr    Split(_ns0044,_ns0047)              */
#define _nc0046 0x01597fff /* or_expr           Shift to  172 No check (37 states)  */
#define _nc0047 0x015b7fff /* or_list           Shift to  173 No check (37 states)  */
#define _nc0048 0x00c88065 /* and_expr          Split(_ns0048,_ns0049)              */
#define _nc0049 0x015f7fff /* and_list          Shift to  175 No check (38 states)  */
#define _nc0050 0x00cc8067 /* binary            Split(_ns0050,_ns0051)              */
#define _nc0051 0x01b17fff /* initializer_list  Shift to  216 No check (1 state )   */
#define _ns0000 0x01e58000 /* Shift to  242 on states in succStateBitSet[0]          Used by 1 ntIndex   [funct_decl]*/
#define _ns0001 0x00000000 /* stateArray    0, newStateArray    0                    Used by 1 ntIndex   [funct_decl]*/
#define _ns0002 0x019b800a /* Shift to  205 on states in succStateBitSet[1]          Used by 1 ntIndex   [compound_stmt]*/
#define _ns0003 0x00080005 /* stateArray    1, newStateArray    1                    Used by 1 ntIndex   [compound_stmt]*/
#define _ns0004 0x00c18014 /* Shift to   96 on states in succStateBitSet[2]          Used by 1 ntIndex   [specifiers]*/
#define _ns0005 0x006d7fff /* Shift to   54 No check (1 state )                      Used by 1 ntIndex   [specifiers]*/
#define _ns0006 0x010d801e /* Shift to  134 on states in succStateBitSet[3]          Used by 1 ntIndex   [type_or_class]*/
#define _ns0007 0x01277fff /* Shift to  147 No check (2 states)                      Used by 1 ntIndex   [type_or_class]*/
#define _ns0008 0x01738028 /* Shift to  185 on states in succStateBitSet[4]          Used by 1 ntIndex   [type_specifier]*/
#define _ns0009 0x010f8032 /* Shift to  135 on states in succStateBitSet[5]          Used by 1 ntIndex   [type_specifier]*/
#define _ns0010 0x01b77fff /* Shift to  219 No check (3 states)                      Used by 1 ntIndex   [type_specifier]*/
#define _ns0011 0x007a803e /* Split(_ns0009,_ns0010)                                 Used by 1 ntIndex   [type_specifier]*/
#define _ns0012 0x0009803c /* Shift to    4 on states in succStateBitSet[6]          Used by 1 ntIndex   [var_decl]*/
#define _ns0013 0x00078046 /* Shift to    3 on states in succStateBitSet[7]          Used by 1 ntIndex   [var_decl]*/
#define _ns0014 0x0014000d /* stateArray    3, newStateArray    3                    Used by 1 ntIndex   [var_decl]*/
#define _ns0015 0x00828042 /* Split(_ns0013,_ns0014)                                 Used by 1 ntIndex   [var_decl]*/
#define _ns0016 0x01218050 /* Shift to  144 on states in succStateBitSet[8]          Used by 1 ntIndex   [name]*/
#define _ns0017 0x01bb805a /* Shift to  221 on states in succStateBitSet[9]          Used by 1 ntIndex   [name]*/
#define _ns0018 0x00280019 /* stateArray    5, newStateArray    5                    Used by 1 ntIndex   [name]*/
#define _ns0019 0x008a8046 /* Split(_ns0017,_ns0018)                                 Used by 1 ntIndex   [name]*/
#define _ns0020 0x016d8064 /* Shift to  182 on states in succStateBitSet[10]         Used by 1 ntIndex   [param_declaration]*/
#define _ns0021 0x01fd7fff /* Shift to  254 No check (1 state )                      Used by 1 ntIndex   [param_declaration]*/
#define _ns0022 0x0093806e /* Shift to   73 on states in succStateBitSet[11]         Used by 1 ntIndex   [type]*/
#define _ns0023 0x00998078 /* Shift to   76 on states in succStateBitSet[12]         Used by 1 ntIndex   [type]*/
#define _ns0024 0x00f77fff /* Shift to  123 No check (1 state )                      Used by 1 ntIndex   [type]*/
#define _ns0025 0x0096804c /* Split(_ns0023,_ns0024)                                 Used by 1 ntIndex   [type]*/
#define _ns0026 0x016f806e /* Shift to  183 on states in succStateBitSet[11]         Used by 1 ntIndex   [abstract_decl]*/
#define _ns0027 0x0046002b /* stateArray    8, newStateArray    8                    Used by 1 ntIndex   [abstract_decl]*/
#define _ns0028 0x01b98082 /* Shift to  220 on states in succStateBitSet[13]         Used by 1 ntIndex   [abs_decl]*/
#define _ns0029 0x01ff808c /* Shift to  255 on states in succStateBitSet[14]         Used by 1 ntIndex   [abs_decl]*/
#define _ns0030 0x004a002e /* stateArray    9, newStateArray    9                    Used by 1 ntIndex   [abs_decl]*/
#define _ns0031 0x00a28052 /* Split(_ns0029,_ns0030)                                 Used by 1 ntIndex   [abs_decl]*/
#define _ns0032 0x01438096 /* Shift to  161 on states in succStateBitSet[15]         Used by 1 ntIndex   [enumerator]*/
#define _ns0033 0x01cd7fff /* Shift to  230 No check (1 state )                      Used by 1 ntIndex   [enumerator]*/
#define _ns0034 0x0025800a /* Shift to   18 on states in succStateBitSet[1]          Used by 1 ntIndex   [expr]*/
#define _ns0035 0x015780a0 /* Shift to  171 on states in succStateBitSet[16]         Used by 1 ntIndex   [expr]*/
#define _ns0036 0x006a0043 /* stateArray   14, newStateArray   14                    Used by 1 ntIndex   [expr]*/
#define _ns0037 0x00ae8058 /* Split(_ns0035,_ns0036)                                 Used by 1 ntIndex   [expr]*/
#define _ns0038 0x019f800a /* Shift to  207 on states in succStateBitSet[1]          Used by 1 ntIndex   [target]*/
#define _ns0039 0x01ed7fff /* Shift to  246 No check (1 state )                      Used by 1 ntIndex   [target]*/
#define _ns0040 0x000f80aa /* Shift to    7 on states in succStateBitSet[17]         Used by 1 ntIndex   [unary]*/
#define _ns0041 0x009a005f /* stateArray   18, newStateArray   18                    Used by 1 ntIndex   [unary]*/
#define _ns0042 0x000d80b4 /* Shift to    6 on states in succStateBitSet[18]         Used by 1 ntIndex   [string_const]*/
#define _ns0043 0x002d7fff /* Shift to   22 No check (1 state )                      Used by 1 ntIndex   [string_const]*/
#define _ns0044 0x001180be /* Shift to    8 on states in succStateBitSet[19]         Used by 1 ntIndex   [non_comma_expr]*/
#define _ns0045 0x003380c8 /* Shift to   25 on states in succStateBitSet[20]         Used by 1 ntIndex   [non_comma_expr]*/
#define _ns0046 0x00aa0069 /* stateArray   20, newStateArray   20                    Used by 1 ntIndex   [non_comma_expr]*/
#define _ns0047 0x00c28062 /* Split(_ns0045,_ns0046)                                 Used by 1 ntIndex   [non_comma_expr]*/
#define _ns0048 0x015d80d2 /* Shift to  174 on states in succStateBitSet[21]         Used by 1 ntIndex   [and_expr]*/
#define _ns0049 0x01db7fff /* Shift to  237 No check (1 state )                      Used by 1 ntIndex   [and_expr]*/
#define _ns0050 0x001380dc /* Shift to    9 on states in succStateBitSet[22]         Used by 1 ntIndex   [binary]*/
#define _ns0051 0x00b4006f /* stateArray   21, newStateArray   21                    Used by 1 ntIndex   [binary]*/

static const unsigned int succCodeArray[104] = {
   _nc0000,_nc0001,_nc0002,_nc0003,_nc0004,_nc0005,_nc0006,_nc0007,_nc0008,_nc0009
  ,_nc0010,_nc0011,_nc0012,_nc0013,_nc0014,_nc0015,_nc0016,_nc0017,_nc0018,_nc0019
  ,_nc0020,_nc0021,_nc0022,_nc0023,_nc0024,_nc0025,_nc0026,_nc0027,_nc0028,_nc0029
  ,_nc0030,_nc0031,_nc0032,_nc0033,_nc0034,_nc0035,_nc0036,_nc0037,_nc0038,_nc0039
  ,_nc0040,_nc0041,_nc0042,_nc0043,_nc0044,_nc0045,_nc0046,_nc0047,_nc0048,_nc0049
  ,_nc0050,_nc0051
  ,_ns0000,_ns0001,_ns0002,_ns0003,_ns0004,_ns0005,_ns0006,_ns0007,_ns0008,_ns0009
  ,_ns0010,_ns0011,_ns0012,_ns0013,_ns0014,_ns0015,_ns0016,_ns0017,_ns0018,_ns0019
  ,_ns0020,_ns0021,_ns0022,_ns0023,_ns0024,_ns0025,_ns0026,_ns0027,_ns0028,_ns0029
  ,_ns0030,_ns0031,_ns0032,_ns0033,_ns0034,_ns0035,_ns0036,_ns0037,_ns0038,_ns0039
  ,_ns0040,_ns0041,_ns0042,_ns0043,_ns0044,_ns0045,_ns0046,_ns0047,_ns0048,_ns0049
  ,_ns0050,_ns0051
}; // Size of table:416(x86)/416(x64) bytes.

static const unsigned short succFromStateArrayTable[123] = {
     4,  53,  55,  56,  58                                                                                   /*   0 Used by 1 ntIndex   [funct_decl]                  */
  ,  4,   1,  19,  49,  50                                                                                   /*   1 Used by 1 ntIndex   [compound_stmt]               */
  ,  2,  53,  58                                                                                             /*   2 Used by 1 ntIndex   [ext_decl]                    */
  ,  6,  53,  58,  73,  96, 115, 123                                                                         /*   3 Used by 1 ntIndex   [var_decl]                    */
  ,  4,  60,  72, 111, 116                                                                                   /*   4 Used by 1 ntIndex   [initializer]                 */
  ,  6,   0,  11,  21,  57,  63,  64                                                                         /*   5 Used by 1 ntIndex   [name]                        */
  ,  2,  61,  63                                                                                             /*   6 Used by 1 ntIndex   [var_list]                    */
  ,  7,  59,  62,  75,  99, 105, 112, 117                                                                    /*   7 Used by 1 ntIndex   [const_expr]                  */
  ,  2,  65,  77                                                                                             /*   8 Used by 1 ntIndex   [abstract_decl]               */
  ,  3, 103, 186, 223                                                                                        /*   9 Used by 1 ntIndex   [abs_decl]                    */
  ,  2,  71,  74                                                                                             /*  10 Used by 1 ntIndex   [def]                         */
  ,  2,  96, 115                                                                                             /*  11 Used by 1 ntIndex   [decl]                        */
  ,  2,  57,  64                                                                                             /*  12 Used by 1 ntIndex   [enumerator_list]             */
  ,  7,  71,  98, 106, 118, 119, 124, 128                                                                    /*  13 Used by 1 ntIndex   [statement]                   */
  , 16,  60,  65,  72,  77,  78,  97, 100, 107, 108, 109, 110, 111, 116, 120, 121, 125                       /*  14 Used by 1 ntIndex   [expr]                        */
  ,  4, 107, 108, 120, 121                                                                                   /*  15 Used by 1 ntIndex   [test]                        */
  ,  2, 109, 125                                                                                             /*  16 Used by 1 ntIndex   [opt_expr]                    */
  ,  2,  42,  47                                                                                             /*  17 Used by 1 ntIndex   [exception_handler]           */
  ,  6,  66,  67,  68,  69,  70, 104                                                                         /*  18 Used by 1 ntIndex   [unary]                       */
  ,  2,  79, 113                                                                                             /*  19 Used by 1 ntIndex   [args]                        */
  ,  5,  80,  81,  82,  83, 114                                                                              /*  20 Used by 1 ntIndex   [non_comma_expr]              */
  , 11,  85,  86,  87,  88,  89,  90,  91,  92,  93,  94,  95                                                /*  21 Used by 1 ntIndex   [binary]                      */
}; // Size of table:248(x86)/248(x64) bytes.

static const unsigned short succToStateArrayTable[101] = {
      1, 157, 158, 164                                                                                       /*   0 Used by 1 ntIndex   [funct_decl]                  */
  , 154,  42, 291, 299                                                                                       /*   1 Used by 1 ntIndex   [compound_stmt]               */
  , 143, 163                                                                                                 /*   2 Used by 1 ntIndex   [ext_decl]                    */
  ,   2,   2,  20,  39,  39,  51                                                                             /*   3 Used by 1 ntIndex   [var_decl]                    */
  , 178, 217, 276, 282                                                                                       /*   4 Used by 1 ntIndex   [initializer]                 */
  , 152, 162, 257, 162, 192, 162                                                                             /*   5 Used by 1 ntIndex   [name]                        */
  , 181, 191                                                                                                 /*   6 Used by 1 ntIndex   [var_list]                    */
  , 166, 188, 231, 251, 264, 278, 283                                                                        /*   7 Used by 1 ntIndex   [const_expr]                  */
  , 197, 233                                                                                                 /*   8 Used by 1 ntIndex   [abstract_decl]               */
  , 256, 222, 256                                                                                            /*   9 Used by 1 ntIndex   [abs_decl]                    */
  , 203, 228                                                                                                 /*  10 Used by 1 ntIndex   [def]                         */
  , 243, 281                                                                                                 /*  11 Used by 1 ntIndex   [decl]                        */
  ,   5,  10                                                                                                 /*  12 Used by 1 ntIndex   [enumerator_list]             */
  , 202, 248, 267, 287, 288, 296, 300                                                                        /*  13 Used by 1 ntIndex   [statement]                   */
  , 179,  12, 179,  23,  24,  40,  41,  44,  44,  45,  46, 179, 179,  44,  44,  45                           /*  14 Used by 1 ntIndex   [expr]                        */
  , 268, 269, 289, 290                                                                                       /*  15 Used by 1 ntIndex   [test]                        */
  , 271, 298                                                                                                 /*  16 Used by 1 ntIndex   [opt_expr]                    */
  , 274, 284                                                                                                 /*  17 Used by 1 ntIndex   [exception_handler]           */
  ,  13,  14,  15,  16,  17,  43                                                                             /*  18 Used by 1 ntIndex   [unary]                       */
  , 235, 280                                                                                                 /*  19 Used by 1 ntIndex   [args]                        */
  ,  26,  27,  28,  29,  48                                                                                  /*  20 Used by 1 ntIndex   [non_comma_expr]              */
  ,  30,  31,  32, 238, 239,  33,  34,  35,  36,  37,  38                                                    /*  21 Used by 1 ntIndex   [binary]                      */
}; // Size of table:204(x86)/208(x64) bytes.

static const unsigned char succStateBitSetTable[230] = { /* range:[52-129], bytes in bitset=10 */
   0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x80,0x00,0x00 /*   0   2 states Used by 1 ntIndex   [funct_decl]       */
  ,0x00,0x00,0x08,0x00,0x00,0x40,0x40,0x00,0x0c,0x11 /*   1   7 states Used by 3 ntIndices [compound_stmt expr target]*/
  ,0x00,0x00,0x48,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*   2   2 states Used by 1 ntIndex   [specifiers]       */
  ,0x01,0x00,0x48,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*   3   3 states Used by 1 ntIndex   [type_or_class]    */
  ,0x00,0x2a,0x00,0x02,0x00,0x00,0x02,0x00,0x40,0x00 /*   4   6 states Used by 1 ntIndex   [type_specifier]   */
  ,0x05,0x00,0x48,0x00,0x00,0x10,0x00,0x00,0x00,0x00 /*   5   5 states Used by 1 ntIndex   [type_specifier]   */
  ,0x10,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x08 /*   6   3 states Used by 1 ntIndex   [var_decl]         */
  ,0x08,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x04 /*   7   3 states Used by 1 ntIndex   [var_decl]         */
  ,0x5a,0x00,0x00,0x00,0x00,0x10,0x00,0x80,0x00,0x00 /*   8   6 states Used by 1 ntIndex   [name]             */
  ,0x00,0x00,0x20,0x00,0x00,0x00,0x0c,0x00,0x80,0x0c /*   9   6 states Used by 1 ntIndex   [name]             */
  ,0x00,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  10   2 states Used by 1 ntIndex   [param_declaration]*/
  ,0x00,0x0a,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00 /*  11   3 states Used by 2 ntIndices [type abstract_decl]*/
  ,0x00,0x20,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00 /*  12   2 states Used by 1 ntIndex   [type]             */
  ,0x00,0x00,0x20,0x01,0x00,0x00,0x00,0x00,0x00,0x00 /*  13   2 states Used by 1 ntIndex   [abs_decl]         */
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x20 /*  14   2 states Used by 1 ntIndex   [abs_decl]         */
  ,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 /*  15   2 states Used by 1 ntIndex   [enumerator]       */
  ,0x80,0x04,0x80,0x00,0x00,0x80,0x20,0x10,0x02,0x00 /*  16   7 states Used by 1 ntIndex   [expr]             */
  ,0x80,0x25,0x98,0xfe,0xff,0xef,0xe1,0x7f,0x3f,0x13 /*  17  49 states Used by 1 ntIndex   [unary]            */
  ,0x80,0xe5,0x9f,0xfc,0xff,0xef,0xf1,0x7f,0x3f,0x13 /*  18  54 states Used by 1 ntIndex   [string_const]     */
  ,0x80,0x25,0x98,0x06,0x00,0xe0,0xe1,0x1f,0x3f,0x13 /*  19  30 states Used by 1 ntIndex   [non_comma_expr]   */
  ,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x20,0x00,0x00 /*  20   2 states Used by 1 ntIndex   [non_comma_expr]   */
  ,0x80,0x25,0x98,0xfe,0x00,0xe0,0xe1,0x7f,0x3f,0x13 /*  21  37 states Used by 1 ntIndex   [and_expr]         */
  ,0x80,0x25,0x98,0xfe,0x01,0xe0,0xe1,0x7f,0x3f,0x13 /*  22  38 states Used by 1 ntIndex   [binary]           */
}; // Size of table:232(x86)/232(x64) bytes.

/************************************************************************************\
* The prodLengthArray[] is indexed by production number and holds the number of      *
* symbols on the right side of each production.                                      *
\************************************************************************************/
static const unsigned char prodLengthArray[165] = {
  /*   0 */    1,  0,  2,  3,  2,  3,  0,  2,  1,  1
  /*  10 */ ,  1,  2,  1,  1,  1,  1,  1,  1,  3,  1
  /*  20 */ ,  3,  1,  1,  3,  4,  3,  4,  2,  3,  2
  /*  30 */ ,  3,  4,  3,  3,  3,  4,  4,  1,  3,  1
  /*  40 */ ,  3,  2,  1,  1,  1,  2,  2,  2,  0,  5
  /*  50 */ ,  2,  3,  4,  3,  5,  2,  0,  1,  1,  0
  /*  60 */ ,  2,  3,  2,  1,  3,  1,  1,  3,  3,  2
  /*  70 */ ,  3,  4,  0,  3,  1,  1,  3,  1,  3,  3
  /*  80 */ ,  0,  2,  2,  1,  1,  2,  2,  3,  3,  3
  /*  90 */ ,  5,  7,  5,  7,  9,  2,  2,  5,  3,  2
  /* 100 */ ,  3,  3,  1,  2,  5,  1,  2,  1,  1,  0
  /* 110 */ ,  1,  3,  1,  1,  1,  1,  4,  4,  4,  4
  /* 120 */ ,  2,  2,  2,  2,  2,  2,  4,  3,  4,  3
  /* 130 */ ,  1,  3,  3,  1,  5,  3,  3,  1,  1,  3
  /* 140 */ ,  1,  1,  3,  1,  3,  3,  3,  3,  3,  3
  /* 150 */ ,  3,  3,  3,  3,  1,  0,  1,  1,  1,  3
  /* 160 */ ,  1,  3,  1,  2,  1
}; // Size of table:168(x86)/168(x64) bytes.

/************************************************************************************\
* leftSideArray[] is indexed by production number.                                   *
* leftSideArray[p] = A', A' = (A - termCount)                                        *
*                        where A is the left side of production p.                   *
* A' = [0..ntermCount-1]                                                             *
* p  = [0..productionCount-1]                                                        *
\************************************************************************************/
static const unsigned char leftSideArray[165] = {
  /*   0 */    0,  1,  1,  2,  2,  2,  3,  3,  3,  3
  /*  10 */ ,  7,  7,  8,  8,  9,  9,  9,  4,  4, 12
  /*  20 */ , 12, 12, 13, 13, 13, 13, 13, 13, 13,  5
  /*  30 */ ,  5,  5,  5,  5,  5,  5,  5, 18, 18, 16
  /*  40 */ , 16, 19, 19, 19, 20, 20, 21, 21, 22, 22
  /*  50 */ , 22, 22, 22, 22, 11, 11, 23, 23, 25, 24
  /*  60 */ , 24, 26, 26, 27, 27, 28, 28, 28, 28, 28
  /*  70 */ , 10, 10, 30, 30, 29, 31, 31, 32, 32,  6
  /*  80 */ , 33, 33, 33, 34, 34, 34, 34, 34, 34, 34
  /*  90 */ , 34, 34, 34, 34, 34, 34, 34, 34, 34, 34
  /* 100 */ , 34, 34, 39, 39, 40, 41, 41, 41, 36, 37
  /* 110 */ , 37, 42, 42, 42, 42, 42, 42, 42, 42, 42
  /* 120 */ , 42, 42, 42, 42, 42, 42, 42, 42, 42, 42
  /* 130 */ , 44, 44, 35, 35, 45, 45, 45, 45, 46, 47
  /* 140 */ , 47, 48, 49, 49, 50, 50, 50, 50, 50, 50
  /* 150 */ , 50, 50, 50, 50, 50, 38, 38, 17, 14, 14
  /* 160 */ , 51, 51, 43, 43, 15
}; // Size of table:168(x86)/168(x64) bytes.

/************************************************************************************\
* rightSideTable[] holds a compressed form of the rightsides of all productions in   *
* the grammar. Only used for debugging.                                              *
\************************************************************************************/
static const unsigned char rightSideTable[376] = {
  /*   0 */   75
  /*   2 */ , 75, 76
  /*   3 */ , 77, 78, 23
  /*   4 */ , 77, 23
  /*   5 */ , 77, 79, 80
  /*   7 */ , 50, 49
  /*   8 */ , 49
  /*   9 */ , 81
  /*  10 */ , 82
  /*  11 */ , 81, 82
  /*  12 */ , 83
  /*  13 */ , 50
  /*  14 */ ,  4
  /*  15 */ , 84
  /*  16 */ , 85
  /*  17 */ , 86
  /*  18 */ , 78, 24, 86
  /*  19 */ , 87
  /*  20 */ , 87, 25, 88
  /*  21 */ , 79
  /*  22 */ , 89
  /*  23 */ , 87, 46, 47
  /*  24 */ , 87, 46, 90, 47
  /*  25 */ , 87, 44, 45
  /*  26 */ , 87, 44, 91, 45
  /*  27 */ , 39, 87
  /*  28 */ , 46, 87, 47
  /*  29 */ , 39, 79
  /*  30 */ , 79, 44, 45
  /*  31 */ , 79, 44, 91, 45
  /*  32 */ , 46, 79, 47
  /*  33 */ , 79, 46, 47
  /*  34 */ , 89, 46, 47
  /*  35 */ , 89, 46, 92, 47
  /*  36 */ , 89, 46, 90, 47
  /*  37 */ , 89
  /*  38 */ , 92, 24, 89
  /*  39 */ , 93
  /*  40 */ , 90, 24, 93
  /*  41 */ , 94, 87
  /*  42 */ , 95
  /*  43 */ , 70
  /*  44 */ , 83
  /*  45 */ , 94, 83
  /*  46 */ , 94, 96
  /*  47 */ , 49, 96
  /*  49 */ , 46, 96, 47, 46, 47
  /*  50 */ , 39, 96
  /*  51 */ , 96, 44, 45
  /*  52 */ , 96, 44, 91, 45
  /*  53 */ , 46, 96, 47
  /*  54 */ ,  5, 97, 21, 98, 22
  /*  55 */ ,  5, 99
  /*  57 */ , 99
  /*  58 */ , 51
  /*  60 */ , 98,100
  /*  61 */ , 81,101, 23
  /*  62 */ , 81, 23
  /*  63 */ ,102
  /*  64 */ ,101, 24,102
  /*  65 */ , 79
  /*  66 */ , 87
  /*  67 */ , 87, 25, 88
  /*  68 */ , 87, 28, 91
  /*  69 */ , 28, 91
  /*  70 */ ,103, 89,104
  /*  71 */ ,103, 21,105, 22
  /*  73 */ , 21,105, 22
  /*  74 */ ,  6
  /*  75 */ ,106
  /*  76 */ ,105, 24,106
  /*  77 */ , 89
  /*  78 */ , 89, 25, 91
  /*  79 */ , 21,107, 22
  /*  81 */ ,107,108
  /*  82 */ ,107,100
  /*  83 */ , 23
  /*  84 */ , 80
  /*  85 */ ,109, 23
  /*  86 */ ,  7, 23
  /*  87 */ ,  7,109, 23
  /*  88 */ ,  8,110, 23
  /*  89 */ ,110, 28,108
  /*  90 */ ,  9, 46,111, 47,108
  /*  91 */ ,  9, 46,111, 47,108, 52,108
  /*  92 */ , 15, 46,111, 47,108
  /*  93 */ , 16,108, 15, 46,111, 47, 23
  /*  94 */ , 17, 46,112, 23,111, 23,112, 47,108
  /*  95 */ , 13, 23
  /*  96 */ , 14, 23
  /*  97 */ , 10, 46,109, 47, 80
  /*  98 */ , 11, 91, 28
  /*  99 */ , 12, 28
  /* 100 */ , 20,109, 23
  /* 101 */ , 18, 80,113
  /* 102 */ ,114
  /* 103 */ ,113,114
  /* 104 */ , 19, 46,115, 47, 80
  /* 105 */ , 70
  /* 106 */ , 94, 87
  /* 107 */ , 94
  /* 108 */ , 51
  /* 110 */ ,109
  /* 111 */ , 46,109, 47
  /* 112 */ ,  3
  /* 113 */ ,  2
  /* 114 */ , 51
  /* 115 */ ,117
  /* 116 */ , 41, 46,117, 47
  /* 117 */ , 41, 46,109, 47
  /* 118 */ , 41, 46, 95, 47
  /* 119 */ , 46, 95, 47,116
  /* 120 */ , 38,116
  /* 121 */ , 42,116
  /* 122 */ ,116, 43
  /* 123 */ , 43,116
  /* 124 */ , 33,116
  /* 125 */ , 39,116
  /* 126 */ ,116, 44,109, 45
  /* 127 */ ,116, 48, 51
  /* 128 */ ,116, 46,118, 47
  /* 129 */ ,116, 46, 47
  /* 130 */ ,119
  /* 131 */ ,119, 24,118
  /* 132 */ ,109, 24,119
  /* 133 */ ,119
  /* 134 */ ,119, 27,119, 28,119
  /* 135 */ ,119, 26,119
  /* 136 */ ,119, 25,119
  /* 137 */ ,120
  /* 138 */ ,121
  /* 139 */ ,121, 29,122
  /* 140 */ ,122
  /* 141 */ ,123
  /* 142 */ ,123, 30,124
  /* 143 */ ,124
  /* 144 */ ,124, 35,124
  /* 145 */ ,124, 34,124
  /* 146 */ ,124, 39,124
  /* 147 */ ,124, 40,124
  /* 148 */ ,124, 36,124
  /* 149 */ ,124, 33,124
  /* 150 */ ,124, 32,124
  /* 151 */ ,124, 31,124
  /* 152 */ ,124, 37,124
  /* 153 */ ,124, 38,124
  /* 154 */ ,116
  /* 156 */ ,109
  /* 157 */ ,109
  /* 158 */ ,109
  /* 159 */ , 21,125, 22
  /* 160 */ , 88
  /* 161 */ ,125, 24, 88
  /* 162 */ ,  1
  /* 163 */ ,117,  1
  /* 164 */ , 51
}; // Size of table:376(x86)/376(x64) bytes.

/************************************************************************************\
* symbolNames is a space separated string with the names of all symbols used in the  *
* grammar, terminals and nonTerminals. Only used for debugging.                      *
\************************************************************************************/
static const char *symbolNames = {
  "EOI"                                               /* T     0               */
  " STRING"                                           /* T     1               */
  " ICON"                                             /* T     2               */
  " FCON"                                             /* T     3               */
  " TYPE"                                             /* T     4               */
  " STRUCT"                                           /* T     5               */
  " ENUM"                                             /* T     6               */
  " RETURN"                                           /* T     7               */
  " GOTO"                                             /* T     8               */
  " IF"                                               /* T     9               */
  " SWITCH"                                           /* T    10               */
  " CASE"                                             /* T    11               */
  " DEFAULT"                                          /* T    12               */
  " BREAK"                                            /* T    13               */
  " CONTINUE"                                         /* T    14               */
  " WHILE"                                            /* T    15               */
  " DO"                                               /* T    16               */
  " FOR"                                              /* T    17               */
  " TRYSTMT"                                          /* T    18               */
  " CATCH"                                            /* T    19               */
  " THROW"                                            /* T    20               */
  " LC"                                               /* T    21               */
  " RC"                                               /* T    22               */
  " SEMI"                                             /* T    23               */
  " COMMA"                                            /* T    24               */
  " EQUAL"                                            /* T    25               */
  " ASSIGNOP"                                         /* T    26               */
  " QUEST"                                            /* T    27               */
  " COLON"                                            /* T    28               */
  " OROR"                                             /* T    29               */
  " ANDAND"                                           /* T    30               */
  " OR"                                               /* T    31               */
  " XOR"                                              /* T    32               */
  " AND"                                              /* T    33               */
  " EQUOP"                                            /* T    34               */
  " RELOP"                                            /* T    35               */
  " SHIFTOP"                                          /* T    36               */
  " PLUS"                                             /* T    37               */
  " MINUS"                                            /* T    38               */
  " STAR"                                             /* T    39               */
  " DIVOP"                                            /* T    40               */
  " SIZEOF"                                           /* T    41               */
  " UNOP"                                             /* T    42               */
  " INCOP"                                            /* T    43               */
  " LB"                                               /* T    44               */
  " RB"                                               /* T    45               */
  " LPAR"                                             /* T    46               */
  " RPAR"                                             /* T    47               */
  " STRUCTOP"                                         /* T    48               */
  " TTYPE"                                            /* T    49               */
  " CLASS"                                            /* T    50               */
  " NAME"                                             /* T    51               */
  " ELSE"                                             /* T    52               */
  " DEFINE"                                           /* T    53               */
  " ENDIF"                                            /* T    54               */
  " IFDEF"                                            /* T    55               */
  " IFNDEF"                                           /* T    56               */
  " INCLUDE"                                          /* T    57               */
  " UNDEF"                                            /* T    58               */
  " EXTERN"                                           /* T    59               */
  " STATIC"                                           /* T    60               */
  " VIRTUAL"                                          /* T    61               */
  " REGISTER"                                         /* T    62               */
  " AUTO"                                             /* T    63               */
  " OPERATOR"                                         /* T    64               */
  " SIGNED"                                           /* T    65               */
  " PRIVATE"                                          /* T    66               */
  " PUBLIC"                                           /* T    67               */
  " PROTECTED"                                        /* T    68               */
  " TEMPLATE"                                         /* T    69               */
  " ELLIPSIS"                                         /* T    70               */
  " COLONCOLON"                                       /* T    71               */
  " NEWOP"                                            /* T    72               */
  " DELETEOP"                                         /* T    73               */
  " program"                                          /* NT   74 ntIndex=0     */
  " ext_def_list"                                     /* NT   75 ntIndex=1     */
  " ext_def"                                          /* NT   76 ntIndex=2     */
  " opt_specifiers"                                   /* NT   77 ntIndex=3     */
  " ext_decl_list"                                    /* NT   78 ntIndex=4     */
  " funct_decl"                                       /* NT   79 ntIndex=5     */
  " compound_stmt"                                    /* NT   80 ntIndex=6     */
  " specifiers"                                       /* NT   81 ntIndex=7     */
  " type_or_class"                                    /* NT   82 ntIndex=8     */
  " type_specifier"                                   /* NT   83 ntIndex=9     */
  " enum_specifier"                                   /* NT   84 ntIndex=10    */
  " struct_specifier"                                 /* NT   85 ntIndex=11    */
  " ext_decl"                                         /* NT   86 ntIndex=12    */
  " var_decl"                                         /* NT   87 ntIndex=13    */
  " initializer"                                      /* NT   88 ntIndex=14    */
  " name"                                             /* NT   89 ntIndex=15    */
  " var_list"                                         /* NT   90 ntIndex=16    */
  " const_expr"                                       /* NT   91 ntIndex=17    */
  " name_list"                                        /* NT   92 ntIndex=18    */
  " param_declaration"                                /* NT   93 ntIndex=19    */
  " type"                                             /* NT   94 ntIndex=20    */
  " abstract_decl"                                    /* NT   95 ntIndex=21    */
  " abs_decl"                                         /* NT   96 ntIndex=22    */
  " opt_tag"                                          /* NT   97 ntIndex=23    */
  " def_list"                                         /* NT   98 ntIndex=24    */
  " tag"                                              /* NT   99 ntIndex=25    */
  " def"                                              /* NT  100 ntIndex=26    */
  " decl_list"                                        /* NT  101 ntIndex=27    */
  " decl"                                             /* NT  102 ntIndex=28    */
  " enum"                                             /* NT  103 ntIndex=29    */
  " opt_enum_list"                                    /* NT  104 ntIndex=30    */
  " enumerator_list"                                  /* NT  105 ntIndex=31    */
  " enumerator"                                       /* NT  106 ntIndex=32    */
  " stmt_list"                                        /* NT  107 ntIndex=33    */
  " statement"                                        /* NT  108 ntIndex=34    */
  " expr"                                             /* NT  109 ntIndex=35    */
  " target"                                           /* NT  110 ntIndex=36    */
  " test"                                             /* NT  111 ntIndex=37    */
  " opt_expr"                                         /* NT  112 ntIndex=38    */
  " handler_list"                                     /* NT  113 ntIndex=39    */
  " exception_handler"                                /* NT  114 ntIndex=40    */
  " catch_type"                                       /* NT  115 ntIndex=41    */
  " unary"                                            /* NT  116 ntIndex=42    */
  " string_const"                                     /* NT  117 ntIndex=43    */
  " args"                                             /* NT  118 ntIndex=44    */
  " non_comma_expr"                                   /* NT  119 ntIndex=45    */
  " or_expr"                                          /* NT  120 ntIndex=46    */
  " or_list"                                          /* NT  121 ntIndex=47    */
  " and_expr"                                         /* NT  122 ntIndex=48    */
  " and_list"                                         /* NT  123 ntIndex=49    */
  " binary"                                           /* NT  124 ntIndex=50    */
  " initializer_list"                                 /* NT  125 ntIndex=51    */
}; // Size of string:996(x86)/1.000(x64) bytes

static const ParserTablesTemplateTransShift<126,74,165,301,5952,6040,130,53,0,129,52,78
                                          ,unsigned char
                                          ,unsigned char
                                          ,unsigned char
                                          ,short
                                          ,unsigned short> CppTables_s(prodLengthArray   , leftSideArray
                                                                      ,rightSideTable    , symbolNames
                                                                      ,shiftCodeArray    , shiftFromStateArrayTable, shiftToStateArrayTable, shiftStateBitSetTable
                                                                      ,reduceCodeArray   , termArrayTable          , reduceArrayTable      , termBitSetTable
                                                                      ,succCodeArray     , succFromStateArrayTable , succToStateArrayTable , succStateBitSetTable
                                                                      );

const AbstractParserTables *CppParser::CppTables = &CppTables_s;
// Size of CppTables_s: 68(x86)/128(x64) bytes. Size of CppTables:4(x86)/8(x64) bytes

// Total size of table data:5.952(x86)/6.040(x64) bytes.
