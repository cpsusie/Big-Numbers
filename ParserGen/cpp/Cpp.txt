State 0:
 ( 70)K enum_specifier  -> enum .name opt_enum_list[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 71)K enum_specifier  -> enum .LC enumerator_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 (164)  name            -> .NAME[TYPE STRUCT ENUM LC SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Shift to    57 on LC
   Shift to   145 on NAME
   Goto   152 on name

State 1:
 (  5)K ext_def         -> opt_specifiers funct_decl .compound_stmt[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 ( 21)K ext_decl        -> funct_decl .[SEMI COMMA]
 ( 30)K funct_decl      -> funct_decl .LB RB[LC SEMI COMMA LB LPAR]
 ( 31)K funct_decl      -> funct_decl .LB const_expr RB[LC SEMI COMMA LB LPAR]
 ( 33)K funct_decl      -> funct_decl .LPAR RPAR[LC SEMI COMMA LB LPAR]
 ( 79)  compound_stmt   -> .LC stmt_list RC[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   Shift to   156 on LC
   Reduce by   21 on SEMI
   Reduce by   21 on COMMA
   Shift to    59 on LB
   Shift to   155 on LPAR
   Goto   154 on compound_stmt

State 2:
 ( 19)K ext_decl        -> var_decl .[SEMI COMMA]
 ( 20)K ext_decl        -> var_decl .EQUAL initializer[SEMI COMMA]
 ( 23)K var_decl        -> var_decl .LPAR RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 25)K var_decl        -> var_decl .LB RB[SEMI COMMA EQUAL LB LPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[SEMI COMMA EQUAL LB LPAR]

   Reduce by   19 on SEMI
   Reduce by   19 on COMMA
   Shift to    60 on EQUAL
   Shift to    62 on LB
   Shift to    61 on LPAR

State 3:
 ( 23)K var_decl        -> var_decl .LPAR RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 25)K var_decl        -> var_decl .LB RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 27)K var_decl        -> STAR var_decl .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   Reduce by   27 on SEMI
   Reduce by   27 on COMMA
   Reduce by   27 on EQUAL
   Reduce by   27 on COLON
   Shift to    62 on LB
   Shift to    61 on LPAR
   Reduce by   27 on RPAR

warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 27 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 27 (prec=14).
State 4:
 ( 23)K var_decl        -> var_decl .LPAR RPAR[LB LPAR RPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)K var_decl        -> var_decl .LB RB[LB LPAR RPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[LB LPAR RPAR]
 ( 28)K var_decl        -> LPAR var_decl .RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   Shift to    62 on LB
   Shift to    61 on LPAR
   Shift to   193 on RPAR

State 5:
 ( 71)K enum_specifier  -> enum LC enumerator_list .RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 76)K enumerator_list -> enumerator_list .COMMA enumerator[RC COMMA]

   Shift to   195 on RC
   Shift to    11 on COMMA

State 6:
 (115)K unary           -> string_const .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)K string_const    -> string_const .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   198 on STRING
   Reduce by  115 on RC
   Reduce by  115 on SEMI
   Reduce by  115 on COMMA
   Reduce by  115 on EQUAL
   Reduce by  115 on ASSIGNOP
   Reduce by  115 on QUEST
   Reduce by  115 on COLON
   Reduce by  115 on OROR
   Reduce by  115 on ANDAND
   Reduce by  115 on OR
   Reduce by  115 on XOR
   Reduce by  115 on AND
   Reduce by  115 on EQUOP
   Reduce by  115 on RELOP
   Reduce by  115 on SHIFTOP
   Reduce by  115 on PLUS
   Reduce by  115 on MINUS
   Reduce by  115 on STAR
   Reduce by  115 on DIVOP
   Reduce by  115 on INCOP
   Reduce by  115 on LB
   Reduce by  115 on RB
   Reduce by  115 on LPAR
   Reduce by  115 on RPAR
   Reduce by  115 on STRUCTOP

State 7:
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (154)K binary          -> unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  154 on RC
   Reduce by  154 on SEMI
   Reduce by  154 on COMMA
   Reduce by  154 on EQUAL
   Reduce by  154 on ASSIGNOP
   Reduce by  154 on QUEST
   Reduce by  154 on COLON
   Reduce by  154 on OROR
   Reduce by  154 on ANDAND
   Reduce by  154 on OR
   Reduce by  154 on XOR
   Reduce by  154 on AND
   Reduce by  154 on EQUOP
   Reduce by  154 on RELOP
   Reduce by  154 on SHIFTOP
   Reduce by  154 on PLUS
   Reduce by  154 on MINUS
   Reduce by  154 on STAR
   Reduce by  154 on DIVOP
   Shift to   199 on INCOP
   Shift to    78 on LB
   Reduce by  154 on RB
   Shift to    79 on LPAR
   Reduce by  154 on RPAR
   Shift to   200 on STRUCTOP

State 8:
 (133)K expr            -> non_comma_expr .[RC SEMI COMMA COLON RB RPAR]
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   Reduce by  133 on RC
   Reduce by  133 on SEMI
   Reduce by  133 on COMMA
   Shift to    83 on EQUAL
   Shift to    82 on ASSIGNOP
   Shift to    81 on QUEST
   Reduce by  133 on COLON
   Reduce by  133 on RB
   Reduce by  133 on RPAR

State 9:
 (143)K and_list        -> binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  143 on RC
   Reduce by  143 on SEMI
   Reduce by  143 on COMMA
   Reduce by  143 on EQUAL
   Reduce by  143 on ASSIGNOP
   Reduce by  143 on QUEST
   Reduce by  143 on COLON
   Reduce by  143 on OROR
   Reduce by  143 on ANDAND
   Shift to    93 on OR
   Shift to    92 on XOR
   Shift to    91 on AND
   Shift to    87 on EQUOP
   Shift to    86 on RELOP
   Shift to    90 on SHIFTOP
   Shift to    94 on PLUS
   Shift to    95 on MINUS
   Shift to    88 on STAR
   Shift to    89 on DIVOP
   Reduce by  143 on RB
   Reduce by  143 on RPAR

State 10:
 ( 73)K opt_enum_list   -> LC enumerator_list .RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 76)K enumerator_list -> enumerator_list .COMMA enumerator[RC COMMA]

   Shift to   229 on RC
   Shift to    11 on COMMA

State 11:
 ( 76)K enumerator_list -> enumerator_list COMMA .enumerator[RC COMMA]
 ( 77)  enumerator      -> .name[RC COMMA]
 ( 78)  enumerator      -> .name EQUAL const_expr[RC COMMA]
 (164)  name            -> .NAME[RC COMMA EQUAL]

   Shift to   145 on NAME
   Goto   162 on name
   Goto   230 on enumerator

State 12:
 (111)K unary           -> LPAR expr .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (132)K expr            -> expr .COMMA non_comma_expr[COMMA RPAR]

   Shift to    80 on COMMA
   Shift to   232 on RPAR

State 13:
 (120)K unary           -> MINUS unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  120 on RC
   Reduce by  120 on SEMI
   Reduce by  120 on COMMA
   Reduce by  120 on EQUAL
   Reduce by  120 on ASSIGNOP
   Reduce by  120 on QUEST
   Reduce by  120 on COLON
   Reduce by  120 on OROR
   Reduce by  120 on ANDAND
   Reduce by  120 on OR
   Reduce by  120 on XOR
   Reduce by  120 on AND
   Reduce by  120 on EQUOP
   Reduce by  120 on RELOP
   Reduce by  120 on SHIFTOP
   Reduce by  120 on PLUS
   Reduce by  120 on MINUS
   Reduce by  120 on STAR
   Reduce by  120 on DIVOP
   Shift to   199 on INCOP
   Shift to    78 on LB
   Reduce by  120 on RB
   Shift to    79 on LPAR
   Reduce by  120 on RPAR
   Shift to   200 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 120 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 120 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 120 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 120 (prec=14).
State 14:
 (121)K unary           -> UNOP unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  121 on RC
   Reduce by  121 on SEMI
   Reduce by  121 on COMMA
   Reduce by  121 on EQUAL
   Reduce by  121 on ASSIGNOP
   Reduce by  121 on QUEST
   Reduce by  121 on COLON
   Reduce by  121 on OROR
   Reduce by  121 on ANDAND
   Reduce by  121 on OR
   Reduce by  121 on XOR
   Reduce by  121 on AND
   Reduce by  121 on EQUOP
   Reduce by  121 on RELOP
   Reduce by  121 on SHIFTOP
   Reduce by  121 on PLUS
   Reduce by  121 on MINUS
   Reduce by  121 on STAR
   Reduce by  121 on DIVOP
   Shift to   199 on INCOP
   Shift to    78 on LB
   Reduce by  121 on RB
   Shift to    79 on LPAR
   Reduce by  121 on RPAR
   Shift to   200 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 121 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 121 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 121 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 121 (prec=14).
State 15:
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)K unary           -> INCOP unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  123 on RC
   Reduce by  123 on SEMI
   Reduce by  123 on COMMA
   Reduce by  123 on EQUAL
   Reduce by  123 on ASSIGNOP
   Reduce by  123 on QUEST
   Reduce by  123 on COLON
   Reduce by  123 on OROR
   Reduce by  123 on ANDAND
   Reduce by  123 on OR
   Reduce by  123 on XOR
   Reduce by  123 on AND
   Reduce by  123 on EQUOP
   Reduce by  123 on RELOP
   Reduce by  123 on SHIFTOP
   Reduce by  123 on PLUS
   Reduce by  123 on MINUS
   Reduce by  123 on STAR
   Reduce by  123 on DIVOP
   Shift to   199 on INCOP
   Shift to    78 on LB
   Reduce by  123 on RB
   Shift to    79 on LPAR
   Reduce by  123 on RPAR
   Shift to   200 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 123 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 123 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 123 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 123 (prec=14).
State 16:
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)K unary           -> AND unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  124 on RC
   Reduce by  124 on SEMI
   Reduce by  124 on COMMA
   Reduce by  124 on EQUAL
   Reduce by  124 on ASSIGNOP
   Reduce by  124 on QUEST
   Reduce by  124 on COLON
   Reduce by  124 on OROR
   Reduce by  124 on ANDAND
   Reduce by  124 on OR
   Reduce by  124 on XOR
   Reduce by  124 on AND
   Reduce by  124 on EQUOP
   Reduce by  124 on RELOP
   Reduce by  124 on SHIFTOP
   Reduce by  124 on PLUS
   Reduce by  124 on MINUS
   Reduce by  124 on STAR
   Reduce by  124 on DIVOP
   Shift to   199 on INCOP
   Shift to    78 on LB
   Reduce by  124 on RB
   Shift to    79 on LPAR
   Reduce by  124 on RPAR
   Shift to   200 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 124 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 124 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 124 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 124 (prec=14).
State 17:
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)K unary           -> STAR unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  125 on RC
   Reduce by  125 on SEMI
   Reduce by  125 on COMMA
   Reduce by  125 on EQUAL
   Reduce by  125 on ASSIGNOP
   Reduce by  125 on QUEST
   Reduce by  125 on COLON
   Reduce by  125 on OROR
   Reduce by  125 on ANDAND
   Reduce by  125 on OR
   Reduce by  125 on XOR
   Reduce by  125 on AND
   Reduce by  125 on EQUOP
   Reduce by  125 on RELOP
   Reduce by  125 on SHIFTOP
   Reduce by  125 on PLUS
   Reduce by  125 on MINUS
   Reduce by  125 on STAR
   Reduce by  125 on DIVOP
   Shift to   199 on INCOP
   Shift to    78 on LB
   Reduce by  125 on RB
   Shift to    79 on LPAR
   Reduce by  125 on RPAR
   Shift to   200 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 125 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 125 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 125 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 125 (prec=14).
State 18:
 ( 85)K statement       -> expr .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (132)K expr            -> expr .COMMA non_comma_expr[SEMI COMMA]

   Shift to   244 on SEMI
   Shift to    80 on COMMA

State 19:
 (101)K statement       -> TRYSTMT .compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[CATCH]

   Shift to   156 on LC
   Goto    42 on compound_stmt

State 20:
 ( 23)K var_decl        -> var_decl .LPAR RPAR[COMMA LB LPAR RPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[COMMA LB LPAR RPAR]
 ( 25)K var_decl        -> var_decl .LB RB[COMMA LB LPAR RPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[COMMA LB LPAR RPAR]
 ( 41)K param_declaration -> type var_decl .[COMMA RPAR]

   Reduce by   41 on COMMA
   Shift to    62 on LB
   Shift to    61 on LPAR
   Reduce by   41 on RPAR

State 21:
 ( 38)K name_list       -> name_list COMMA .name[COMMA RPAR]
 (164)  name            -> .NAME[COMMA RPAR]

   Shift to   145 on NAME
   Goto   257 on name

State 22:
 (115)K unary           -> string_const .[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)K unary           -> SIZEOF LPAR string_const .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)K string_const    -> string_const .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   Shift to   198 on STRING
   Reduce by  115 on COMMA
   Reduce by  115 on EQUAL
   Reduce by  115 on ASSIGNOP
   Reduce by  115 on QUEST
   Reduce by  115 on OROR
   Reduce by  115 on ANDAND
   Reduce by  115 on OR
   Reduce by  115 on XOR
   Reduce by  115 on AND
   Reduce by  115 on EQUOP
   Reduce by  115 on RELOP
   Reduce by  115 on SHIFTOP
   Reduce by  115 on PLUS
   Reduce by  115 on MINUS
   Reduce by  115 on STAR
   Reduce by  115 on DIVOP
   Reduce by  115 on INCOP
   Reduce by  115 on LB
   Reduce by  115 on LPAR
   Shift to   258 on RPAR
   Reduce by  115 on STRUCTOP

warning --- Shift/reduce conflict on RPAR (prec=15, left assoc). Choose shift instead of reduce by prod 115 (prec=1).
State 23:
 (117)K unary           -> SIZEOF LPAR expr .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (132)K expr            -> expr .COMMA non_comma_expr[COMMA RPAR]

   Shift to    80 on COMMA
   Shift to   259 on RPAR

State 24:
 (126)K unary           -> unary LB expr .RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (132)K expr            -> expr .COMMA non_comma_expr[COMMA RB]

   Shift to    80 on COMMA
   Shift to   261 on RB

State 25:
 (130)K args            -> non_comma_expr .[RPAR]
 (131)K args            -> non_comma_expr .COMMA args[RPAR]
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]

   Shift to   113 on COMMA
   Shift to    83 on EQUAL
   Shift to    82 on ASSIGNOP
   Shift to    81 on QUEST
   Reduce by  130 on RPAR

State 26:
 (132)K expr            -> expr COMMA non_comma_expr .[RC SEMI COMMA COLON RB RPAR]
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   Reduce by  132 on RC
   Reduce by  132 on SEMI
   Reduce by  132 on COMMA
   Shift to    83 on EQUAL
   Shift to    82 on ASSIGNOP
   Shift to    81 on QUEST
   Reduce by  132 on COLON
   Reduce by  132 on RB
   Reduce by  132 on RPAR

State 27:
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[EQUAL ASSIGNOP QUEST COLON]
 (134)K non_comma_expr  -> non_comma_expr QUEST non_comma_expr .COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[EQUAL ASSIGNOP QUEST COLON]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[EQUAL ASSIGNOP QUEST COLON]

   Shift to    83 on EQUAL
   Shift to    82 on ASSIGNOP
   Shift to    81 on QUEST
   Shift to   114 on COLON

State 28:
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr ASSIGNOP non_comma_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   Reduce by  135 on RC
   Reduce by  135 on SEMI
   Reduce by  135 on COMMA
   Shift to    83 on EQUAL
   Shift to    82 on ASSIGNOP
   Shift to    81 on QUEST
   Reduce by  135 on COLON
   Reduce by  135 on RB
   Reduce by  135 on RPAR

warning --- Shift/reduce conflict on QUEST (prec=3, right assoc). Choose shift instead of reduce by prod 135 (prec=2).
warning --- Shift/reduce conflict on ASSIGNOP (prec=2, right assoc). Choose shift instead of reduce by prod 135 (prec=2).
warning --- Shift/reduce conflict on EQUAL (prec=2, right assoc). Choose shift instead of reduce by prod 135 (prec=2).
State 29:
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr EQUAL non_comma_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   Reduce by  136 on RC
   Reduce by  136 on SEMI
   Reduce by  136 on COMMA
   Shift to    83 on EQUAL
   Shift to    82 on ASSIGNOP
   Shift to    81 on QUEST
   Reduce by  136 on COLON
   Reduce by  136 on RB
   Reduce by  136 on RPAR

warning --- Shift/reduce conflict on QUEST (prec=3, right assoc). Choose shift instead of reduce by prod 136 (prec=2).
warning --- Shift/reduce conflict on ASSIGNOP (prec=2, right assoc). Choose shift instead of reduce by prod 136 (prec=2).
warning --- Shift/reduce conflict on EQUAL (prec=2, right assoc). Choose shift instead of reduce by prod 136 (prec=2).
State 30:
 (142)K and_list        -> and_list ANDAND binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  142 on RC
   Reduce by  142 on SEMI
   Reduce by  142 on COMMA
   Reduce by  142 on EQUAL
   Reduce by  142 on ASSIGNOP
   Reduce by  142 on QUEST
   Reduce by  142 on COLON
   Reduce by  142 on OROR
   Reduce by  142 on ANDAND
   Shift to    93 on OR
   Shift to    92 on XOR
   Shift to    91 on AND
   Shift to    87 on EQUOP
   Shift to    86 on RELOP
   Shift to    90 on SHIFTOP
   Shift to    94 on PLUS
   Shift to    95 on MINUS
   Shift to    88 on STAR
   Shift to    89 on DIVOP
   Reduce by  142 on RB
   Reduce by  142 on RPAR

State 31:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (144)K binary          -> binary RELOP binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  144 on RC
   Reduce by  144 on SEMI
   Reduce by  144 on COMMA
   Reduce by  144 on EQUAL
   Reduce by  144 on ASSIGNOP
   Reduce by  144 on QUEST
   Reduce by  144 on COLON
   Reduce by  144 on OROR
   Reduce by  144 on ANDAND
   Reduce by  144 on OR
   Reduce by  144 on XOR
   Reduce by  144 on AND
   Reduce by  144 on EQUOP
   Reduce by  144 on RELOP
   Shift to    90 on SHIFTOP
   Shift to    94 on PLUS
   Shift to    95 on MINUS
   Shift to    88 on STAR
   Shift to    89 on DIVOP
   Reduce by  144 on RB
   Reduce by  144 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose shift instead of reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 144 (prec=10).
State 32:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary EQUOP binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  145 on RC
   Reduce by  145 on SEMI
   Reduce by  145 on COMMA
   Reduce by  145 on EQUAL
   Reduce by  145 on ASSIGNOP
   Reduce by  145 on QUEST
   Reduce by  145 on COLON
   Reduce by  145 on OROR
   Reduce by  145 on ANDAND
   Reduce by  145 on OR
   Reduce by  145 on XOR
   Reduce by  145 on AND
   Reduce by  145 on EQUOP
   Shift to    86 on RELOP
   Shift to    90 on SHIFTOP
   Shift to    94 on PLUS
   Shift to    95 on MINUS
   Shift to    88 on STAR
   Shift to    89 on DIVOP
   Reduce by  145 on RB
   Reduce by  145 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
State 33:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary SHIFTOP binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  148 on RC
   Reduce by  148 on SEMI
   Reduce by  148 on COMMA
   Reduce by  148 on EQUAL
   Reduce by  148 on ASSIGNOP
   Reduce by  148 on QUEST
   Reduce by  148 on COLON
   Reduce by  148 on OROR
   Reduce by  148 on ANDAND
   Reduce by  148 on OR
   Reduce by  148 on XOR
   Reduce by  148 on AND
   Reduce by  148 on EQUOP
   Reduce by  148 on RELOP
   Reduce by  148 on SHIFTOP
   Shift to    94 on PLUS
   Shift to    95 on MINUS
   Shift to    88 on STAR
   Shift to    89 on DIVOP
   Reduce by  148 on RB
   Reduce by  148 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 148 (prec=11).
State 34:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary AND binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  149 on RC
   Reduce by  149 on SEMI
   Reduce by  149 on COMMA
   Reduce by  149 on EQUAL
   Reduce by  149 on ASSIGNOP
   Reduce by  149 on QUEST
   Reduce by  149 on COLON
   Reduce by  149 on OROR
   Reduce by  149 on ANDAND
   Reduce by  149 on OR
   Reduce by  149 on XOR
   Reduce by  149 on AND
   Shift to    87 on EQUOP
   Shift to    86 on RELOP
   Shift to    90 on SHIFTOP
   Shift to    94 on PLUS
   Shift to    95 on MINUS
   Shift to    88 on STAR
   Shift to    89 on DIVOP
   Reduce by  149 on RB
   Reduce by  149 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
State 35:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary XOR binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  150 on RC
   Reduce by  150 on SEMI
   Reduce by  150 on COMMA
   Reduce by  150 on EQUAL
   Reduce by  150 on ASSIGNOP
   Reduce by  150 on QUEST
   Reduce by  150 on COLON
   Reduce by  150 on OROR
   Reduce by  150 on ANDAND
   Reduce by  150 on OR
   Reduce by  150 on XOR
   Shift to    91 on AND
   Shift to    87 on EQUOP
   Shift to    86 on RELOP
   Shift to    90 on SHIFTOP
   Shift to    94 on PLUS
   Shift to    95 on MINUS
   Shift to    88 on STAR
   Shift to    89 on DIVOP
   Reduce by  150 on RB
   Reduce by  150 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
State 36:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary OR binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  151 on RC
   Reduce by  151 on SEMI
   Reduce by  151 on COMMA
   Reduce by  151 on EQUAL
   Reduce by  151 on ASSIGNOP
   Reduce by  151 on QUEST
   Reduce by  151 on COLON
   Reduce by  151 on OROR
   Reduce by  151 on ANDAND
   Reduce by  151 on OR
   Shift to    92 on XOR
   Shift to    91 on AND
   Shift to    87 on EQUOP
   Shift to    86 on RELOP
   Shift to    90 on SHIFTOP
   Shift to    94 on PLUS
   Shift to    95 on MINUS
   Shift to    88 on STAR
   Shift to    89 on DIVOP
   Reduce by  151 on RB
   Reduce by  151 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
State 37:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary PLUS binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  152 on RC
   Reduce by  152 on SEMI
   Reduce by  152 on COMMA
   Reduce by  152 on EQUAL
   Reduce by  152 on ASSIGNOP
   Reduce by  152 on QUEST
   Reduce by  152 on COLON
   Reduce by  152 on OROR
   Reduce by  152 on ANDAND
   Reduce by  152 on OR
   Reduce by  152 on XOR
   Reduce by  152 on AND
   Reduce by  152 on EQUOP
   Reduce by  152 on RELOP
   Reduce by  152 on SHIFTOP
   Reduce by  152 on PLUS
   Reduce by  152 on MINUS
   Shift to    88 on STAR
   Shift to    89 on DIVOP
   Reduce by  152 on RB
   Reduce by  152 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose reduce by prod 152 (prec=12).
State 38:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary MINUS binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  153 on RC
   Reduce by  153 on SEMI
   Reduce by  153 on COMMA
   Reduce by  153 on EQUAL
   Reduce by  153 on ASSIGNOP
   Reduce by  153 on QUEST
   Reduce by  153 on COLON
   Reduce by  153 on OROR
   Reduce by  153 on ANDAND
   Reduce by  153 on OR
   Reduce by  153 on XOR
   Reduce by  153 on AND
   Reduce by  153 on EQUOP
   Reduce by  153 on RELOP
   Reduce by  153 on SHIFTOP
   Reduce by  153 on PLUS
   Reduce by  153 on MINUS
   Shift to    88 on STAR
   Shift to    89 on DIVOP
   Reduce by  153 on RB
   Reduce by  153 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose reduce by prod 153 (prec=12).
State 39:
 ( 23)K var_decl        -> var_decl .LPAR RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 25)K var_decl        -> var_decl .LB RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 66)K decl            -> var_decl .[SEMI COMMA]
 ( 67)K decl            -> var_decl .EQUAL initializer[SEMI COMMA]
 ( 68)K decl            -> var_decl .COLON const_expr[SEMI COMMA]

   Reduce by   66 on SEMI
   Reduce by   66 on COMMA
   Shift to   116 on EQUAL
   Shift to   117 on COLON
   Shift to    62 on LB
   Shift to    61 on LPAR

State 40:
 ( 87)K statement       -> RETURN expr .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (132)K expr            -> expr .COMMA non_comma_expr[SEMI COMMA]

   Shift to   265 on SEMI
   Shift to    80 on COMMA

State 41:
 (100)K statement       -> THROW expr .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (132)K expr            -> expr .COMMA non_comma_expr[SEMI COMMA]

   Shift to   273 on SEMI
   Shift to    80 on COMMA

State 42:
 (101)K statement       -> TRYSTMT compound_stmt .handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (102)  handler_list    -> .exception_handler[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (103)  handler_list    -> .handler_list exception_handler[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (104)  exception_handler -> .CATCH LPAR catch_type RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   275 on CATCH
   Goto    47 on handler_list
   Goto   274 on exception_handler

State 43:
 (119)K unary           -> LPAR abstract_decl RPAR unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  119 on RC
   Reduce by  119 on SEMI
   Reduce by  119 on COMMA
   Reduce by  119 on EQUAL
   Reduce by  119 on ASSIGNOP
   Reduce by  119 on QUEST
   Reduce by  119 on COLON
   Reduce by  119 on OROR
   Reduce by  119 on ANDAND
   Reduce by  119 on OR
   Reduce by  119 on XOR
   Reduce by  119 on AND
   Reduce by  119 on EQUOP
   Reduce by  119 on RELOP
   Reduce by  119 on SHIFTOP
   Reduce by  119 on PLUS
   Reduce by  119 on MINUS
   Reduce by  119 on STAR
   Reduce by  119 on DIVOP
   Shift to   199 on INCOP
   Shift to    78 on LB
   Reduce by  119 on RB
   Shift to    79 on LPAR
   Reduce by  119 on RPAR
   Shift to   200 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 119 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 119 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 119 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 119 (prec=14).
State 44:
 (110)K test            -> expr .[SEMI RPAR]
 (132)K expr            -> expr .COMMA non_comma_expr[SEMI COMMA RPAR]

   Reduce by  110 on SEMI
   Shift to    80 on COMMA
   Reduce by  110 on RPAR

State 45:
 (132)K expr            -> expr .COMMA non_comma_expr[SEMI COMMA RPAR]
 (156)K opt_expr        -> expr .[SEMI RPAR]

   Reduce by  156 on SEMI
   Shift to    80 on COMMA
   Reduce by  156 on RPAR

State 46:
 ( 97)K statement       -> SWITCH LPAR expr .RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (132)K expr            -> expr .COMMA non_comma_expr[COMMA RPAR]

   Shift to    80 on COMMA
   Shift to    49 on RPAR

State 47:
 (101)K statement       -> TRYSTMT compound_stmt handler_list .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (103)K handler_list    -> handler_list .exception_handler[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (104)  exception_handler -> .CATCH LPAR catch_type RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by  101 on STRING
   Reduce by  101 on ICON
   Reduce by  101 on FCON
   Reduce by  101 on TYPE
   Reduce by  101 on STRUCT
   Reduce by  101 on ENUM
   Reduce by  101 on RETURN
   Reduce by  101 on GOTO
   Reduce by  101 on IF
   Reduce by  101 on SWITCH
   Reduce by  101 on CASE
   Reduce by  101 on DEFAULT
   Reduce by  101 on BREAK
   Reduce by  101 on CONTINUE
   Reduce by  101 on WHILE
   Reduce by  101 on DO
   Reduce by  101 on FOR
   Reduce by  101 on TRYSTMT
   Shift to   275 on CATCH
   Reduce by  101 on THROW
   Reduce by  101 on LC
   Reduce by  101 on RC
   Reduce by  101 on SEMI
   Reduce by  101 on AND
   Reduce by  101 on MINUS
   Reduce by  101 on STAR
   Reduce by  101 on SIZEOF
   Reduce by  101 on UNOP
   Reduce by  101 on INCOP
   Reduce by  101 on LPAR
   Reduce by  101 on CLASS
   Reduce by  101 on NAME
   Reduce by  101 on ELSE
   Goto   284 on exception_handler

State 48:
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (134)K non_comma_expr  -> non_comma_expr QUEST non_comma_expr COLON non_comma_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   Reduce by  134 on RC
   Reduce by  134 on SEMI
   Reduce by  134 on COMMA
   Reduce by  134 on EQUAL
   Reduce by  134 on ASSIGNOP
   Shift to    81 on QUEST
   Reduce by  134 on COLON
   Reduce by  134 on RB
   Reduce by  134 on RPAR

warning --- Shift/reduce conflict on QUEST (prec=3, right assoc). Choose shift instead of reduce by prod 134 (prec=3).
warning --- Shift/reduce conflict on ASSIGNOP (prec=2, right assoc). Choose reduce by prod 134 (prec=3).
warning --- Shift/reduce conflict on EQUAL (prec=2, right assoc). Choose reduce by prod 134 (prec=3).
State 49:
 ( 97)K statement       -> SWITCH LPAR expr RPAR .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   156 on LC
   Goto   291 on compound_stmt

State 50:
 (104)K exception_handler -> CATCH LPAR catch_type RPAR .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   156 on LC
   Goto   299 on compound_stmt

State 51:
 ( 23)K var_decl        -> var_decl .LPAR RPAR[LB LPAR RPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)K var_decl        -> var_decl .LB RB[LB LPAR RPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[LB LPAR RPAR]
 (106)K catch_type      -> type var_decl .[RPAR]

   Shift to    62 on LB
   Shift to    61 on LPAR
   Reduce by  106 on RPAR

State 52:
 (  0)K program         -> ext_def_list .[EOI]
 (  2)K ext_def_list    -> ext_def_list .ext_def[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  3)  ext_def         -> .opt_specifiers ext_decl_list SEMI[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  4)  ext_def         -> .opt_specifiers SEMI[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  5)  ext_def         -> .opt_specifiers funct_decl compound_stmt[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  6)  opt_specifiers  -> .[SEMI STAR LPAR NAME]
 (  7)  opt_specifiers  -> .CLASS TTYPE[SEMI STAR LPAR NAME]
 (  8)  opt_specifiers  -> .TTYPE[SEMI STAR LPAR NAME]
 (  9)  opt_specifiers  -> .specifiers[SEMI STAR LPAR NAME]
 ( 10)  specifiers      -> .type_or_class[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 11)  specifiers      -> .specifiers type_or_class[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 12)  type_or_class   -> .type_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 13)  type_or_class   -> .CLASS[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 74)  enum            -> .ENUM[LC NAME]

   Accept on EOI
   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Reduce by    6 on SEMI
   Reduce by    6 on STAR
   Reduce by    6 on LPAR
   Shift to   133 on TTYPE
   Shift to   132 on CLASS
   Reduce by    6 on NAME
   Goto   131 on ext_def
   Goto    53 on opt_specifiers
   Goto    54 on specifiers
   Goto   134 on type_or_class
   Goto   135 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto     0 on enum

State 53:
 (  3)K ext_def         -> opt_specifiers .ext_decl_list SEMI[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  4)K ext_def         -> opt_specifiers .SEMI[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  5)K ext_def         -> opt_specifiers .funct_decl compound_stmt[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 ( 17)  ext_decl_list   -> .ext_decl[SEMI COMMA]
 ( 18)  ext_decl_list   -> .ext_decl_list COMMA ext_decl[SEMI COMMA]
 ( 19)  ext_decl        -> .var_decl[SEMI COMMA]
 ( 20)  ext_decl        -> .var_decl EQUAL initializer[SEMI COMMA]
 ( 21)  ext_decl        -> .funct_decl[SEMI COMMA]
 ( 22)  var_decl        -> .name[SEMI COMMA EQUAL LB LPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 25)  var_decl        -> .var_decl LB RB[SEMI COMMA EQUAL LB LPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[SEMI COMMA EQUAL LB LPAR]
 ( 27)  var_decl        -> .STAR var_decl[SEMI COMMA EQUAL LB LPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[LC SEMI COMMA LB LPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[LC SEMI COMMA LB LPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[LC SEMI COMMA LB LPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[LC SEMI COMMA LB LPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[LC SEMI COMMA LB LPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[LC SEMI COMMA LB LPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[LC SEMI COMMA LB LPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[LC SEMI COMMA LB LPAR]
 (164)  name            -> .NAME[SEMI COMMA EQUAL LB LPAR]

   Shift to   142 on SEMI
   Shift to    55 on STAR
   Shift to    56 on LPAR
   Shift to   145 on NAME
   Goto   141 on ext_decl_list
   Goto     1 on funct_decl
   Goto   143 on ext_decl
   Goto     2 on var_decl
   Goto   144 on name

State 54:
 (  9)K opt_specifiers  -> specifiers .[SEMI STAR LPAR NAME]
 ( 11)K specifiers      -> specifiers .type_or_class[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 12)  type_or_class   -> .type_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 13)  type_or_class   -> .CLASS[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 74)  enum            -> .ENUM[LC NAME]

   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Reduce by    9 on SEMI
   Reduce by    9 on STAR
   Reduce by    9 on LPAR
   Shift to   148 on CLASS
   Reduce by    9 on NAME
   Goto   147 on type_or_class
   Goto   135 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto     0 on enum

State 55:
 ( 27)K var_decl        -> STAR .var_decl[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 29)K funct_decl      -> STAR .funct_decl[LC SEMI COMMA LB LPAR RPAR]
 ( 22)  var_decl        -> .name[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[LC SEMI COMMA LB LPAR RPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[LC SEMI COMMA LB LPAR RPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[LC SEMI COMMA LB LPAR RPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[LC SEMI COMMA LB LPAR RPAR]
 (164)  name            -> .NAME[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   Shift to    55 on STAR
   Shift to    56 on LPAR
   Shift to   145 on NAME
   Goto   157 on funct_decl
   Goto     3 on var_decl
   Goto   144 on name

State 56:
 ( 28)K var_decl        -> LPAR .var_decl RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 32)K funct_decl      -> LPAR .funct_decl RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 22)  var_decl        -> .name[LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[LB LPAR RPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[LB LPAR RPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[LB LPAR RPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[LB LPAR RPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[LB LPAR RPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[LB LPAR RPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[LB LPAR RPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[LB LPAR RPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[LB LPAR RPAR]
 (164)  name            -> .NAME[LB LPAR RPAR]

   Shift to    55 on STAR
   Shift to    56 on LPAR
   Shift to   145 on NAME
   Goto   158 on funct_decl
   Goto     4 on var_decl
   Goto   144 on name

State 57:
 ( 71)K enum_specifier  -> enum LC .enumerator_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 75)  enumerator_list -> .enumerator[RC COMMA]
 ( 76)  enumerator_list -> .enumerator_list COMMA enumerator[RC COMMA]
 ( 77)  enumerator      -> .name[RC COMMA]
 ( 78)  enumerator      -> .name EQUAL const_expr[RC COMMA]
 (164)  name            -> .NAME[RC COMMA EQUAL]

   Shift to   145 on NAME
   Goto   162 on name
   Goto     5 on enumerator_list
   Goto   161 on enumerator

State 58:
 ( 18)K ext_decl_list   -> ext_decl_list COMMA .ext_decl[SEMI COMMA]
 ( 19)  ext_decl        -> .var_decl[SEMI COMMA]
 ( 20)  ext_decl        -> .var_decl EQUAL initializer[SEMI COMMA]
 ( 21)  ext_decl        -> .funct_decl[SEMI COMMA]
 ( 22)  var_decl        -> .name[SEMI COMMA EQUAL LB LPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 25)  var_decl        -> .var_decl LB RB[SEMI COMMA EQUAL LB LPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[SEMI COMMA EQUAL LB LPAR]
 ( 27)  var_decl        -> .STAR var_decl[SEMI COMMA EQUAL LB LPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[SEMI COMMA LB LPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[SEMI COMMA LB LPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[SEMI COMMA LB LPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[SEMI COMMA LB LPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[SEMI COMMA LB LPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[SEMI COMMA LB LPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[SEMI COMMA LB LPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[SEMI COMMA LB LPAR]
 (164)  name            -> .NAME[SEMI COMMA EQUAL LB LPAR]

   Shift to    55 on STAR
   Shift to    56 on LPAR
   Shift to   145 on NAME
   Goto   164 on funct_decl
   Goto   163 on ext_decl
   Goto     2 on var_decl
   Goto   144 on name

State 59:
 ( 30)K funct_decl      -> funct_decl LB .RB[LC SEMI COMMA LB LPAR RPAR]
 ( 31)K funct_decl      -> funct_decl LB .const_expr RB[LC SEMI COMMA LB LPAR RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RB]
 (133)  expr            -> .non_comma_expr[COMMA RB]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RB]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (157)  const_expr      -> .expr[RB]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to   165 on RB
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   166 on const_expr
   Goto   171 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 60:
 ( 20)K ext_decl        -> var_decl EQUAL .initializer[SEMI COMMA]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (158)  initializer     -> .expr[SEMI COMMA]
 (159)  initializer     -> .LC initializer_list RC[SEMI COMMA]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    72 on LC
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   178 on initializer
   Goto   179 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 61:
 ( 23)K var_decl        -> var_decl LPAR .RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 24)K var_decl        -> var_decl LPAR .var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 39)  var_list        -> .param_declaration[COMMA RPAR]
 ( 40)  var_list        -> .var_list COMMA param_declaration[COMMA RPAR]
 ( 41)  param_declaration -> .type var_decl[COMMA RPAR]
 ( 42)  param_declaration -> .abstract_decl[COMMA RPAR]
 ( 43)  param_declaration -> .ELLIPSIS[COMMA RPAR]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 46)  abstract_decl   -> .type abs_decl[COMMA RPAR]
 ( 47)  abstract_decl   -> .TTYPE abs_decl[COMMA RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]

   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to   180 on RPAR
   Shift to   186 on TTYPE
   Shift to   184 on ELLIPSIS
   Goto   185 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto   181 on var_list
   Goto   182 on param_declaration
   Goto    73 on type
   Goto   183 on abstract_decl
   Goto     0 on enum

State 62:
 ( 25)K var_decl        -> var_decl LB .RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 26)K var_decl        -> var_decl LB .const_expr RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RB]
 (133)  expr            -> .non_comma_expr[COMMA RB]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RB]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (157)  const_expr      -> .expr[RB]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to   187 on RB
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   188 on const_expr
   Goto   171 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 63:
 ( 34)K funct_decl      -> name LPAR .RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 35)K funct_decl      -> name LPAR .name_list RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 36)K funct_decl      -> name LPAR .var_list RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 37)  name_list       -> .name[COMMA RPAR]
 ( 38)  name_list       -> .name_list COMMA name[COMMA RPAR]
 ( 39)  var_list        -> .param_declaration[COMMA RPAR]
 ( 40)  var_list        -> .var_list COMMA param_declaration[COMMA RPAR]
 ( 41)  param_declaration -> .type var_decl[COMMA RPAR]
 ( 42)  param_declaration -> .abstract_decl[COMMA RPAR]
 ( 43)  param_declaration -> .ELLIPSIS[COMMA RPAR]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 46)  abstract_decl   -> .type abs_decl[COMMA RPAR]
 ( 47)  abstract_decl   -> .TTYPE abs_decl[COMMA RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 (164)  name            -> .NAME[COMMA RPAR]

   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to   189 on RPAR
   Shift to   186 on TTYPE
   Shift to   145 on NAME
   Shift to   184 on ELLIPSIS
   Goto   185 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto   192 on name
   Goto   191 on var_list
   Goto   190 on name_list
   Goto   182 on param_declaration
   Goto    73 on type
   Goto   183 on abstract_decl
   Goto     0 on enum

State 64:
 ( 73)K opt_enum_list   -> LC .enumerator_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 75)  enumerator_list -> .enumerator[RC COMMA]
 ( 76)  enumerator_list -> .enumerator_list COMMA enumerator[RC COMMA]
 ( 77)  enumerator      -> .name[RC COMMA]
 ( 78)  enumerator      -> .name EQUAL const_expr[RC COMMA]
 (164)  name            -> .NAME[RC COMMA EQUAL]

   Shift to   145 on NAME
   Goto   162 on name
   Goto    10 on enumerator_list
   Goto   161 on enumerator

State 65:
 (111)K unary           -> LPAR .expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)K unary           -> LPAR .abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 46)  abstract_decl   -> .type abs_decl[RPAR]
 ( 47)  abstract_decl   -> .TTYPE abs_decl[RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 74)  enum            -> .ENUM[LC NAME]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   186 on TTYPE
   Shift to   169 on NAME
   Goto   185 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto    76 on type
   Goto   197 on abstract_decl
   Goto     0 on enum
   Goto    12 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 66:
 (120)K unary           -> MINUS .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    13 on unary
   Goto     6 on string_const

State 67:
 (121)K unary           -> UNOP .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    14 on unary
   Goto     6 on string_const

State 68:
 (123)K unary           -> INCOP .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    15 on unary
   Goto     6 on string_const

State 69:
 (124)K unary           -> AND .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    16 on unary
   Goto     6 on string_const

State 70:
 (125)K unary           -> STAR .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    17 on unary
   Goto     6 on string_const

State 71:
 ( 79)K compound_stmt   -> LC stmt_list .RC[EOI STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR TTYPE CLASS NAME ELSE]
 ( 81)K stmt_list       -> stmt_list .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 82)K stmt_list       -> stmt_list .def[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 10)  specifiers      -> .type_or_class[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 11)  specifiers      -> .specifiers type_or_class[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 12)  type_or_class   -> .type_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 13)  type_or_class   -> .CLASS[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 61)  def             -> .specifiers decl_list SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 62)  def             -> .specifiers SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to    97 on RETURN
   Shift to   206 on GOTO
   Shift to   208 on IF
   Shift to   213 on SWITCH
   Shift to    99 on CASE
   Shift to   214 on DEFAULT
   Shift to   211 on BREAK
   Shift to   212 on CONTINUE
   Shift to   209 on WHILE
   Shift to    98 on DO
   Shift to   210 on FOR
   Shift to    19 on TRYSTMT
   Shift to   100 on THROW
   Shift to   156 on LC
   Shift to   201 on RC
   Shift to   204 on SEMI
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   148 on CLASS
   Shift to   215 on NAME
   Goto   205 on compound_stmt
   Goto    96 on specifiers
   Goto   134 on type_or_class
   Goto   135 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto   203 on def
   Goto     0 on enum
   Goto   202 on statement
   Goto    18 on expr
   Goto   207 on target
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 72:
 (159)K initializer     -> LC .initializer_list RC[RC SEMI COMMA]
 (111)  unary           -> .LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[RC COMMA]
 (133)  expr            -> .non_comma_expr[RC COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[RC COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (158)  initializer     -> .expr[RC COMMA]
 (159)  initializer     -> .LC initializer_list RC[RC COMMA]
 (160)  initializer_list -> .initializer[RC COMMA]
 (161)  initializer_list -> .initializer_list COMMA initializer[RC COMMA]
 (162)  string_const    -> .STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    72 on LC
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   217 on initializer
   Goto   179 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary
   Goto   216 on initializer_list

State 73:
 ( 41)K param_declaration -> type .var_decl[COMMA RPAR]
 ( 45)K type            -> type .type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 46)K abstract_decl   -> type .abs_decl[COMMA RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 22)  var_decl        -> .name[COMMA LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[COMMA LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[COMMA LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[COMMA LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[COMMA LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[COMMA LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[COMMA LB LPAR RPAR]
 ( 48)  abs_decl        -> .[COMMA LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[COMMA LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[COMMA LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[COMMA LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[COMMA LB RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 (164)  name            -> .NAME[COMMA LB LPAR RPAR]

   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Reduce by   48 on COMMA
   Shift to   102 on STAR
   Reduce by   48 on LB
   Shift to   103 on LPAR
   Reduce by   48 on RPAR
   Shift to   145 on NAME
   Goto   219 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto    20 on var_decl
   Goto   221 on name
   Goto   220 on abs_decl
   Goto     0 on enum

State 74:
 ( 54)K struct_specifier -> STRUCT opt_tag LC def_list .RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 60)K def_list        -> def_list .def[TYPE STRUCT ENUM RC CLASS]
 ( 10)  specifiers      -> .type_or_class[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 11)  specifiers      -> .specifiers type_or_class[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 12)  type_or_class   -> .type_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 13)  type_or_class   -> .CLASS[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 61)  def             -> .specifiers decl_list SEMI[TYPE STRUCT ENUM RC CLASS]
 ( 62)  def             -> .specifiers SEMI[TYPE STRUCT ENUM RC CLASS]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 74)  enum            -> .ENUM[LC NAME]

   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to   227 on RC
   Shift to   148 on CLASS
   Goto    96 on specifiers
   Goto   134 on type_or_class
   Goto   135 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto   228 on def
   Goto     0 on enum

State 75:
 ( 78)K enumerator      -> name EQUAL .const_expr[RC COMMA]
 (111)  unary           -> .LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[RC COMMA]
 (133)  expr            -> .non_comma_expr[RC COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[RC COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (157)  const_expr      -> .expr[RC COMMA]
 (162)  string_const    -> .STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   231 on const_expr
   Goto   171 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 76:
 ( 45)K type            -> type .type_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 46)K abstract_decl   -> type .abs_decl[RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 48)  abs_decl        -> .[LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[LB RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 74)  enum            -> .ENUM[LC NAME]

   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to   129 on STAR
   Reduce by   48 on LB
   Shift to   223 on LPAR
   Reduce by   48 on RPAR
   Goto   219 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto   220 on abs_decl
   Goto     0 on enum

State 77:
 (116)K unary           -> SIZEOF LPAR .string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)K unary           -> SIZEOF LPAR .expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)K unary           -> SIZEOF LPAR .abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 46)  abstract_decl   -> .type abs_decl[RPAR]
 ( 47)  abstract_decl   -> .TTYPE abs_decl[RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 74)  enum            -> .ENUM[LC NAME]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   186 on TTYPE
   Shift to   169 on NAME
   Goto   185 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto    76 on type
   Goto   233 on abstract_decl
   Goto     0 on enum
   Goto    23 on expr
   Goto     7 on unary
   Goto    22 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 78:
 (126)K unary           -> unary LB .expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RB]
 (133)  expr            -> .non_comma_expr[COMMA RB]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RB]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    24 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 79:
 (128)K unary           -> unary LPAR .args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary LPAR .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (130)  args            -> .non_comma_expr[RPAR]
 (131)  args            -> .non_comma_expr COMMA args[RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   236 on RPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto   235 on args
   Goto    25 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 80:
 (132)K expr            -> expr COMMA .non_comma_expr[RC SEMI COMMA COLON RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (137)  non_comma_expr  -> .or_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (138)  or_expr         -> .or_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (139)  or_list         -> .or_list OROR and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (140)  or_list         -> .and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (141)  and_expr        -> .and_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)  and_list        -> .and_list ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (143)  and_list        -> .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    26 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 81:
 (134)K non_comma_expr  -> non_comma_expr QUEST .non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[EQUAL ASSIGNOP QUEST COLON]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[EQUAL ASSIGNOP QUEST COLON]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[EQUAL ASSIGNOP QUEST COLON]
 (137)  non_comma_expr  -> .or_expr[EQUAL ASSIGNOP QUEST COLON]
 (138)  or_expr         -> .or_list[EQUAL ASSIGNOP QUEST COLON]
 (139)  or_list         -> .or_list OROR and_expr[EQUAL ASSIGNOP QUEST COLON OROR]
 (140)  or_list         -> .and_expr[EQUAL ASSIGNOP QUEST COLON OROR]
 (141)  and_expr        -> .and_list[EQUAL ASSIGNOP QUEST COLON OROR]
 (142)  and_list        -> .and_list ANDAND binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND]
 (143)  and_list        -> .binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    27 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 82:
 (135)K non_comma_expr  -> non_comma_expr ASSIGNOP .non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (137)  non_comma_expr  -> .or_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (138)  or_expr         -> .or_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (139)  or_list         -> .or_list OROR and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (140)  or_list         -> .and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (141)  and_expr        -> .and_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)  and_list        -> .and_list ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (143)  and_list        -> .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    28 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 83:
 (136)K non_comma_expr  -> non_comma_expr EQUAL .non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (137)  non_comma_expr  -> .or_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (138)  or_expr         -> .or_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (139)  or_list         -> .or_list OROR and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (140)  or_list         -> .and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (141)  and_expr        -> .and_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)  and_list        -> .and_list ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (143)  and_list        -> .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    29 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 84:
 (139)K or_list         -> or_list OROR .and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (141)  and_expr        -> .and_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)  and_list        -> .and_list ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (143)  and_list        -> .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto   237 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 85:
 (142)K and_list        -> and_list ANDAND .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    30 on binary

State 86:
 (144)K binary          -> binary RELOP .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    31 on binary

State 87:
 (145)K binary          -> binary EQUOP .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    32 on binary

State 88:
 (146)K binary          -> binary STAR .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto   238 on binary

State 89:
 (147)K binary          -> binary DIVOP .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto   239 on binary

State 90:
 (148)K binary          -> binary SHIFTOP .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    33 on binary

State 91:
 (149)K binary          -> binary AND .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    34 on binary

State 92:
 (150)K binary          -> binary XOR .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    35 on binary

State 93:
 (151)K binary          -> binary OR .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    36 on binary

State 94:
 (152)K binary          -> binary PLUS .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    37 on binary

State 95:
 (153)K binary          -> binary MINUS .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    38 on binary

State 96:
 ( 11)K specifiers      -> specifiers .type_or_class[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 61)K def             -> specifiers .decl_list SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 62)K def             -> specifiers .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 12)  type_or_class   -> .type_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 13)  type_or_class   -> .CLASS[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 22)  var_decl        -> .name[SEMI COMMA EQUAL COLON LB LPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 25)  var_decl        -> .var_decl LB RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 27)  var_decl        -> .STAR var_decl[SEMI COMMA EQUAL COLON LB LPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[SEMI COMMA LB LPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[SEMI COMMA LB LPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[SEMI COMMA LB LPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[SEMI COMMA LB LPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[SEMI COMMA LB LPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[SEMI COMMA LB LPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[SEMI COMMA LB LPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[SEMI COMMA LB LPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 63)  decl_list       -> .decl[SEMI COMMA]
 ( 64)  decl_list       -> .decl_list COMMA decl[SEMI COMMA]
 ( 65)  decl            -> .funct_decl[SEMI COMMA]
 ( 66)  decl            -> .var_decl[SEMI COMMA]
 ( 67)  decl            -> .var_decl EQUAL initializer[SEMI COMMA]
 ( 68)  decl            -> .var_decl COLON const_expr[SEMI COMMA]
 ( 69)  decl            -> .COLON const_expr[SEMI COMMA]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 (164)  name            -> .NAME[SEMI COMMA EQUAL COLON LB LPAR]

   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to   241 on SEMI
   Shift to   105 on COLON
   Shift to    55 on STAR
   Shift to    56 on LPAR
   Shift to   148 on CLASS
   Shift to   145 on NAME
   Goto   242 on funct_decl
   Goto   147 on type_or_class
   Goto   135 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto    39 on var_decl
   Goto   144 on name
   Goto   240 on decl_list
   Goto   243 on decl
   Goto     0 on enum

State 97:
 ( 86)K statement       -> RETURN .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)K statement       -> RETURN .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to   245 on SEMI
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    40 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 98:
 ( 93)K statement       -> DO .statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[WHILE]
 ( 83)  statement       -> .SEMI[WHILE]
 ( 84)  statement       -> .compound_stmt[WHILE]
 ( 85)  statement       -> .expr SEMI[WHILE]
 ( 86)  statement       -> .RETURN SEMI[WHILE]
 ( 87)  statement       -> .RETURN expr SEMI[WHILE]
 ( 88)  statement       -> .GOTO target SEMI[WHILE]
 ( 89)  statement       -> .target COLON statement[WHILE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[WHILE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[WHILE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[WHILE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[WHILE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[WHILE]
 ( 95)  statement       -> .BREAK SEMI[WHILE]
 ( 96)  statement       -> .CONTINUE SEMI[WHILE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[WHILE]
 ( 98)  statement       -> .CASE const_expr COLON[WHILE]
 ( 99)  statement       -> .DEFAULT COLON[WHILE]
 (100)  statement       -> .THROW expr SEMI[WHILE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[WHILE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    97 on RETURN
   Shift to   206 on GOTO
   Shift to   208 on IF
   Shift to   213 on SWITCH
   Shift to    99 on CASE
   Shift to   214 on DEFAULT
   Shift to   211 on BREAK
   Shift to   212 on CONTINUE
   Shift to   209 on WHILE
   Shift to    98 on DO
   Shift to   210 on FOR
   Shift to    19 on TRYSTMT
   Shift to   100 on THROW
   Shift to   156 on LC
   Shift to   204 on SEMI
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   215 on NAME
   Goto   205 on compound_stmt
   Goto   248 on statement
   Goto    18 on expr
   Goto   207 on target
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 99:
 ( 98)K statement       -> CASE .const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA COLON]
 (133)  expr            -> .non_comma_expr[COMMA COLON]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST COLON]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST COLON]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST COLON]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST COLON]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST COLON]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST COLON OROR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST COLON OROR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST COLON OROR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (157)  const_expr      -> .expr[COLON]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   251 on const_expr
   Goto   171 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 100:
 (100)K statement       -> THROW .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    41 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 101:
 ( 40)K var_list        -> var_list COMMA .param_declaration[COMMA RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 41)  param_declaration -> .type var_decl[COMMA RPAR]
 ( 42)  param_declaration -> .abstract_decl[COMMA RPAR]
 ( 43)  param_declaration -> .ELLIPSIS[COMMA RPAR]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 46)  abstract_decl   -> .type abs_decl[COMMA RPAR]
 ( 47)  abstract_decl   -> .TTYPE abs_decl[COMMA RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]

   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to   186 on TTYPE
   Shift to   184 on ELLIPSIS
   Goto   185 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto   254 on param_declaration
   Goto    73 on type
   Goto   183 on abstract_decl
   Goto     0 on enum

State 102:
 ( 27)K var_decl        -> STAR .var_decl[COMMA LB LPAR RPAR]
 ( 50)K abs_decl        -> STAR .abs_decl[COMMA LB RPAR]
 ( 22)  var_decl        -> .name[COMMA LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[COMMA LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[COMMA LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[COMMA LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[COMMA LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[COMMA LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[COMMA LB LPAR RPAR]
 ( 48)  abs_decl        -> .[COMMA LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[COMMA LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[COMMA LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[COMMA LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[COMMA LB RPAR]
 (164)  name            -> .NAME[COMMA LB LPAR RPAR]

   Reduce by   48 on COMMA
   Shift to   102 on STAR
   Reduce by   48 on LB
   Shift to   103 on LPAR
   Reduce by   48 on RPAR
   Shift to   145 on NAME
   Goto     3 on var_decl
   Goto   221 on name
   Goto   255 on abs_decl

State 103:
 ( 28)K var_decl        -> LPAR .var_decl RPAR[COMMA LB LPAR RPAR]
 ( 49)K abs_decl        -> LPAR .abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 53)K abs_decl        -> LPAR .abs_decl RPAR[COMMA LB RPAR]
 ( 22)  var_decl        -> .name[LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[LB LPAR RPAR]
 ( 48)  abs_decl        -> .[LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[LB RPAR]
 (164)  name            -> .NAME[LB LPAR RPAR]

   Shift to   102 on STAR
   Reduce by   48 on LB
   Shift to   103 on LPAR
   Reduce by   48 on RPAR
   Shift to   145 on NAME
   Goto     4 on var_decl
   Goto   221 on name
   Goto   256 on abs_decl

State 104:
 (119)K unary           -> LPAR abstract_decl RPAR .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    43 on unary
   Goto     6 on string_const

State 105:
 ( 69)K decl            -> COLON .const_expr[SEMI COMMA]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (157)  const_expr      -> .expr[SEMI COMMA]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   264 on const_expr
   Goto   171 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 106:
 ( 89)K statement       -> target COLON .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    97 on RETURN
   Shift to   206 on GOTO
   Shift to   208 on IF
   Shift to   213 on SWITCH
   Shift to    99 on CASE
   Shift to   214 on DEFAULT
   Shift to   211 on BREAK
   Shift to   212 on CONTINUE
   Shift to   209 on WHILE
   Shift to    98 on DO
   Shift to   210 on FOR
   Shift to    19 on TRYSTMT
   Shift to   100 on THROW
   Shift to   156 on LC
   Shift to   204 on SEMI
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   215 on NAME
   Goto   205 on compound_stmt
   Goto   267 on statement
   Goto    18 on expr
   Goto   207 on target
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 107:
 ( 90)K statement       -> IF LPAR .test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)K statement       -> IF LPAR .test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (109)  test            -> .[RPAR]
 (110)  test            -> .expr[RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Reduce by  109 on RPAR
   Shift to   169 on NAME
   Goto    44 on expr
   Goto   268 on test
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 108:
 ( 92)K statement       -> WHILE LPAR .test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (109)  test            -> .[RPAR]
 (110)  test            -> .expr[RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Reduce by  109 on RPAR
   Shift to   169 on NAME
   Goto    44 on expr
   Goto   269 on test
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 109:
 ( 94)K statement       -> FOR LPAR .opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (155)  opt_expr        -> .[SEMI]
 (156)  opt_expr        -> .expr[SEMI]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Reduce by  155 on SEMI
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    45 on expr
   Goto   271 on opt_expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 110:
 ( 97)K statement       -> SWITCH LPAR .expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    46 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 111:
 (161)K initializer_list -> initializer_list COMMA .initializer[RC COMMA]
 (111)  unary           -> .LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[RC COMMA]
 (133)  expr            -> .non_comma_expr[RC COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[RC COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (158)  initializer     -> .expr[RC COMMA]
 (159)  initializer     -> .LC initializer_list RC[RC COMMA]
 (162)  string_const    -> .STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    72 on LC
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   276 on initializer
   Goto   179 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 112:
 ( 51)K abs_decl        -> abs_decl LB .RB[COMMA LB RPAR]
 ( 52)K abs_decl        -> abs_decl LB .const_expr RB[COMMA LB RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RB]
 (133)  expr            -> .non_comma_expr[COMMA RB]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RB]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (157)  const_expr      -> .expr[RB]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to   277 on RB
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   278 on const_expr
   Goto   171 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 113:
 (131)K args            -> non_comma_expr COMMA .args[RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (130)  args            -> .non_comma_expr[RPAR]
 (131)  args            -> .non_comma_expr COMMA args[RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto   280 on args
   Goto    25 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 114:
 (134)K non_comma_expr  -> non_comma_expr QUEST non_comma_expr COLON .non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (137)  non_comma_expr  -> .or_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (138)  or_expr         -> .or_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (139)  or_list         -> .or_list OROR and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (140)  or_list         -> .and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (141)  and_expr        -> .and_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)  and_list        -> .and_list ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (143)  and_list        -> .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto     7 on unary
   Goto     6 on string_const
   Goto    48 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 115:
 ( 64)K decl_list       -> decl_list COMMA .decl[SEMI COMMA]
 ( 22)  var_decl        -> .name[SEMI COMMA EQUAL COLON LB LPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 25)  var_decl        -> .var_decl LB RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 27)  var_decl        -> .STAR var_decl[SEMI COMMA EQUAL COLON LB LPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[SEMI COMMA LB LPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[SEMI COMMA LB LPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[SEMI COMMA LB LPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[SEMI COMMA LB LPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[SEMI COMMA LB LPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[SEMI COMMA LB LPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[SEMI COMMA LB LPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[SEMI COMMA LB LPAR]
 ( 65)  decl            -> .funct_decl[SEMI COMMA]
 ( 66)  decl            -> .var_decl[SEMI COMMA]
 ( 67)  decl            -> .var_decl EQUAL initializer[SEMI COMMA]
 ( 68)  decl            -> .var_decl COLON const_expr[SEMI COMMA]
 ( 69)  decl            -> .COLON const_expr[SEMI COMMA]
 (164)  name            -> .NAME[SEMI COMMA EQUAL COLON LB LPAR]

   Shift to   105 on COLON
   Shift to    55 on STAR
   Shift to    56 on LPAR
   Shift to   145 on NAME
   Goto   242 on funct_decl
   Goto    39 on var_decl
   Goto   144 on name
   Goto   281 on decl

State 116:
 ( 67)K decl            -> var_decl EQUAL .initializer[SEMI COMMA]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (158)  initializer     -> .expr[SEMI COMMA]
 (159)  initializer     -> .LC initializer_list RC[SEMI COMMA]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    72 on LC
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   282 on initializer
   Goto   179 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 117:
 ( 68)K decl            -> var_decl COLON .const_expr[SEMI COMMA]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (157)  const_expr      -> .expr[SEMI COMMA]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto   283 on const_expr
   Goto   171 on expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 118:
 ( 90)K statement       -> IF LPAR test RPAR .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)K statement       -> IF LPAR test RPAR .statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    97 on RETURN
   Shift to   206 on GOTO
   Shift to   208 on IF
   Shift to   213 on SWITCH
   Shift to    99 on CASE
   Shift to   214 on DEFAULT
   Shift to   211 on BREAK
   Shift to   212 on CONTINUE
   Shift to   209 on WHILE
   Shift to    98 on DO
   Shift to   210 on FOR
   Shift to    19 on TRYSTMT
   Shift to   100 on THROW
   Shift to   156 on LC
   Shift to   204 on SEMI
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   215 on NAME
   Goto   205 on compound_stmt
   Goto   287 on statement
   Goto    18 on expr
   Goto   207 on target
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 119:
 ( 92)K statement       -> WHILE LPAR test RPAR .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    97 on RETURN
   Shift to   206 on GOTO
   Shift to   208 on IF
   Shift to   213 on SWITCH
   Shift to    99 on CASE
   Shift to   214 on DEFAULT
   Shift to   211 on BREAK
   Shift to   212 on CONTINUE
   Shift to   209 on WHILE
   Shift to    98 on DO
   Shift to   210 on FOR
   Shift to    19 on TRYSTMT
   Shift to   100 on THROW
   Shift to   156 on LC
   Shift to   204 on SEMI
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   215 on NAME
   Goto   205 on compound_stmt
   Goto   288 on statement
   Goto    18 on expr
   Goto   207 on target
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 120:
 ( 93)K statement       -> DO statement WHILE LPAR .test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (109)  test            -> .[RPAR]
 (110)  test            -> .expr[RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Reduce by  109 on RPAR
   Shift to   169 on NAME
   Goto    44 on expr
   Goto   289 on test
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 121:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI .test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (109)  test            -> .[SEMI]
 (110)  test            -> .expr[SEMI]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Reduce by  109 on SEMI
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   169 on NAME
   Goto    44 on expr
   Goto   290 on test
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 122:
 (104)K exception_handler -> CATCH LPAR .catch_type RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 (105)  catch_type      -> .ELLIPSIS[RPAR]
 (106)  catch_type      -> .type var_decl[RPAR]
 (107)  catch_type      -> .type[RPAR]

   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to   293 on ELLIPSIS
   Goto   185 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto   123 on type
   Goto     0 on enum
   Goto   292 on catch_type

State 123:
 ( 45)K type            -> type .type_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 (106)K catch_type      -> type .var_decl[RPAR]
 (107)K catch_type      -> type .[RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 22)  var_decl        -> .name[LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[LB LPAR RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 (164)  name            -> .NAME[LB LPAR RPAR]

   Shift to   136 on TYPE
   Shift to   139 on STRUCT
   Shift to   140 on ENUM
   Shift to   126 on STAR
   Shift to   127 on LPAR
   Reduce by  107 on RPAR
   Shift to   145 on NAME
   Goto   219 on type_specifier
   Goto   137 on enum_specifier
   Goto   138 on struct_specifier
   Goto    51 on var_decl
   Goto   221 on name
   Goto     0 on enum

State 124:
 ( 91)K statement       -> IF LPAR test RPAR statement ELSE .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    97 on RETURN
   Shift to   206 on GOTO
   Shift to   208 on IF
   Shift to   213 on SWITCH
   Shift to    99 on CASE
   Shift to   214 on DEFAULT
   Shift to   211 on BREAK
   Shift to   212 on CONTINUE
   Shift to   209 on WHILE
   Shift to    98 on DO
   Shift to   210 on FOR
   Shift to    19 on TRYSTMT
   Shift to   100 on THROW
   Shift to   156 on LC
   Shift to   204 on SEMI
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   215 on NAME
   Goto   205 on compound_stmt
   Goto   296 on statement
   Goto    18 on expr
   Goto   207 on target
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 125:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI test SEMI .opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (155)  opt_expr        -> .[RPAR]
 (156)  opt_expr        -> .expr[RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Reduce by  155 on RPAR
   Shift to   169 on NAME
   Goto    45 on expr
   Goto   298 on opt_expr
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 126:
 ( 27)K var_decl        -> STAR .var_decl[LB LPAR RPAR]
 ( 22)  var_decl        -> .name[LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[LB LPAR RPAR]
 (164)  name            -> .NAME[LB LPAR RPAR]

   Shift to   126 on STAR
   Shift to   127 on LPAR
   Shift to   145 on NAME
   Goto     3 on var_decl
   Goto   221 on name

State 127:
 ( 28)K var_decl        -> LPAR .var_decl RPAR[LB LPAR RPAR]
 ( 22)  var_decl        -> .name[LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[LB LPAR RPAR]
 (164)  name            -> .NAME[LB LPAR RPAR]

   Shift to   126 on STAR
   Shift to   127 on LPAR
   Shift to   145 on NAME
   Goto     4 on var_decl
   Goto   221 on name

State 128:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Shift to   176 on STRING
   Shift to   168 on ICON
   Shift to   167 on FCON
   Shift to    97 on RETURN
   Shift to   206 on GOTO
   Shift to   208 on IF
   Shift to   213 on SWITCH
   Shift to    99 on CASE
   Shift to   214 on DEFAULT
   Shift to   211 on BREAK
   Shift to   212 on CONTINUE
   Shift to   209 on WHILE
   Shift to    98 on DO
   Shift to   210 on FOR
   Shift to    19 on TRYSTMT
   Shift to   100 on THROW
   Shift to   156 on LC
   Shift to   204 on SEMI
   Shift to    69 on AND
   Shift to    66 on MINUS
   Shift to    70 on STAR
   Shift to   170 on SIZEOF
   Shift to    67 on UNOP
   Shift to    68 on INCOP
   Shift to    65 on LPAR
   Shift to   215 on NAME
   Goto   205 on compound_stmt
   Goto   300 on statement
   Goto    18 on expr
   Goto   207 on target
   Goto     7 on unary
   Goto     6 on string_const
   Goto     8 on non_comma_expr
   Goto   172 on or_expr
   Goto   173 on or_list
   Goto   174 on and_expr
   Goto   175 on and_list
   Goto     9 on binary

State 129:
 ( 50)K abs_decl        -> STAR .abs_decl[COMMA LB RPAR]
 ( 48)  abs_decl        -> .[COMMA LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[COMMA LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[COMMA LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[COMMA LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[COMMA LB RPAR]

   Reduce by   48 on COMMA
   Shift to   129 on STAR
   Reduce by   48 on LB
   Shift to   223 on LPAR
   Reduce by   48 on RPAR
   Goto   255 on abs_decl

State 130:
 (  0)K program         -> .ext_def_list[EOI]
 (  1)  ext_def_list    -> .[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  2)  ext_def_list    -> .ext_def_list ext_def[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   Reduce by    1 on EOI
   Reduce by    1 on TYPE
   Reduce by    1 on STRUCT
   Reduce by    1 on ENUM
   Reduce by    1 on SEMI
   Reduce by    1 on STAR
   Reduce by    1 on LPAR
   Reduce by    1 on TTYPE
   Reduce by    1 on CLASS
   Reduce by    1 on NAME
   Goto    52 on ext_def_list

State 131:
 (  2)K ext_def_list    -> ext_def_list ext_def .[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   Reduce by    2 on EOI
   Reduce by    2 on TYPE
   Reduce by    2 on STRUCT
   Reduce by    2 on ENUM
   Reduce by    2 on SEMI
   Reduce by    2 on STAR
   Reduce by    2 on LPAR
   Reduce by    2 on TTYPE
   Reduce by    2 on CLASS
   Reduce by    2 on NAME

State 132:
 (  7)K opt_specifiers  -> CLASS .TTYPE[SEMI STAR LPAR NAME]
 ( 13)K type_or_class   -> CLASS .[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]

   Reduce by   13 on TYPE
   Reduce by   13 on STRUCT
   Reduce by   13 on ENUM
   Reduce by   13 on SEMI
   Reduce by   13 on STAR
   Reduce by   13 on LPAR
   Shift to   146 on TTYPE
   Reduce by   13 on CLASS
   Reduce by   13 on NAME

State 133:
 (  8)K opt_specifiers  -> TTYPE .[SEMI STAR LPAR NAME]

   Reduce by    8 on SEMI
   Reduce by    8 on STAR
   Reduce by    8 on LPAR
   Reduce by    8 on NAME

State 134:
 ( 10)K specifiers      -> type_or_class .[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]

   Reduce by   10 on TYPE
   Reduce by   10 on STRUCT
   Reduce by   10 on ENUM
   Reduce by   10 on SEMI
   Reduce by   10 on COLON
   Reduce by   10 on STAR
   Reduce by   10 on LPAR
   Reduce by   10 on CLASS
   Reduce by   10 on NAME

State 135:
 ( 12)K type_or_class   -> type_specifier .[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]

   Reduce by   12 on TYPE
   Reduce by   12 on STRUCT
   Reduce by   12 on ENUM
   Reduce by   12 on SEMI
   Reduce by   12 on COLON
   Reduce by   12 on STAR
   Reduce by   12 on LPAR
   Reduce by   12 on CLASS
   Reduce by   12 on NAME

State 136:
 ( 14)K type_specifier  -> TYPE .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by   14 on TYPE
   Reduce by   14 on STRUCT
   Reduce by   14 on ENUM
   Reduce by   14 on SEMI
   Reduce by   14 on COMMA
   Reduce by   14 on COLON
   Reduce by   14 on STAR
   Reduce by   14 on LB
   Reduce by   14 on LPAR
   Reduce by   14 on RPAR
   Reduce by   14 on CLASS
   Reduce by   14 on NAME

State 137:
 ( 15)K type_specifier  -> enum_specifier .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by   15 on TYPE
   Reduce by   15 on STRUCT
   Reduce by   15 on ENUM
   Reduce by   15 on SEMI
   Reduce by   15 on COMMA
   Reduce by   15 on COLON
   Reduce by   15 on STAR
   Reduce by   15 on LB
   Reduce by   15 on LPAR
   Reduce by   15 on RPAR
   Reduce by   15 on CLASS
   Reduce by   15 on NAME

State 138:
 ( 16)K type_specifier  -> struct_specifier .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by   16 on TYPE
   Reduce by   16 on STRUCT
   Reduce by   16 on ENUM
   Reduce by   16 on SEMI
   Reduce by   16 on COMMA
   Reduce by   16 on COLON
   Reduce by   16 on STAR
   Reduce by   16 on LB
   Reduce by   16 on LPAR
   Reduce by   16 on RPAR
   Reduce by   16 on CLASS
   Reduce by   16 on NAME

State 139:
 ( 54)K struct_specifier -> STRUCT .opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 55)K struct_specifier -> STRUCT .tag[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 56)  opt_tag         -> .[LC]
 ( 57)  opt_tag         -> .tag[LC]
 ( 58)  tag             -> .NAME[TYPE STRUCT ENUM LC SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by   56 on LC
   Shift to   151 on NAME
   Goto   149 on opt_tag
   Goto   150 on tag

State 140:
 ( 74)K enum            -> ENUM .[LC NAME]

   Reduce by   74 on LC
   Reduce by   74 on NAME

State 141:
 (  3)K ext_def         -> opt_specifiers ext_decl_list .SEMI[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 ( 18)K ext_decl_list   -> ext_decl_list .COMMA ext_decl[SEMI COMMA]

   Shift to   153 on SEMI
   Shift to    58 on COMMA

State 142:
 (  4)K ext_def         -> opt_specifiers SEMI .[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   Reduce by    4 on EOI
   Reduce by    4 on TYPE
   Reduce by    4 on STRUCT
   Reduce by    4 on ENUM
   Reduce by    4 on SEMI
   Reduce by    4 on STAR
   Reduce by    4 on LPAR
   Reduce by    4 on TTYPE
   Reduce by    4 on CLASS
   Reduce by    4 on NAME

State 143:
 ( 17)K ext_decl_list   -> ext_decl .[SEMI COMMA]

   Reduce by   17 on SEMI
   Reduce by   17 on COMMA

State 144:
 ( 22)K var_decl        -> name .[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 34)K funct_decl      -> name .LPAR RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 35)K funct_decl      -> name .LPAR name_list RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 36)K funct_decl      -> name .LPAR var_list RPAR[LC SEMI COMMA LB LPAR RPAR]

   Reduce by   22 on SEMI
   Reduce by   22 on COMMA
   Reduce by   22 on EQUAL
   Reduce by   22 on COLON
   Reduce by   22 on LB
   Shift to    63 on LPAR
   Reduce by   22 on RPAR

warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 22 (prec=1).
State 145:
 (164)K name            -> NAME .[TYPE STRUCT ENUM LC RC SEMI COMMA EQUAL COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by  164 on TYPE
   Reduce by  164 on STRUCT
   Reduce by  164 on ENUM
   Reduce by  164 on LC
   Reduce by  164 on RC
   Reduce by  164 on SEMI
   Reduce by  164 on COMMA
   Reduce by  164 on EQUAL
   Reduce by  164 on COLON
   Reduce by  164 on STAR
   Reduce by  164 on LB
   Reduce by  164 on LPAR
   Reduce by  164 on RPAR
   Reduce by  164 on CLASS
   Reduce by  164 on NAME

State 146:
 (  7)K opt_specifiers  -> CLASS TTYPE .[SEMI STAR LPAR NAME]

   Reduce by    7 on SEMI
   Reduce by    7 on STAR
   Reduce by    7 on LPAR
   Reduce by    7 on NAME

State 147:
 ( 11)K specifiers      -> specifiers type_or_class .[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]

   Reduce by   11 on TYPE
   Reduce by   11 on STRUCT
   Reduce by   11 on ENUM
   Reduce by   11 on SEMI
   Reduce by   11 on COLON
   Reduce by   11 on STAR
   Reduce by   11 on LPAR
   Reduce by   11 on CLASS
   Reduce by   11 on NAME

State 148:
 ( 13)K type_or_class   -> CLASS .[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]

   Reduce by   13 on TYPE
   Reduce by   13 on STRUCT
   Reduce by   13 on ENUM
   Reduce by   13 on SEMI
   Reduce by   13 on COLON
   Reduce by   13 on STAR
   Reduce by   13 on LPAR
   Reduce by   13 on CLASS
   Reduce by   13 on NAME

State 149:
 ( 54)K struct_specifier -> STRUCT opt_tag .LC def_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Shift to   159 on LC

State 150:
 ( 55)K struct_specifier -> STRUCT tag .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 57)K opt_tag         -> tag .[LC]

   Reduce by   55 on TYPE
   Reduce by   55 on STRUCT
   Reduce by   55 on ENUM
   Reduce by   57 on LC
   Reduce by   55 on SEMI
   Reduce by   55 on COMMA
   Reduce by   55 on COLON
   Reduce by   55 on STAR
   Reduce by   55 on LB
   Reduce by   55 on LPAR
   Reduce by   55 on RPAR
   Reduce by   55 on CLASS
   Reduce by   55 on NAME

State 151:
 ( 58)K tag             -> NAME .[TYPE STRUCT ENUM LC SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by   58 on TYPE
   Reduce by   58 on STRUCT
   Reduce by   58 on ENUM
   Reduce by   58 on LC
   Reduce by   58 on SEMI
   Reduce by   58 on COMMA
   Reduce by   58 on COLON
   Reduce by   58 on STAR
   Reduce by   58 on LB
   Reduce by   58 on LPAR
   Reduce by   58 on RPAR
   Reduce by   58 on CLASS
   Reduce by   58 on NAME

State 152:
 ( 70)K enum_specifier  -> enum name .opt_enum_list[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 72)  opt_enum_list   -> .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 73)  opt_enum_list   -> .LC enumerator_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by   72 on TYPE
   Reduce by   72 on STRUCT
   Reduce by   72 on ENUM
   Shift to    64 on LC
   Reduce by   72 on SEMI
   Reduce by   72 on COMMA
   Reduce by   72 on COLON
   Reduce by   72 on STAR
   Reduce by   72 on LB
   Reduce by   72 on LPAR
   Reduce by   72 on RPAR
   Reduce by   72 on CLASS
   Reduce by   72 on NAME
   Goto   160 on opt_enum_list

State 153:
 (  3)K ext_def         -> opt_specifiers ext_decl_list SEMI .[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   Reduce by    3 on EOI
   Reduce by    3 on TYPE
   Reduce by    3 on STRUCT
   Reduce by    3 on ENUM
   Reduce by    3 on SEMI
   Reduce by    3 on STAR
   Reduce by    3 on LPAR
   Reduce by    3 on TTYPE
   Reduce by    3 on CLASS
   Reduce by    3 on NAME

State 154:
 (  5)K ext_def         -> opt_specifiers funct_decl compound_stmt .[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   Reduce by    5 on EOI
   Reduce by    5 on TYPE
   Reduce by    5 on STRUCT
   Reduce by    5 on ENUM
   Reduce by    5 on SEMI
   Reduce by    5 on STAR
   Reduce by    5 on LPAR
   Reduce by    5 on TTYPE
   Reduce by    5 on CLASS
   Reduce by    5 on NAME

State 155:
 ( 33)K funct_decl      -> funct_decl LPAR .RPAR[LC SEMI COMMA LB LPAR RPAR]

   Shift to   177 on RPAR

State 156:
 ( 79)K compound_stmt   -> LC .stmt_list RC[EOI STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR TTYPE CLASS NAME ELSE]
 ( 80)  stmt_list       -> .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 81)  stmt_list       -> .stmt_list statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 82)  stmt_list       -> .stmt_list def[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]

   Reduce by   80 on STRING
   Reduce by   80 on ICON
   Reduce by   80 on FCON
   Reduce by   80 on TYPE
   Reduce by   80 on STRUCT
   Reduce by   80 on ENUM
   Reduce by   80 on RETURN
   Reduce by   80 on GOTO
   Reduce by   80 on IF
   Reduce by   80 on SWITCH
   Reduce by   80 on CASE
   Reduce by   80 on DEFAULT
   Reduce by   80 on BREAK
   Reduce by   80 on CONTINUE
   Reduce by   80 on WHILE
   Reduce by   80 on DO
   Reduce by   80 on FOR
   Reduce by   80 on TRYSTMT
   Reduce by   80 on THROW
   Reduce by   80 on LC
   Reduce by   80 on RC
   Reduce by   80 on SEMI
   Reduce by   80 on AND
   Reduce by   80 on MINUS
   Reduce by   80 on STAR
   Reduce by   80 on SIZEOF
   Reduce by   80 on UNOP
   Reduce by   80 on INCOP
   Reduce by   80 on LPAR
   Reduce by   80 on CLASS
   Reduce by   80 on NAME
   Goto    71 on stmt_list

State 157:
 ( 29)K funct_decl      -> STAR funct_decl .[LC SEMI COMMA LB LPAR RPAR]
 ( 30)K funct_decl      -> funct_decl .LB RB[LC SEMI COMMA LB LPAR RPAR]
 ( 31)K funct_decl      -> funct_decl .LB const_expr RB[LC SEMI COMMA LB LPAR RPAR]
 ( 33)K funct_decl      -> funct_decl .LPAR RPAR[LC SEMI COMMA LB LPAR RPAR]

   Reduce by   29 on LC
   Reduce by   29 on SEMI
   Reduce by   29 on COMMA
   Shift to    59 on LB
   Shift to   155 on LPAR
   Reduce by   29 on RPAR

warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 29 (prec=13).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 29 (prec=13).
State 158:
 ( 30)K funct_decl      -> funct_decl .LB RB[LB LPAR RPAR]
 ( 31)K funct_decl      -> funct_decl .LB const_expr RB[LB LPAR RPAR]
 ( 32)K funct_decl      -> LPAR funct_decl .RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 33)K funct_decl      -> funct_decl .LPAR RPAR[LB LPAR RPAR]

   Shift to    59 on LB
   Shift to   155 on LPAR
   Shift to   194 on RPAR

State 159:
 ( 54)K struct_specifier -> STRUCT opt_tag LC .def_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 59)  def_list        -> .[TYPE STRUCT ENUM RC CLASS]
 ( 60)  def_list        -> .def_list def[TYPE STRUCT ENUM RC CLASS]

   Reduce by   59 on TYPE
   Reduce by   59 on STRUCT
   Reduce by   59 on ENUM
   Reduce by   59 on RC
   Reduce by   59 on CLASS
   Goto    74 on def_list

State 160:
 ( 70)K enum_specifier  -> enum name opt_enum_list .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by   70 on TYPE
   Reduce by   70 on STRUCT
   Reduce by   70 on ENUM
   Reduce by   70 on SEMI
   Reduce by   70 on COMMA
   Reduce by   70 on COLON
   Reduce by   70 on STAR
   Reduce by   70 on LB
   Reduce by   70 on LPAR
   Reduce by   70 on RPAR
   Reduce by   70 on CLASS
   Reduce by   70 on NAME

State 161:
 ( 75)K enumerator_list -> enumerator .[RC COMMA]

   Reduce by   75 on RC
   Reduce by   75 on COMMA

State 162:
 ( 77)K enumerator      -> name .[RC COMMA]
 ( 78)K enumerator      -> name .EQUAL const_expr[RC COMMA]

   Reduce by   77 on RC
   Reduce by   77 on COMMA
   Shift to    75 on EQUAL

State 163:
 ( 18)K ext_decl_list   -> ext_decl_list COMMA ext_decl .[SEMI COMMA]

   Reduce by   18 on SEMI
   Reduce by   18 on COMMA

State 164:
 ( 21)K ext_decl        -> funct_decl .[SEMI COMMA]
 ( 30)K funct_decl      -> funct_decl .LB RB[SEMI COMMA LB LPAR]
 ( 31)K funct_decl      -> funct_decl .LB const_expr RB[SEMI COMMA LB LPAR]
 ( 33)K funct_decl      -> funct_decl .LPAR RPAR[SEMI COMMA LB LPAR]

   Reduce by   21 on SEMI
   Reduce by   21 on COMMA
   Shift to    59 on LB
   Shift to   155 on LPAR

State 165:
 ( 30)K funct_decl      -> funct_decl LB RB .[LC SEMI COMMA LB LPAR RPAR]

   Reduce by   30 on LC
   Reduce by   30 on SEMI
   Reduce by   30 on COMMA
   Reduce by   30 on LB
   Reduce by   30 on LPAR
   Reduce by   30 on RPAR

State 166:
 ( 31)K funct_decl      -> funct_decl LB const_expr .RB[LC SEMI COMMA LB LPAR RPAR]

   Shift to   196 on RB

State 167:
 (112)K unary           -> FCON .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  112 on RC
   Reduce by  112 on SEMI
   Reduce by  112 on COMMA
   Reduce by  112 on EQUAL
   Reduce by  112 on ASSIGNOP
   Reduce by  112 on QUEST
   Reduce by  112 on COLON
   Reduce by  112 on OROR
   Reduce by  112 on ANDAND
   Reduce by  112 on OR
   Reduce by  112 on XOR
   Reduce by  112 on AND
   Reduce by  112 on EQUOP
   Reduce by  112 on RELOP
   Reduce by  112 on SHIFTOP
   Reduce by  112 on PLUS
   Reduce by  112 on MINUS
   Reduce by  112 on STAR
   Reduce by  112 on DIVOP
   Reduce by  112 on INCOP
   Reduce by  112 on LB
   Reduce by  112 on RB
   Reduce by  112 on LPAR
   Reduce by  112 on RPAR
   Reduce by  112 on STRUCTOP

State 168:
 (113)K unary           -> ICON .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  113 on RC
   Reduce by  113 on SEMI
   Reduce by  113 on COMMA
   Reduce by  113 on EQUAL
   Reduce by  113 on ASSIGNOP
   Reduce by  113 on QUEST
   Reduce by  113 on COLON
   Reduce by  113 on OROR
   Reduce by  113 on ANDAND
   Reduce by  113 on OR
   Reduce by  113 on XOR
   Reduce by  113 on AND
   Reduce by  113 on EQUOP
   Reduce by  113 on RELOP
   Reduce by  113 on SHIFTOP
   Reduce by  113 on PLUS
   Reduce by  113 on MINUS
   Reduce by  113 on STAR
   Reduce by  113 on DIVOP
   Reduce by  113 on INCOP
   Reduce by  113 on LB
   Reduce by  113 on RB
   Reduce by  113 on LPAR
   Reduce by  113 on RPAR
   Reduce by  113 on STRUCTOP

State 169:
 (114)K unary           -> NAME .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  114 on RC
   Reduce by  114 on SEMI
   Reduce by  114 on COMMA
   Reduce by  114 on EQUAL
   Reduce by  114 on ASSIGNOP
   Reduce by  114 on QUEST
   Reduce by  114 on COLON
   Reduce by  114 on OROR
   Reduce by  114 on ANDAND
   Reduce by  114 on OR
   Reduce by  114 on XOR
   Reduce by  114 on AND
   Reduce by  114 on EQUOP
   Reduce by  114 on RELOP
   Reduce by  114 on SHIFTOP
   Reduce by  114 on PLUS
   Reduce by  114 on MINUS
   Reduce by  114 on STAR
   Reduce by  114 on DIVOP
   Reduce by  114 on INCOP
   Reduce by  114 on LB
   Reduce by  114 on RB
   Reduce by  114 on LPAR
   Reduce by  114 on RPAR
   Reduce by  114 on STRUCTOP

State 170:
 (116)K unary           -> SIZEOF .LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)K unary           -> SIZEOF .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)K unary           -> SIZEOF .LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to    77 on LPAR

State 171:
 (132)K expr            -> expr .COMMA non_comma_expr[RC SEMI COMMA COLON RB]
 (157)K const_expr      -> expr .[RC SEMI COMMA COLON RB]

   Reduce by  157 on RC
   Reduce by  157 on SEMI
   Reduce by  157 on COMMA
   Reduce by  157 on COLON
   Reduce by  157 on RB

warning --- Shift/reduce conflict on COMMA (prec=1, left assoc). Choose reduce by prod 157 (prec=1).
State 172:
 (137)K non_comma_expr  -> or_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   Reduce by  137 on RC
   Reduce by  137 on SEMI
   Reduce by  137 on COMMA
   Reduce by  137 on EQUAL
   Reduce by  137 on ASSIGNOP
   Reduce by  137 on QUEST
   Reduce by  137 on COLON
   Reduce by  137 on RB
   Reduce by  137 on RPAR

State 173:
 (138)K or_expr         -> or_list .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (139)K or_list         -> or_list .OROR and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]

   Reduce by  138 on RC
   Reduce by  138 on SEMI
   Reduce by  138 on COMMA
   Reduce by  138 on EQUAL
   Reduce by  138 on ASSIGNOP
   Reduce by  138 on QUEST
   Reduce by  138 on COLON
   Shift to    84 on OROR
   Reduce by  138 on RB
   Reduce by  138 on RPAR

State 174:
 (140)K or_list         -> and_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]

   Reduce by  140 on RC
   Reduce by  140 on SEMI
   Reduce by  140 on COMMA
   Reduce by  140 on EQUAL
   Reduce by  140 on ASSIGNOP
   Reduce by  140 on QUEST
   Reduce by  140 on COLON
   Reduce by  140 on OROR
   Reduce by  140 on RB
   Reduce by  140 on RPAR

State 175:
 (141)K and_expr        -> and_list .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)K and_list        -> and_list .ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]

   Reduce by  141 on RC
   Reduce by  141 on SEMI
   Reduce by  141 on COMMA
   Reduce by  141 on EQUAL
   Reduce by  141 on ASSIGNOP
   Reduce by  141 on QUEST
   Reduce by  141 on COLON
   Reduce by  141 on OROR
   Shift to    85 on ANDAND
   Reduce by  141 on RB
   Reduce by  141 on RPAR

State 176:
 (162)K string_const    -> STRING .[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  162 on STRING
   Reduce by  162 on RC
   Reduce by  162 on SEMI
   Reduce by  162 on COMMA
   Reduce by  162 on EQUAL
   Reduce by  162 on ASSIGNOP
   Reduce by  162 on QUEST
   Reduce by  162 on COLON
   Reduce by  162 on OROR
   Reduce by  162 on ANDAND
   Reduce by  162 on OR
   Reduce by  162 on XOR
   Reduce by  162 on AND
   Reduce by  162 on EQUOP
   Reduce by  162 on RELOP
   Reduce by  162 on SHIFTOP
   Reduce by  162 on PLUS
   Reduce by  162 on MINUS
   Reduce by  162 on STAR
   Reduce by  162 on DIVOP
   Reduce by  162 on INCOP
   Reduce by  162 on LB
   Reduce by  162 on RB
   Reduce by  162 on LPAR
   Reduce by  162 on RPAR
   Reduce by  162 on STRUCTOP

State 177:
 ( 33)K funct_decl      -> funct_decl LPAR RPAR .[LC SEMI COMMA LB LPAR RPAR]

   Reduce by   33 on LC
   Reduce by   33 on SEMI
   Reduce by   33 on COMMA
   Reduce by   33 on LB
   Reduce by   33 on LPAR
   Reduce by   33 on RPAR

State 178:
 ( 20)K ext_decl        -> var_decl EQUAL initializer .[SEMI COMMA]

   Reduce by   20 on SEMI
   Reduce by   20 on COMMA

State 179:
 (132)K expr            -> expr .COMMA non_comma_expr[RC SEMI COMMA]
 (158)K initializer     -> expr .[RC SEMI COMMA]

   Reduce by  158 on RC
   Reduce by  158 on SEMI
   Reduce by  158 on COMMA

warning --- Shift/reduce conflict on COMMA (prec=1, left assoc). Choose reduce by prod 158 (prec=1).
State 180:
 ( 23)K var_decl        -> var_decl LPAR RPAR .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   Reduce by   23 on SEMI
   Reduce by   23 on COMMA
   Reduce by   23 on EQUAL
   Reduce by   23 on COLON
   Reduce by   23 on LB
   Reduce by   23 on LPAR
   Reduce by   23 on RPAR

State 181:
 ( 24)K var_decl        -> var_decl LPAR var_list .RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 40)K var_list        -> var_list .COMMA param_declaration[COMMA RPAR]

   Shift to   101 on COMMA
   Shift to   218 on RPAR

State 182:
 ( 39)K var_list        -> param_declaration .[COMMA RPAR]

   Reduce by   39 on COMMA
   Reduce by   39 on RPAR

State 183:
 ( 42)K param_declaration -> abstract_decl .[COMMA RPAR]

   Reduce by   42 on COMMA
   Reduce by   42 on RPAR

State 184:
 ( 43)K param_declaration -> ELLIPSIS .[COMMA RPAR]

   Reduce by   43 on COMMA
   Reduce by   43 on RPAR

State 185:
 ( 44)K type            -> type_specifier .[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]

   Reduce by   44 on TYPE
   Reduce by   44 on STRUCT
   Reduce by   44 on ENUM
   Reduce by   44 on COMMA
   Reduce by   44 on STAR
   Reduce by   44 on LB
   Reduce by   44 on LPAR
   Reduce by   44 on RPAR
   Reduce by   44 on NAME

State 186:
 ( 47)K abstract_decl   -> TTYPE .abs_decl[COMMA RPAR]
 ( 48)  abs_decl        -> .[COMMA LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[COMMA LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[COMMA LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[COMMA LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[COMMA LB RPAR]

   Reduce by   48 on COMMA
   Shift to   129 on STAR
   Reduce by   48 on LB
   Shift to   223 on LPAR
   Reduce by   48 on RPAR
   Goto   222 on abs_decl

State 187:
 ( 25)K var_decl        -> var_decl LB RB .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   Reduce by   25 on SEMI
   Reduce by   25 on COMMA
   Reduce by   25 on EQUAL
   Reduce by   25 on COLON
   Reduce by   25 on LB
   Reduce by   25 on LPAR
   Reduce by   25 on RPAR

State 188:
 ( 26)K var_decl        -> var_decl LB const_expr .RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   Shift to   224 on RB

State 189:
 ( 34)K funct_decl      -> name LPAR RPAR .[LC SEMI COMMA LB LPAR RPAR]

   Reduce by   34 on LC
   Reduce by   34 on SEMI
   Reduce by   34 on COMMA
   Reduce by   34 on LB
   Reduce by   34 on LPAR
   Reduce by   34 on RPAR

State 190:
 ( 35)K funct_decl      -> name LPAR name_list .RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 38)K name_list       -> name_list .COMMA name[COMMA RPAR]

   Shift to    21 on COMMA
   Shift to   225 on RPAR

State 191:
 ( 36)K funct_decl      -> name LPAR var_list .RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 40)K var_list        -> var_list .COMMA param_declaration[COMMA RPAR]

   Shift to   101 on COMMA
   Shift to   226 on RPAR

State 192:
 ( 37)K name_list       -> name .[COMMA RPAR]

   Reduce by   37 on COMMA
   Reduce by   37 on RPAR

State 193:
 ( 28)K var_decl        -> LPAR var_decl RPAR .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   Reduce by   28 on SEMI
   Reduce by   28 on COMMA
   Reduce by   28 on EQUAL
   Reduce by   28 on COLON
   Reduce by   28 on LB
   Reduce by   28 on LPAR
   Reduce by   28 on RPAR

State 194:
 ( 32)K funct_decl      -> LPAR funct_decl RPAR .[LC SEMI COMMA LB LPAR RPAR]

   Reduce by   32 on LC
   Reduce by   32 on SEMI
   Reduce by   32 on COMMA
   Reduce by   32 on LB
   Reduce by   32 on LPAR
   Reduce by   32 on RPAR

State 195:
 ( 71)K enum_specifier  -> enum LC enumerator_list RC .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by   71 on TYPE
   Reduce by   71 on STRUCT
   Reduce by   71 on ENUM
   Reduce by   71 on SEMI
   Reduce by   71 on COMMA
   Reduce by   71 on COLON
   Reduce by   71 on STAR
   Reduce by   71 on LB
   Reduce by   71 on LPAR
   Reduce by   71 on RPAR
   Reduce by   71 on CLASS
   Reduce by   71 on NAME

State 196:
 ( 31)K funct_decl      -> funct_decl LB const_expr RB .[LC SEMI COMMA LB LPAR RPAR]

   Reduce by   31 on LC
   Reduce by   31 on SEMI
   Reduce by   31 on COMMA
   Reduce by   31 on LB
   Reduce by   31 on LPAR
   Reduce by   31 on RPAR

State 197:
 (119)K unary           -> LPAR abstract_decl .RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   104 on RPAR

State 198:
 (163)K string_const    -> string_const STRING .[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  163 on STRING
   Reduce by  163 on RC
   Reduce by  163 on SEMI
   Reduce by  163 on COMMA
   Reduce by  163 on EQUAL
   Reduce by  163 on ASSIGNOP
   Reduce by  163 on QUEST
   Reduce by  163 on COLON
   Reduce by  163 on OROR
   Reduce by  163 on ANDAND
   Reduce by  163 on OR
   Reduce by  163 on XOR
   Reduce by  163 on AND
   Reduce by  163 on EQUOP
   Reduce by  163 on RELOP
   Reduce by  163 on SHIFTOP
   Reduce by  163 on PLUS
   Reduce by  163 on MINUS
   Reduce by  163 on STAR
   Reduce by  163 on DIVOP
   Reduce by  163 on INCOP
   Reduce by  163 on LB
   Reduce by  163 on RB
   Reduce by  163 on LPAR
   Reduce by  163 on RPAR
   Reduce by  163 on STRUCTOP

State 199:
 (122)K unary           -> unary INCOP .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  122 on RC
   Reduce by  122 on SEMI
   Reduce by  122 on COMMA
   Reduce by  122 on EQUAL
   Reduce by  122 on ASSIGNOP
   Reduce by  122 on QUEST
   Reduce by  122 on COLON
   Reduce by  122 on OROR
   Reduce by  122 on ANDAND
   Reduce by  122 on OR
   Reduce by  122 on XOR
   Reduce by  122 on AND
   Reduce by  122 on EQUOP
   Reduce by  122 on RELOP
   Reduce by  122 on SHIFTOP
   Reduce by  122 on PLUS
   Reduce by  122 on MINUS
   Reduce by  122 on STAR
   Reduce by  122 on DIVOP
   Reduce by  122 on INCOP
   Reduce by  122 on LB
   Reduce by  122 on RB
   Reduce by  122 on LPAR
   Reduce by  122 on RPAR
   Reduce by  122 on STRUCTOP

State 200:
 (127)K unary           -> unary STRUCTOP .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   234 on NAME

State 201:
 ( 79)K compound_stmt   -> LC stmt_list RC .[EOI STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR TTYPE CLASS NAME ELSE]

   Reduce by   79 on EOI
   Reduce by   79 on STRING
   Reduce by   79 on ICON
   Reduce by   79 on FCON
   Reduce by   79 on TYPE
   Reduce by   79 on STRUCT
   Reduce by   79 on ENUM
   Reduce by   79 on RETURN
   Reduce by   79 on GOTO
   Reduce by   79 on IF
   Reduce by   79 on SWITCH
   Reduce by   79 on CASE
   Reduce by   79 on DEFAULT
   Reduce by   79 on BREAK
   Reduce by   79 on CONTINUE
   Reduce by   79 on WHILE
   Reduce by   79 on DO
   Reduce by   79 on FOR
   Reduce by   79 on TRYSTMT
   Reduce by   79 on CATCH
   Reduce by   79 on THROW
   Reduce by   79 on LC
   Reduce by   79 on RC
   Reduce by   79 on SEMI
   Reduce by   79 on AND
   Reduce by   79 on MINUS
   Reduce by   79 on STAR
   Reduce by   79 on SIZEOF
   Reduce by   79 on UNOP
   Reduce by   79 on INCOP
   Reduce by   79 on LPAR
   Reduce by   79 on TTYPE
   Reduce by   79 on CLASS
   Reduce by   79 on NAME
   Reduce by   79 on ELSE

State 202:
 ( 81)K stmt_list       -> stmt_list statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]

   Reduce by   81 on STRING
   Reduce by   81 on ICON
   Reduce by   81 on FCON
   Reduce by   81 on TYPE
   Reduce by   81 on STRUCT
   Reduce by   81 on ENUM
   Reduce by   81 on RETURN
   Reduce by   81 on GOTO
   Reduce by   81 on IF
   Reduce by   81 on SWITCH
   Reduce by   81 on CASE
   Reduce by   81 on DEFAULT
   Reduce by   81 on BREAK
   Reduce by   81 on CONTINUE
   Reduce by   81 on WHILE
   Reduce by   81 on DO
   Reduce by   81 on FOR
   Reduce by   81 on TRYSTMT
   Reduce by   81 on THROW
   Reduce by   81 on LC
   Reduce by   81 on RC
   Reduce by   81 on SEMI
   Reduce by   81 on AND
   Reduce by   81 on MINUS
   Reduce by   81 on STAR
   Reduce by   81 on SIZEOF
   Reduce by   81 on UNOP
   Reduce by   81 on INCOP
   Reduce by   81 on LPAR
   Reduce by   81 on CLASS
   Reduce by   81 on NAME

State 203:
 ( 82)K stmt_list       -> stmt_list def .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]

   Reduce by   82 on STRING
   Reduce by   82 on ICON
   Reduce by   82 on FCON
   Reduce by   82 on TYPE
   Reduce by   82 on STRUCT
   Reduce by   82 on ENUM
   Reduce by   82 on RETURN
   Reduce by   82 on GOTO
   Reduce by   82 on IF
   Reduce by   82 on SWITCH
   Reduce by   82 on CASE
   Reduce by   82 on DEFAULT
   Reduce by   82 on BREAK
   Reduce by   82 on CONTINUE
   Reduce by   82 on WHILE
   Reduce by   82 on DO
   Reduce by   82 on FOR
   Reduce by   82 on TRYSTMT
   Reduce by   82 on THROW
   Reduce by   82 on LC
   Reduce by   82 on RC
   Reduce by   82 on SEMI
   Reduce by   82 on AND
   Reduce by   82 on MINUS
   Reduce by   82 on STAR
   Reduce by   82 on SIZEOF
   Reduce by   82 on UNOP
   Reduce by   82 on INCOP
   Reduce by   82 on LPAR
   Reduce by   82 on CLASS
   Reduce by   82 on NAME

State 204:
 ( 83)K statement       -> SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   83 on STRING
   Reduce by   83 on ICON
   Reduce by   83 on FCON
   Reduce by   83 on TYPE
   Reduce by   83 on STRUCT
   Reduce by   83 on ENUM
   Reduce by   83 on RETURN
   Reduce by   83 on GOTO
   Reduce by   83 on IF
   Reduce by   83 on SWITCH
   Reduce by   83 on CASE
   Reduce by   83 on DEFAULT
   Reduce by   83 on BREAK
   Reduce by   83 on CONTINUE
   Reduce by   83 on WHILE
   Reduce by   83 on DO
   Reduce by   83 on FOR
   Reduce by   83 on TRYSTMT
   Reduce by   83 on THROW
   Reduce by   83 on LC
   Reduce by   83 on RC
   Reduce by   83 on SEMI
   Reduce by   83 on AND
   Reduce by   83 on MINUS
   Reduce by   83 on STAR
   Reduce by   83 on SIZEOF
   Reduce by   83 on UNOP
   Reduce by   83 on INCOP
   Reduce by   83 on LPAR
   Reduce by   83 on CLASS
   Reduce by   83 on NAME
   Reduce by   83 on ELSE

State 205:
 ( 84)K statement       -> compound_stmt .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   84 on STRING
   Reduce by   84 on ICON
   Reduce by   84 on FCON
   Reduce by   84 on TYPE
   Reduce by   84 on STRUCT
   Reduce by   84 on ENUM
   Reduce by   84 on RETURN
   Reduce by   84 on GOTO
   Reduce by   84 on IF
   Reduce by   84 on SWITCH
   Reduce by   84 on CASE
   Reduce by   84 on DEFAULT
   Reduce by   84 on BREAK
   Reduce by   84 on CONTINUE
   Reduce by   84 on WHILE
   Reduce by   84 on DO
   Reduce by   84 on FOR
   Reduce by   84 on TRYSTMT
   Reduce by   84 on THROW
   Reduce by   84 on LC
   Reduce by   84 on RC
   Reduce by   84 on SEMI
   Reduce by   84 on AND
   Reduce by   84 on MINUS
   Reduce by   84 on STAR
   Reduce by   84 on SIZEOF
   Reduce by   84 on UNOP
   Reduce by   84 on INCOP
   Reduce by   84 on LPAR
   Reduce by   84 on CLASS
   Reduce by   84 on NAME
   Reduce by   84 on ELSE

State 206:
 ( 88)K statement       -> GOTO .target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[SEMI]

   Shift to   247 on NAME
   Goto   246 on target

State 207:
 ( 89)K statement       -> target .COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   106 on COLON

State 208:
 ( 90)K statement       -> IF .LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)K statement       -> IF .LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   107 on LPAR

State 209:
 ( 92)K statement       -> WHILE .LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   108 on LPAR

State 210:
 ( 94)K statement       -> FOR .LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   109 on LPAR

State 211:
 ( 95)K statement       -> BREAK .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   249 on SEMI

State 212:
 ( 96)K statement       -> CONTINUE .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   250 on SEMI

State 213:
 ( 97)K statement       -> SWITCH .LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   110 on LPAR

State 214:
 ( 99)K statement       -> DEFAULT .COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   252 on COLON

State 215:
 (108)K target          -> NAME .[COLON]
 (114)K unary           -> NAME .[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   Reduce by  114 on SEMI
   Reduce by  114 on COMMA
   Reduce by  114 on EQUAL
   Reduce by  114 on ASSIGNOP
   Reduce by  114 on QUEST
   Reduce by  108 on COLON
   Reduce by  114 on OROR
   Reduce by  114 on ANDAND
   Reduce by  114 on OR
   Reduce by  114 on XOR
   Reduce by  114 on AND
   Reduce by  114 on EQUOP
   Reduce by  114 on RELOP
   Reduce by  114 on SHIFTOP
   Reduce by  114 on PLUS
   Reduce by  114 on MINUS
   Reduce by  114 on STAR
   Reduce by  114 on DIVOP
   Reduce by  114 on INCOP
   Reduce by  114 on LB
   Reduce by  114 on LPAR
   Reduce by  114 on STRUCTOP

State 216:
 (159)K initializer     -> LC initializer_list .RC[RC SEMI COMMA]
 (161)K initializer_list -> initializer_list .COMMA initializer[RC COMMA]

   Shift to   253 on RC
   Shift to   111 on COMMA

State 217:
 (160)K initializer_list -> initializer .[RC COMMA]

   Reduce by  160 on RC
   Reduce by  160 on COMMA

State 218:
 ( 24)K var_decl        -> var_decl LPAR var_list RPAR .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   Reduce by   24 on SEMI
   Reduce by   24 on COMMA
   Reduce by   24 on EQUAL
   Reduce by   24 on COLON
   Reduce by   24 on LB
   Reduce by   24 on LPAR
   Reduce by   24 on RPAR

State 219:
 ( 45)K type            -> type type_specifier .[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]

   Reduce by   45 on TYPE
   Reduce by   45 on STRUCT
   Reduce by   45 on ENUM
   Reduce by   45 on COMMA
   Reduce by   45 on STAR
   Reduce by   45 on LB
   Reduce by   45 on LPAR
   Reduce by   45 on RPAR
   Reduce by   45 on NAME

State 220:
 ( 46)K abstract_decl   -> type abs_decl .[COMMA RPAR]
 ( 51)K abs_decl        -> abs_decl .LB RB[COMMA LB RPAR]
 ( 52)K abs_decl        -> abs_decl .LB const_expr RB[COMMA LB RPAR]

   Reduce by   46 on COMMA
   Shift to   112 on LB
   Reduce by   46 on RPAR

State 221:
 ( 22)K var_decl        -> name .[COMMA LB LPAR RPAR]

   Reduce by   22 on COMMA
   Reduce by   22 on LB
   Reduce by   22 on LPAR
   Reduce by   22 on RPAR

State 222:
 ( 47)K abstract_decl   -> TTYPE abs_decl .[COMMA RPAR]
 ( 51)K abs_decl        -> abs_decl .LB RB[COMMA LB RPAR]
 ( 52)K abs_decl        -> abs_decl .LB const_expr RB[COMMA LB RPAR]

   Reduce by   47 on COMMA
   Shift to   112 on LB
   Reduce by   47 on RPAR

State 223:
 ( 49)K abs_decl        -> LPAR .abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 53)K abs_decl        -> LPAR .abs_decl RPAR[COMMA LB RPAR]
 ( 48)  abs_decl        -> .[LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[LB RPAR]

   Shift to   129 on STAR
   Reduce by   48 on LB
   Shift to   223 on LPAR
   Reduce by   48 on RPAR
   Goto   256 on abs_decl

State 224:
 ( 26)K var_decl        -> var_decl LB const_expr RB .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   Reduce by   26 on SEMI
   Reduce by   26 on COMMA
   Reduce by   26 on EQUAL
   Reduce by   26 on COLON
   Reduce by   26 on LB
   Reduce by   26 on LPAR
   Reduce by   26 on RPAR

State 225:
 ( 35)K funct_decl      -> name LPAR name_list RPAR .[LC SEMI COMMA LB LPAR RPAR]

   Reduce by   35 on LC
   Reduce by   35 on SEMI
   Reduce by   35 on COMMA
   Reduce by   35 on LB
   Reduce by   35 on LPAR
   Reduce by   35 on RPAR

State 226:
 ( 36)K funct_decl      -> name LPAR var_list RPAR .[LC SEMI COMMA LB LPAR RPAR]

   Reduce by   36 on LC
   Reduce by   36 on SEMI
   Reduce by   36 on COMMA
   Reduce by   36 on LB
   Reduce by   36 on LPAR
   Reduce by   36 on RPAR

State 227:
 ( 54)K struct_specifier -> STRUCT opt_tag LC def_list RC .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by   54 on TYPE
   Reduce by   54 on STRUCT
   Reduce by   54 on ENUM
   Reduce by   54 on SEMI
   Reduce by   54 on COMMA
   Reduce by   54 on COLON
   Reduce by   54 on STAR
   Reduce by   54 on LB
   Reduce by   54 on LPAR
   Reduce by   54 on RPAR
   Reduce by   54 on CLASS
   Reduce by   54 on NAME

State 228:
 ( 60)K def_list        -> def_list def .[TYPE STRUCT ENUM RC CLASS]

   Reduce by   60 on TYPE
   Reduce by   60 on STRUCT
   Reduce by   60 on ENUM
   Reduce by   60 on RC
   Reduce by   60 on CLASS

State 229:
 ( 73)K opt_enum_list   -> LC enumerator_list RC .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   Reduce by   73 on TYPE
   Reduce by   73 on STRUCT
   Reduce by   73 on ENUM
   Reduce by   73 on SEMI
   Reduce by   73 on COMMA
   Reduce by   73 on COLON
   Reduce by   73 on STAR
   Reduce by   73 on LB
   Reduce by   73 on LPAR
   Reduce by   73 on RPAR
   Reduce by   73 on CLASS
   Reduce by   73 on NAME

State 230:
 ( 76)K enumerator_list -> enumerator_list COMMA enumerator .[RC COMMA]

   Reduce by   76 on RC
   Reduce by   76 on COMMA

State 231:
 ( 78)K enumerator      -> name EQUAL const_expr .[RC COMMA]

   Reduce by   78 on RC
   Reduce by   78 on COMMA

State 232:
 (111)K unary           -> LPAR expr RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  111 on RC
   Reduce by  111 on SEMI
   Reduce by  111 on COMMA
   Reduce by  111 on EQUAL
   Reduce by  111 on ASSIGNOP
   Reduce by  111 on QUEST
   Reduce by  111 on COLON
   Reduce by  111 on OROR
   Reduce by  111 on ANDAND
   Reduce by  111 on OR
   Reduce by  111 on XOR
   Reduce by  111 on AND
   Reduce by  111 on EQUOP
   Reduce by  111 on RELOP
   Reduce by  111 on SHIFTOP
   Reduce by  111 on PLUS
   Reduce by  111 on MINUS
   Reduce by  111 on STAR
   Reduce by  111 on DIVOP
   Reduce by  111 on INCOP
   Reduce by  111 on LB
   Reduce by  111 on RB
   Reduce by  111 on LPAR
   Reduce by  111 on RPAR
   Reduce by  111 on STRUCTOP

State 233:
 (118)K unary           -> SIZEOF LPAR abstract_decl .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   260 on RPAR

State 234:
 (127)K unary           -> unary STRUCTOP NAME .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  127 on RC
   Reduce by  127 on SEMI
   Reduce by  127 on COMMA
   Reduce by  127 on EQUAL
   Reduce by  127 on ASSIGNOP
   Reduce by  127 on QUEST
   Reduce by  127 on COLON
   Reduce by  127 on OROR
   Reduce by  127 on ANDAND
   Reduce by  127 on OR
   Reduce by  127 on XOR
   Reduce by  127 on AND
   Reduce by  127 on EQUOP
   Reduce by  127 on RELOP
   Reduce by  127 on SHIFTOP
   Reduce by  127 on PLUS
   Reduce by  127 on MINUS
   Reduce by  127 on STAR
   Reduce by  127 on DIVOP
   Reduce by  127 on INCOP
   Reduce by  127 on LB
   Reduce by  127 on RB
   Reduce by  127 on LPAR
   Reduce by  127 on RPAR
   Reduce by  127 on STRUCTOP

State 235:
 (128)K unary           -> unary LPAR args .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Shift to   262 on RPAR

State 236:
 (129)K unary           -> unary LPAR RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  129 on RC
   Reduce by  129 on SEMI
   Reduce by  129 on COMMA
   Reduce by  129 on EQUAL
   Reduce by  129 on ASSIGNOP
   Reduce by  129 on QUEST
   Reduce by  129 on COLON
   Reduce by  129 on OROR
   Reduce by  129 on ANDAND
   Reduce by  129 on OR
   Reduce by  129 on XOR
   Reduce by  129 on AND
   Reduce by  129 on EQUOP
   Reduce by  129 on RELOP
   Reduce by  129 on SHIFTOP
   Reduce by  129 on PLUS
   Reduce by  129 on MINUS
   Reduce by  129 on STAR
   Reduce by  129 on DIVOP
   Reduce by  129 on INCOP
   Reduce by  129 on LB
   Reduce by  129 on RB
   Reduce by  129 on LPAR
   Reduce by  129 on RPAR
   Reduce by  129 on STRUCTOP

State 237:
 (139)K or_list         -> or_list OROR and_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]

   Reduce by  139 on RC
   Reduce by  139 on SEMI
   Reduce by  139 on COMMA
   Reduce by  139 on EQUAL
   Reduce by  139 on ASSIGNOP
   Reduce by  139 on QUEST
   Reduce by  139 on COLON
   Reduce by  139 on OROR
   Reduce by  139 on RB
   Reduce by  139 on RPAR

State 238:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary STAR binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  146 on RC
   Reduce by  146 on SEMI
   Reduce by  146 on COMMA
   Reduce by  146 on EQUAL
   Reduce by  146 on ASSIGNOP
   Reduce by  146 on QUEST
   Reduce by  146 on COLON
   Reduce by  146 on OROR
   Reduce by  146 on ANDAND
   Reduce by  146 on OR
   Reduce by  146 on XOR
   Reduce by  146 on AND
   Reduce by  146 on EQUOP
   Reduce by  146 on RELOP
   Reduce by  146 on SHIFTOP
   Reduce by  146 on PLUS
   Reduce by  146 on MINUS
   Reduce by  146 on STAR
   Reduce by  146 on DIVOP
   Reduce by  146 on RB
   Reduce by  146 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose reduce by prod 146 (prec=13).
State 239:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary DIVOP binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   Reduce by  147 on RC
   Reduce by  147 on SEMI
   Reduce by  147 on COMMA
   Reduce by  147 on EQUAL
   Reduce by  147 on ASSIGNOP
   Reduce by  147 on QUEST
   Reduce by  147 on COLON
   Reduce by  147 on OROR
   Reduce by  147 on ANDAND
   Reduce by  147 on OR
   Reduce by  147 on XOR
   Reduce by  147 on AND
   Reduce by  147 on EQUOP
   Reduce by  147 on RELOP
   Reduce by  147 on SHIFTOP
   Reduce by  147 on PLUS
   Reduce by  147 on MINUS
   Reduce by  147 on STAR
   Reduce by  147 on DIVOP
   Reduce by  147 on RB
   Reduce by  147 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose reduce by prod 147 (prec=13).
State 240:
 ( 61)K def             -> specifiers decl_list .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 64)K decl_list       -> decl_list .COMMA decl[SEMI COMMA]

   Shift to   263 on SEMI
   Shift to   115 on COMMA

State 241:
 ( 62)K def             -> specifiers SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]

   Reduce by   62 on STRING
   Reduce by   62 on ICON
   Reduce by   62 on FCON
   Reduce by   62 on TYPE
   Reduce by   62 on STRUCT
   Reduce by   62 on ENUM
   Reduce by   62 on RETURN
   Reduce by   62 on GOTO
   Reduce by   62 on IF
   Reduce by   62 on SWITCH
   Reduce by   62 on CASE
   Reduce by   62 on DEFAULT
   Reduce by   62 on BREAK
   Reduce by   62 on CONTINUE
   Reduce by   62 on WHILE
   Reduce by   62 on DO
   Reduce by   62 on FOR
   Reduce by   62 on TRYSTMT
   Reduce by   62 on THROW
   Reduce by   62 on LC
   Reduce by   62 on RC
   Reduce by   62 on SEMI
   Reduce by   62 on AND
   Reduce by   62 on MINUS
   Reduce by   62 on STAR
   Reduce by   62 on SIZEOF
   Reduce by   62 on UNOP
   Reduce by   62 on INCOP
   Reduce by   62 on LPAR
   Reduce by   62 on CLASS
   Reduce by   62 on NAME

State 242:
 ( 30)K funct_decl      -> funct_decl .LB RB[SEMI COMMA LB LPAR]
 ( 31)K funct_decl      -> funct_decl .LB const_expr RB[SEMI COMMA LB LPAR]
 ( 33)K funct_decl      -> funct_decl .LPAR RPAR[SEMI COMMA LB LPAR]
 ( 65)K decl            -> funct_decl .[SEMI COMMA]

   Reduce by   65 on SEMI
   Reduce by   65 on COMMA
   Shift to    59 on LB
   Shift to   155 on LPAR

State 243:
 ( 63)K decl_list       -> decl .[SEMI COMMA]

   Reduce by   63 on SEMI
   Reduce by   63 on COMMA

State 244:
 ( 85)K statement       -> expr SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   85 on STRING
   Reduce by   85 on ICON
   Reduce by   85 on FCON
   Reduce by   85 on TYPE
   Reduce by   85 on STRUCT
   Reduce by   85 on ENUM
   Reduce by   85 on RETURN
   Reduce by   85 on GOTO
   Reduce by   85 on IF
   Reduce by   85 on SWITCH
   Reduce by   85 on CASE
   Reduce by   85 on DEFAULT
   Reduce by   85 on BREAK
   Reduce by   85 on CONTINUE
   Reduce by   85 on WHILE
   Reduce by   85 on DO
   Reduce by   85 on FOR
   Reduce by   85 on TRYSTMT
   Reduce by   85 on THROW
   Reduce by   85 on LC
   Reduce by   85 on RC
   Reduce by   85 on SEMI
   Reduce by   85 on AND
   Reduce by   85 on MINUS
   Reduce by   85 on STAR
   Reduce by   85 on SIZEOF
   Reduce by   85 on UNOP
   Reduce by   85 on INCOP
   Reduce by   85 on LPAR
   Reduce by   85 on CLASS
   Reduce by   85 on NAME
   Reduce by   85 on ELSE

State 245:
 ( 86)K statement       -> RETURN SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   86 on STRING
   Reduce by   86 on ICON
   Reduce by   86 on FCON
   Reduce by   86 on TYPE
   Reduce by   86 on STRUCT
   Reduce by   86 on ENUM
   Reduce by   86 on RETURN
   Reduce by   86 on GOTO
   Reduce by   86 on IF
   Reduce by   86 on SWITCH
   Reduce by   86 on CASE
   Reduce by   86 on DEFAULT
   Reduce by   86 on BREAK
   Reduce by   86 on CONTINUE
   Reduce by   86 on WHILE
   Reduce by   86 on DO
   Reduce by   86 on FOR
   Reduce by   86 on TRYSTMT
   Reduce by   86 on THROW
   Reduce by   86 on LC
   Reduce by   86 on RC
   Reduce by   86 on SEMI
   Reduce by   86 on AND
   Reduce by   86 on MINUS
   Reduce by   86 on STAR
   Reduce by   86 on SIZEOF
   Reduce by   86 on UNOP
   Reduce by   86 on INCOP
   Reduce by   86 on LPAR
   Reduce by   86 on CLASS
   Reduce by   86 on NAME
   Reduce by   86 on ELSE

State 246:
 ( 88)K statement       -> GOTO target .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   266 on SEMI

State 247:
 (108)K target          -> NAME .[SEMI]

   Reduce by  108 on SEMI

State 248:
 ( 93)K statement       -> DO statement .WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   270 on WHILE

State 249:
 ( 95)K statement       -> BREAK SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   95 on STRING
   Reduce by   95 on ICON
   Reduce by   95 on FCON
   Reduce by   95 on TYPE
   Reduce by   95 on STRUCT
   Reduce by   95 on ENUM
   Reduce by   95 on RETURN
   Reduce by   95 on GOTO
   Reduce by   95 on IF
   Reduce by   95 on SWITCH
   Reduce by   95 on CASE
   Reduce by   95 on DEFAULT
   Reduce by   95 on BREAK
   Reduce by   95 on CONTINUE
   Reduce by   95 on WHILE
   Reduce by   95 on DO
   Reduce by   95 on FOR
   Reduce by   95 on TRYSTMT
   Reduce by   95 on THROW
   Reduce by   95 on LC
   Reduce by   95 on RC
   Reduce by   95 on SEMI
   Reduce by   95 on AND
   Reduce by   95 on MINUS
   Reduce by   95 on STAR
   Reduce by   95 on SIZEOF
   Reduce by   95 on UNOP
   Reduce by   95 on INCOP
   Reduce by   95 on LPAR
   Reduce by   95 on CLASS
   Reduce by   95 on NAME
   Reduce by   95 on ELSE

State 250:
 ( 96)K statement       -> CONTINUE SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   96 on STRING
   Reduce by   96 on ICON
   Reduce by   96 on FCON
   Reduce by   96 on TYPE
   Reduce by   96 on STRUCT
   Reduce by   96 on ENUM
   Reduce by   96 on RETURN
   Reduce by   96 on GOTO
   Reduce by   96 on IF
   Reduce by   96 on SWITCH
   Reduce by   96 on CASE
   Reduce by   96 on DEFAULT
   Reduce by   96 on BREAK
   Reduce by   96 on CONTINUE
   Reduce by   96 on WHILE
   Reduce by   96 on DO
   Reduce by   96 on FOR
   Reduce by   96 on TRYSTMT
   Reduce by   96 on THROW
   Reduce by   96 on LC
   Reduce by   96 on RC
   Reduce by   96 on SEMI
   Reduce by   96 on AND
   Reduce by   96 on MINUS
   Reduce by   96 on STAR
   Reduce by   96 on SIZEOF
   Reduce by   96 on UNOP
   Reduce by   96 on INCOP
   Reduce by   96 on LPAR
   Reduce by   96 on CLASS
   Reduce by   96 on NAME
   Reduce by   96 on ELSE

State 251:
 ( 98)K statement       -> CASE const_expr .COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   272 on COLON

State 252:
 ( 99)K statement       -> DEFAULT COLON .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   99 on STRING
   Reduce by   99 on ICON
   Reduce by   99 on FCON
   Reduce by   99 on TYPE
   Reduce by   99 on STRUCT
   Reduce by   99 on ENUM
   Reduce by   99 on RETURN
   Reduce by   99 on GOTO
   Reduce by   99 on IF
   Reduce by   99 on SWITCH
   Reduce by   99 on CASE
   Reduce by   99 on DEFAULT
   Reduce by   99 on BREAK
   Reduce by   99 on CONTINUE
   Reduce by   99 on WHILE
   Reduce by   99 on DO
   Reduce by   99 on FOR
   Reduce by   99 on TRYSTMT
   Reduce by   99 on THROW
   Reduce by   99 on LC
   Reduce by   99 on RC
   Reduce by   99 on SEMI
   Reduce by   99 on AND
   Reduce by   99 on MINUS
   Reduce by   99 on STAR
   Reduce by   99 on SIZEOF
   Reduce by   99 on UNOP
   Reduce by   99 on INCOP
   Reduce by   99 on LPAR
   Reduce by   99 on CLASS
   Reduce by   99 on NAME
   Reduce by   99 on ELSE

State 253:
 (159)K initializer     -> LC initializer_list RC .[RC SEMI COMMA]

   Reduce by  159 on RC
   Reduce by  159 on SEMI
   Reduce by  159 on COMMA

State 254:
 ( 40)K var_list        -> var_list COMMA param_declaration .[COMMA RPAR]

   Reduce by   40 on COMMA
   Reduce by   40 on RPAR

State 255:
 ( 50)K abs_decl        -> STAR abs_decl .[COMMA LB RPAR]
 ( 51)K abs_decl        -> abs_decl .LB RB[COMMA LB RPAR]
 ( 52)K abs_decl        -> abs_decl .LB const_expr RB[COMMA LB RPAR]

   Reduce by   50 on COMMA
   Shift to   112 on LB
   Reduce by   50 on RPAR

warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 50 (prec=13).
State 256:
 ( 49)K abs_decl        -> LPAR abs_decl .RPAR LPAR RPAR[COMMA LB RPAR]
 ( 51)K abs_decl        -> abs_decl .LB RB[LB RPAR]
 ( 52)K abs_decl        -> abs_decl .LB const_expr RB[LB RPAR]
 ( 53)K abs_decl        -> LPAR abs_decl .RPAR[COMMA LB RPAR]

   Shift to   112 on LB
   Shift to   279 on RPAR

State 257:
 ( 38)K name_list       -> name_list COMMA name .[COMMA RPAR]

   Reduce by   38 on COMMA
   Reduce by   38 on RPAR

State 258:
 (116)K unary           -> SIZEOF LPAR string_const RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  116 on RC
   Reduce by  116 on SEMI
   Reduce by  116 on COMMA
   Reduce by  116 on EQUAL
   Reduce by  116 on ASSIGNOP
   Reduce by  116 on QUEST
   Reduce by  116 on COLON
   Reduce by  116 on OROR
   Reduce by  116 on ANDAND
   Reduce by  116 on OR
   Reduce by  116 on XOR
   Reduce by  116 on AND
   Reduce by  116 on EQUOP
   Reduce by  116 on RELOP
   Reduce by  116 on SHIFTOP
   Reduce by  116 on PLUS
   Reduce by  116 on MINUS
   Reduce by  116 on STAR
   Reduce by  116 on DIVOP
   Reduce by  116 on INCOP
   Reduce by  116 on LB
   Reduce by  116 on RB
   Reduce by  116 on LPAR
   Reduce by  116 on RPAR
   Reduce by  116 on STRUCTOP

State 259:
 (117)K unary           -> SIZEOF LPAR expr RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  117 on RC
   Reduce by  117 on SEMI
   Reduce by  117 on COMMA
   Reduce by  117 on EQUAL
   Reduce by  117 on ASSIGNOP
   Reduce by  117 on QUEST
   Reduce by  117 on COLON
   Reduce by  117 on OROR
   Reduce by  117 on ANDAND
   Reduce by  117 on OR
   Reduce by  117 on XOR
   Reduce by  117 on AND
   Reduce by  117 on EQUOP
   Reduce by  117 on RELOP
   Reduce by  117 on SHIFTOP
   Reduce by  117 on PLUS
   Reduce by  117 on MINUS
   Reduce by  117 on STAR
   Reduce by  117 on DIVOP
   Reduce by  117 on INCOP
   Reduce by  117 on LB
   Reduce by  117 on RB
   Reduce by  117 on LPAR
   Reduce by  117 on RPAR
   Reduce by  117 on STRUCTOP

State 260:
 (118)K unary           -> SIZEOF LPAR abstract_decl RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  118 on RC
   Reduce by  118 on SEMI
   Reduce by  118 on COMMA
   Reduce by  118 on EQUAL
   Reduce by  118 on ASSIGNOP
   Reduce by  118 on QUEST
   Reduce by  118 on COLON
   Reduce by  118 on OROR
   Reduce by  118 on ANDAND
   Reduce by  118 on OR
   Reduce by  118 on XOR
   Reduce by  118 on AND
   Reduce by  118 on EQUOP
   Reduce by  118 on RELOP
   Reduce by  118 on SHIFTOP
   Reduce by  118 on PLUS
   Reduce by  118 on MINUS
   Reduce by  118 on STAR
   Reduce by  118 on DIVOP
   Reduce by  118 on INCOP
   Reduce by  118 on LB
   Reduce by  118 on RB
   Reduce by  118 on LPAR
   Reduce by  118 on RPAR
   Reduce by  118 on STRUCTOP

State 261:
 (126)K unary           -> unary LB expr RB .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  126 on RC
   Reduce by  126 on SEMI
   Reduce by  126 on COMMA
   Reduce by  126 on EQUAL
   Reduce by  126 on ASSIGNOP
   Reduce by  126 on QUEST
   Reduce by  126 on COLON
   Reduce by  126 on OROR
   Reduce by  126 on ANDAND
   Reduce by  126 on OR
   Reduce by  126 on XOR
   Reduce by  126 on AND
   Reduce by  126 on EQUOP
   Reduce by  126 on RELOP
   Reduce by  126 on SHIFTOP
   Reduce by  126 on PLUS
   Reduce by  126 on MINUS
   Reduce by  126 on STAR
   Reduce by  126 on DIVOP
   Reduce by  126 on INCOP
   Reduce by  126 on LB
   Reduce by  126 on RB
   Reduce by  126 on LPAR
   Reduce by  126 on RPAR
   Reduce by  126 on STRUCTOP

State 262:
 (128)K unary           -> unary LPAR args RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   Reduce by  128 on RC
   Reduce by  128 on SEMI
   Reduce by  128 on COMMA
   Reduce by  128 on EQUAL
   Reduce by  128 on ASSIGNOP
   Reduce by  128 on QUEST
   Reduce by  128 on COLON
   Reduce by  128 on OROR
   Reduce by  128 on ANDAND
   Reduce by  128 on OR
   Reduce by  128 on XOR
   Reduce by  128 on AND
   Reduce by  128 on EQUOP
   Reduce by  128 on RELOP
   Reduce by  128 on SHIFTOP
   Reduce by  128 on PLUS
   Reduce by  128 on MINUS
   Reduce by  128 on STAR
   Reduce by  128 on DIVOP
   Reduce by  128 on INCOP
   Reduce by  128 on LB
   Reduce by  128 on RB
   Reduce by  128 on LPAR
   Reduce by  128 on RPAR
   Reduce by  128 on STRUCTOP

State 263:
 ( 61)K def             -> specifiers decl_list SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]

   Reduce by   61 on STRING
   Reduce by   61 on ICON
   Reduce by   61 on FCON
   Reduce by   61 on TYPE
   Reduce by   61 on STRUCT
   Reduce by   61 on ENUM
   Reduce by   61 on RETURN
   Reduce by   61 on GOTO
   Reduce by   61 on IF
   Reduce by   61 on SWITCH
   Reduce by   61 on CASE
   Reduce by   61 on DEFAULT
   Reduce by   61 on BREAK
   Reduce by   61 on CONTINUE
   Reduce by   61 on WHILE
   Reduce by   61 on DO
   Reduce by   61 on FOR
   Reduce by   61 on TRYSTMT
   Reduce by   61 on THROW
   Reduce by   61 on LC
   Reduce by   61 on RC
   Reduce by   61 on SEMI
   Reduce by   61 on AND
   Reduce by   61 on MINUS
   Reduce by   61 on STAR
   Reduce by   61 on SIZEOF
   Reduce by   61 on UNOP
   Reduce by   61 on INCOP
   Reduce by   61 on LPAR
   Reduce by   61 on CLASS
   Reduce by   61 on NAME

State 264:
 ( 69)K decl            -> COLON const_expr .[SEMI COMMA]

   Reduce by   69 on SEMI
   Reduce by   69 on COMMA

State 265:
 ( 87)K statement       -> RETURN expr SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   87 on STRING
   Reduce by   87 on ICON
   Reduce by   87 on FCON
   Reduce by   87 on TYPE
   Reduce by   87 on STRUCT
   Reduce by   87 on ENUM
   Reduce by   87 on RETURN
   Reduce by   87 on GOTO
   Reduce by   87 on IF
   Reduce by   87 on SWITCH
   Reduce by   87 on CASE
   Reduce by   87 on DEFAULT
   Reduce by   87 on BREAK
   Reduce by   87 on CONTINUE
   Reduce by   87 on WHILE
   Reduce by   87 on DO
   Reduce by   87 on FOR
   Reduce by   87 on TRYSTMT
   Reduce by   87 on THROW
   Reduce by   87 on LC
   Reduce by   87 on RC
   Reduce by   87 on SEMI
   Reduce by   87 on AND
   Reduce by   87 on MINUS
   Reduce by   87 on STAR
   Reduce by   87 on SIZEOF
   Reduce by   87 on UNOP
   Reduce by   87 on INCOP
   Reduce by   87 on LPAR
   Reduce by   87 on CLASS
   Reduce by   87 on NAME
   Reduce by   87 on ELSE

State 266:
 ( 88)K statement       -> GOTO target SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   88 on STRING
   Reduce by   88 on ICON
   Reduce by   88 on FCON
   Reduce by   88 on TYPE
   Reduce by   88 on STRUCT
   Reduce by   88 on ENUM
   Reduce by   88 on RETURN
   Reduce by   88 on GOTO
   Reduce by   88 on IF
   Reduce by   88 on SWITCH
   Reduce by   88 on CASE
   Reduce by   88 on DEFAULT
   Reduce by   88 on BREAK
   Reduce by   88 on CONTINUE
   Reduce by   88 on WHILE
   Reduce by   88 on DO
   Reduce by   88 on FOR
   Reduce by   88 on TRYSTMT
   Reduce by   88 on THROW
   Reduce by   88 on LC
   Reduce by   88 on RC
   Reduce by   88 on SEMI
   Reduce by   88 on AND
   Reduce by   88 on MINUS
   Reduce by   88 on STAR
   Reduce by   88 on SIZEOF
   Reduce by   88 on UNOP
   Reduce by   88 on INCOP
   Reduce by   88 on LPAR
   Reduce by   88 on CLASS
   Reduce by   88 on NAME
   Reduce by   88 on ELSE

State 267:
 ( 89)K statement       -> target COLON statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   89 on STRING
   Reduce by   89 on ICON
   Reduce by   89 on FCON
   Reduce by   89 on TYPE
   Reduce by   89 on STRUCT
   Reduce by   89 on ENUM
   Reduce by   89 on RETURN
   Reduce by   89 on GOTO
   Reduce by   89 on IF
   Reduce by   89 on SWITCH
   Reduce by   89 on CASE
   Reduce by   89 on DEFAULT
   Reduce by   89 on BREAK
   Reduce by   89 on CONTINUE
   Reduce by   89 on WHILE
   Reduce by   89 on DO
   Reduce by   89 on FOR
   Reduce by   89 on TRYSTMT
   Reduce by   89 on THROW
   Reduce by   89 on LC
   Reduce by   89 on RC
   Reduce by   89 on SEMI
   Reduce by   89 on AND
   Reduce by   89 on MINUS
   Reduce by   89 on STAR
   Reduce by   89 on SIZEOF
   Reduce by   89 on UNOP
   Reduce by   89 on INCOP
   Reduce by   89 on LPAR
   Reduce by   89 on CLASS
   Reduce by   89 on NAME
   Reduce by   89 on ELSE

State 268:
 ( 90)K statement       -> IF LPAR test .RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)K statement       -> IF LPAR test .RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   118 on RPAR

State 269:
 ( 92)K statement       -> WHILE LPAR test .RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   119 on RPAR

State 270:
 ( 93)K statement       -> DO statement WHILE .LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   120 on LPAR

State 271:
 ( 94)K statement       -> FOR LPAR opt_expr .SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   121 on SEMI

State 272:
 ( 98)K statement       -> CASE const_expr COLON .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   98 on STRING
   Reduce by   98 on ICON
   Reduce by   98 on FCON
   Reduce by   98 on TYPE
   Reduce by   98 on STRUCT
   Reduce by   98 on ENUM
   Reduce by   98 on RETURN
   Reduce by   98 on GOTO
   Reduce by   98 on IF
   Reduce by   98 on SWITCH
   Reduce by   98 on CASE
   Reduce by   98 on DEFAULT
   Reduce by   98 on BREAK
   Reduce by   98 on CONTINUE
   Reduce by   98 on WHILE
   Reduce by   98 on DO
   Reduce by   98 on FOR
   Reduce by   98 on TRYSTMT
   Reduce by   98 on THROW
   Reduce by   98 on LC
   Reduce by   98 on RC
   Reduce by   98 on SEMI
   Reduce by   98 on AND
   Reduce by   98 on MINUS
   Reduce by   98 on STAR
   Reduce by   98 on SIZEOF
   Reduce by   98 on UNOP
   Reduce by   98 on INCOP
   Reduce by   98 on LPAR
   Reduce by   98 on CLASS
   Reduce by   98 on NAME
   Reduce by   98 on ELSE

State 273:
 (100)K statement       -> THROW expr SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by  100 on STRING
   Reduce by  100 on ICON
   Reduce by  100 on FCON
   Reduce by  100 on TYPE
   Reduce by  100 on STRUCT
   Reduce by  100 on ENUM
   Reduce by  100 on RETURN
   Reduce by  100 on GOTO
   Reduce by  100 on IF
   Reduce by  100 on SWITCH
   Reduce by  100 on CASE
   Reduce by  100 on DEFAULT
   Reduce by  100 on BREAK
   Reduce by  100 on CONTINUE
   Reduce by  100 on WHILE
   Reduce by  100 on DO
   Reduce by  100 on FOR
   Reduce by  100 on TRYSTMT
   Reduce by  100 on THROW
   Reduce by  100 on LC
   Reduce by  100 on RC
   Reduce by  100 on SEMI
   Reduce by  100 on AND
   Reduce by  100 on MINUS
   Reduce by  100 on STAR
   Reduce by  100 on SIZEOF
   Reduce by  100 on UNOP
   Reduce by  100 on INCOP
   Reduce by  100 on LPAR
   Reduce by  100 on CLASS
   Reduce by  100 on NAME
   Reduce by  100 on ELSE

State 274:
 (102)K handler_list    -> exception_handler .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by  102 on STRING
   Reduce by  102 on ICON
   Reduce by  102 on FCON
   Reduce by  102 on TYPE
   Reduce by  102 on STRUCT
   Reduce by  102 on ENUM
   Reduce by  102 on RETURN
   Reduce by  102 on GOTO
   Reduce by  102 on IF
   Reduce by  102 on SWITCH
   Reduce by  102 on CASE
   Reduce by  102 on DEFAULT
   Reduce by  102 on BREAK
   Reduce by  102 on CONTINUE
   Reduce by  102 on WHILE
   Reduce by  102 on DO
   Reduce by  102 on FOR
   Reduce by  102 on TRYSTMT
   Reduce by  102 on CATCH
   Reduce by  102 on THROW
   Reduce by  102 on LC
   Reduce by  102 on RC
   Reduce by  102 on SEMI
   Reduce by  102 on AND
   Reduce by  102 on MINUS
   Reduce by  102 on STAR
   Reduce by  102 on SIZEOF
   Reduce by  102 on UNOP
   Reduce by  102 on INCOP
   Reduce by  102 on LPAR
   Reduce by  102 on CLASS
   Reduce by  102 on NAME
   Reduce by  102 on ELSE

State 275:
 (104)K exception_handler -> CATCH .LPAR catch_type RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   122 on LPAR

State 276:
 (161)K initializer_list -> initializer_list COMMA initializer .[RC COMMA]

   Reduce by  161 on RC
   Reduce by  161 on COMMA

State 277:
 ( 51)K abs_decl        -> abs_decl LB RB .[COMMA LB RPAR]

   Reduce by   51 on COMMA
   Reduce by   51 on LB
   Reduce by   51 on RPAR

State 278:
 ( 52)K abs_decl        -> abs_decl LB const_expr .RB[COMMA LB RPAR]

   Shift to   285 on RB

State 279:
 ( 49)K abs_decl        -> LPAR abs_decl RPAR .LPAR RPAR[COMMA LB RPAR]
 ( 53)K abs_decl        -> LPAR abs_decl RPAR .[COMMA LB RPAR]

   Reduce by   53 on COMMA
   Reduce by   53 on LB
   Shift to   286 on LPAR
   Reduce by   53 on RPAR

State 280:
 (131)K args            -> non_comma_expr COMMA args .[RPAR]

   Reduce by  131 on RPAR

State 281:
 ( 64)K decl_list       -> decl_list COMMA decl .[SEMI COMMA]

   Reduce by   64 on SEMI
   Reduce by   64 on COMMA

State 282:
 ( 67)K decl            -> var_decl EQUAL initializer .[SEMI COMMA]

   Reduce by   67 on SEMI
   Reduce by   67 on COMMA

State 283:
 ( 68)K decl            -> var_decl COLON const_expr .[SEMI COMMA]

   Reduce by   68 on SEMI
   Reduce by   68 on COMMA

State 284:
 (103)K handler_list    -> handler_list exception_handler .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by  103 on STRING
   Reduce by  103 on ICON
   Reduce by  103 on FCON
   Reduce by  103 on TYPE
   Reduce by  103 on STRUCT
   Reduce by  103 on ENUM
   Reduce by  103 on RETURN
   Reduce by  103 on GOTO
   Reduce by  103 on IF
   Reduce by  103 on SWITCH
   Reduce by  103 on CASE
   Reduce by  103 on DEFAULT
   Reduce by  103 on BREAK
   Reduce by  103 on CONTINUE
   Reduce by  103 on WHILE
   Reduce by  103 on DO
   Reduce by  103 on FOR
   Reduce by  103 on TRYSTMT
   Reduce by  103 on CATCH
   Reduce by  103 on THROW
   Reduce by  103 on LC
   Reduce by  103 on RC
   Reduce by  103 on SEMI
   Reduce by  103 on AND
   Reduce by  103 on MINUS
   Reduce by  103 on STAR
   Reduce by  103 on SIZEOF
   Reduce by  103 on UNOP
   Reduce by  103 on INCOP
   Reduce by  103 on LPAR
   Reduce by  103 on CLASS
   Reduce by  103 on NAME
   Reduce by  103 on ELSE

State 285:
 ( 52)K abs_decl        -> abs_decl LB const_expr RB .[COMMA LB RPAR]

   Reduce by   52 on COMMA
   Reduce by   52 on LB
   Reduce by   52 on RPAR

State 286:
 ( 49)K abs_decl        -> LPAR abs_decl RPAR LPAR .RPAR[COMMA LB RPAR]

   Shift to   294 on RPAR

State 287:
 ( 90)K statement       -> IF LPAR test RPAR statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)K statement       -> IF LPAR test RPAR statement .ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   90 on STRING
   Reduce by   90 on ICON
   Reduce by   90 on FCON
   Reduce by   90 on TYPE
   Reduce by   90 on STRUCT
   Reduce by   90 on ENUM
   Reduce by   90 on RETURN
   Reduce by   90 on GOTO
   Reduce by   90 on IF
   Reduce by   90 on SWITCH
   Reduce by   90 on CASE
   Reduce by   90 on DEFAULT
   Reduce by   90 on BREAK
   Reduce by   90 on CONTINUE
   Reduce by   90 on WHILE
   Reduce by   90 on DO
   Reduce by   90 on FOR
   Reduce by   90 on TRYSTMT
   Reduce by   90 on THROW
   Reduce by   90 on LC
   Reduce by   90 on RC
   Reduce by   90 on SEMI
   Reduce by   90 on AND
   Reduce by   90 on MINUS
   Reduce by   90 on STAR
   Reduce by   90 on SIZEOF
   Reduce by   90 on UNOP
   Reduce by   90 on INCOP
   Reduce by   90 on LPAR
   Reduce by   90 on CLASS
   Reduce by   90 on NAME
   Shift to   124 on ELSE

warning --- Shift/reduce conflict on ELSE (prec=20, non assoc). Choose shift instead of reduce by prod 90 (prec=15).
State 288:
 ( 92)K statement       -> WHILE LPAR test RPAR statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   92 on STRING
   Reduce by   92 on ICON
   Reduce by   92 on FCON
   Reduce by   92 on TYPE
   Reduce by   92 on STRUCT
   Reduce by   92 on ENUM
   Reduce by   92 on RETURN
   Reduce by   92 on GOTO
   Reduce by   92 on IF
   Reduce by   92 on SWITCH
   Reduce by   92 on CASE
   Reduce by   92 on DEFAULT
   Reduce by   92 on BREAK
   Reduce by   92 on CONTINUE
   Reduce by   92 on WHILE
   Reduce by   92 on DO
   Reduce by   92 on FOR
   Reduce by   92 on TRYSTMT
   Reduce by   92 on THROW
   Reduce by   92 on LC
   Reduce by   92 on RC
   Reduce by   92 on SEMI
   Reduce by   92 on AND
   Reduce by   92 on MINUS
   Reduce by   92 on STAR
   Reduce by   92 on SIZEOF
   Reduce by   92 on UNOP
   Reduce by   92 on INCOP
   Reduce by   92 on LPAR
   Reduce by   92 on CLASS
   Reduce by   92 on NAME
   Reduce by   92 on ELSE

State 289:
 ( 93)K statement       -> DO statement WHILE LPAR test .RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   295 on RPAR

State 290:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI test .SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   125 on SEMI

State 291:
 ( 97)K statement       -> SWITCH LPAR expr RPAR compound_stmt .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   97 on STRING
   Reduce by   97 on ICON
   Reduce by   97 on FCON
   Reduce by   97 on TYPE
   Reduce by   97 on STRUCT
   Reduce by   97 on ENUM
   Reduce by   97 on RETURN
   Reduce by   97 on GOTO
   Reduce by   97 on IF
   Reduce by   97 on SWITCH
   Reduce by   97 on CASE
   Reduce by   97 on DEFAULT
   Reduce by   97 on BREAK
   Reduce by   97 on CONTINUE
   Reduce by   97 on WHILE
   Reduce by   97 on DO
   Reduce by   97 on FOR
   Reduce by   97 on TRYSTMT
   Reduce by   97 on THROW
   Reduce by   97 on LC
   Reduce by   97 on RC
   Reduce by   97 on SEMI
   Reduce by   97 on AND
   Reduce by   97 on MINUS
   Reduce by   97 on STAR
   Reduce by   97 on SIZEOF
   Reduce by   97 on UNOP
   Reduce by   97 on INCOP
   Reduce by   97 on LPAR
   Reduce by   97 on CLASS
   Reduce by   97 on NAME
   Reduce by   97 on ELSE

State 292:
 (104)K exception_handler -> CATCH LPAR catch_type .RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to    50 on RPAR

State 293:
 (105)K catch_type      -> ELLIPSIS .[RPAR]

   Reduce by  105 on RPAR

State 294:
 ( 49)K abs_decl        -> LPAR abs_decl RPAR LPAR RPAR .[COMMA LB RPAR]

   Reduce by   49 on COMMA
   Reduce by   49 on LB
   Reduce by   49 on RPAR

State 295:
 ( 93)K statement       -> DO statement WHILE LPAR test RPAR .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   297 on SEMI

State 296:
 ( 91)K statement       -> IF LPAR test RPAR statement ELSE statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   91 on STRING
   Reduce by   91 on ICON
   Reduce by   91 on FCON
   Reduce by   91 on TYPE
   Reduce by   91 on STRUCT
   Reduce by   91 on ENUM
   Reduce by   91 on RETURN
   Reduce by   91 on GOTO
   Reduce by   91 on IF
   Reduce by   91 on SWITCH
   Reduce by   91 on CASE
   Reduce by   91 on DEFAULT
   Reduce by   91 on BREAK
   Reduce by   91 on CONTINUE
   Reduce by   91 on WHILE
   Reduce by   91 on DO
   Reduce by   91 on FOR
   Reduce by   91 on TRYSTMT
   Reduce by   91 on THROW
   Reduce by   91 on LC
   Reduce by   91 on RC
   Reduce by   91 on SEMI
   Reduce by   91 on AND
   Reduce by   91 on MINUS
   Reduce by   91 on STAR
   Reduce by   91 on SIZEOF
   Reduce by   91 on UNOP
   Reduce by   91 on INCOP
   Reduce by   91 on LPAR
   Reduce by   91 on CLASS
   Reduce by   91 on NAME
   Reduce by   91 on ELSE

State 297:
 ( 93)K statement       -> DO statement WHILE LPAR test RPAR SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   93 on STRING
   Reduce by   93 on ICON
   Reduce by   93 on FCON
   Reduce by   93 on TYPE
   Reduce by   93 on STRUCT
   Reduce by   93 on ENUM
   Reduce by   93 on RETURN
   Reduce by   93 on GOTO
   Reduce by   93 on IF
   Reduce by   93 on SWITCH
   Reduce by   93 on CASE
   Reduce by   93 on DEFAULT
   Reduce by   93 on BREAK
   Reduce by   93 on CONTINUE
   Reduce by   93 on WHILE
   Reduce by   93 on DO
   Reduce by   93 on FOR
   Reduce by   93 on TRYSTMT
   Reduce by   93 on THROW
   Reduce by   93 on LC
   Reduce by   93 on RC
   Reduce by   93 on SEMI
   Reduce by   93 on AND
   Reduce by   93 on MINUS
   Reduce by   93 on STAR
   Reduce by   93 on SIZEOF
   Reduce by   93 on UNOP
   Reduce by   93 on INCOP
   Reduce by   93 on LPAR
   Reduce by   93 on CLASS
   Reduce by   93 on NAME
   Reduce by   93 on ELSE

State 298:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI test SEMI opt_expr .RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Shift to   128 on RPAR

State 299:
 (104)K exception_handler -> CATCH LPAR catch_type RPAR compound_stmt .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by  104 on STRING
   Reduce by  104 on ICON
   Reduce by  104 on FCON
   Reduce by  104 on TYPE
   Reduce by  104 on STRUCT
   Reduce by  104 on ENUM
   Reduce by  104 on RETURN
   Reduce by  104 on GOTO
   Reduce by  104 on IF
   Reduce by  104 on SWITCH
   Reduce by  104 on CASE
   Reduce by  104 on DEFAULT
   Reduce by  104 on BREAK
   Reduce by  104 on CONTINUE
   Reduce by  104 on WHILE
   Reduce by  104 on DO
   Reduce by  104 on FOR
   Reduce by  104 on TRYSTMT
   Reduce by  104 on CATCH
   Reduce by  104 on THROW
   Reduce by  104 on LC
   Reduce by  104 on RC
   Reduce by  104 on SEMI
   Reduce by  104 on AND
   Reduce by  104 on MINUS
   Reduce by  104 on STAR
   Reduce by  104 on SIZEOF
   Reduce by  104 on UNOP
   Reduce by  104 on INCOP
   Reduce by  104 on LPAR
   Reduce by  104 on CLASS
   Reduce by  104 on NAME
   Reduce by  104 on ELSE

State 300:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   Reduce by   94 on STRING
   Reduce by   94 on ICON
   Reduce by   94 on FCON
   Reduce by   94 on TYPE
   Reduce by   94 on STRUCT
   Reduce by   94 on ENUM
   Reduce by   94 on RETURN
   Reduce by   94 on GOTO
   Reduce by   94 on IF
   Reduce by   94 on SWITCH
   Reduce by   94 on CASE
   Reduce by   94 on DEFAULT
   Reduce by   94 on BREAK
   Reduce by   94 on CONTINUE
   Reduce by   94 on WHILE
   Reduce by   94 on DO
   Reduce by   94 on FOR
   Reduce by   94 on TRYSTMT
   Reduce by   94 on THROW
   Reduce by   94 on LC
   Reduce by   94 on RC
   Reduce by   94 on SEMI
   Reduce by   94 on AND
   Reduce by   94 on MINUS
   Reduce by   94 on STAR
   Reduce by   94 on SIZEOF
   Reduce by   94 on UNOP
   Reduce by   94 on INCOP
   Reduce by   94 on LPAR
   Reduce by   94 on CLASS
   Reduce by   94 on NAME
   Reduce by   94 on ELSE


  74	terminals
  52	nonterminals
 165	productions
 301	LALR(1) states
3332	items
5.952(x86)/6.040(x64) bytes	 required for parsertables

   0	shift/reduce  conflicts
   0	reduce/reduce conflicts
 163	warnings
