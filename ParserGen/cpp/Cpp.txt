State 0:
 (  0)K program         -> .ext_def_list[EOI]
 (  1)  ext_def_list    -> .[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  2)  ext_def_list    -> .ext_def_list ext_def[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   reduce by 1 on EOI
   reduce by 1 on TYPE
   reduce by 1 on STRUCT
   reduce by 1 on ENUM
   reduce by 1 on SEMI
   reduce by 1 on STAR
   reduce by 1 on LPAR
   reduce by 1 on TTYPE
   reduce by 1 on CLASS
   reduce by 1 on NAME
   goto 1 on ext_def_list

State 1:
 (  0)K program         -> ext_def_list .[EOI]
 (  2)K ext_def_list    -> ext_def_list .ext_def[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  3)  ext_def         -> .opt_specifiers ext_decl_list SEMI[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  4)  ext_def         -> .opt_specifiers SEMI[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  5)  ext_def         -> .opt_specifiers funct_decl compound_stmt[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  6)  opt_specifiers  -> .[SEMI STAR LPAR NAME]
 (  7)  opt_specifiers  -> .CLASS TTYPE[SEMI STAR LPAR NAME]
 (  8)  opt_specifiers  -> .TTYPE[SEMI STAR LPAR NAME]
 (  9)  opt_specifiers  -> .specifiers[SEMI STAR LPAR NAME]
 ( 10)  specifiers      -> .type_or_class[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 11)  specifiers      -> .specifiers type_or_class[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 12)  type_or_class   -> .type_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 13)  type_or_class   -> .CLASS[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 74)  enum            -> .ENUM[LC NAME]

   accept on EOI
   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   reduce by 6 on SEMI
   reduce by 6 on STAR
   reduce by 6 on LPAR
   shift to 5 on TTYPE
   shift to 4 on CLASS
   reduce by 6 on NAME
   goto 2 on ext_def
   goto 3 on opt_specifiers
   goto 6 on specifiers
   goto 7 on type_or_class
   goto 8 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 13 on enum

State 2:
 (  2)K ext_def_list    -> ext_def_list ext_def .[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   reduce by 2 on EOI
   reduce by 2 on TYPE
   reduce by 2 on STRUCT
   reduce by 2 on ENUM
   reduce by 2 on SEMI
   reduce by 2 on STAR
   reduce by 2 on LPAR
   reduce by 2 on TTYPE
   reduce by 2 on CLASS
   reduce by 2 on NAME

State 3:
 (  3)K ext_def         -> opt_specifiers .ext_decl_list SEMI[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  4)K ext_def         -> opt_specifiers .SEMI[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 (  5)K ext_def         -> opt_specifiers .funct_decl compound_stmt[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 ( 17)  ext_decl_list   -> .ext_decl[SEMI COMMA]
 ( 18)  ext_decl_list   -> .ext_decl_list COMMA ext_decl[SEMI COMMA]
 ( 19)  ext_decl        -> .var_decl[SEMI COMMA]
 ( 20)  ext_decl        -> .var_decl EQUAL initializer[SEMI COMMA]
 ( 21)  ext_decl        -> .funct_decl[SEMI COMMA]
 ( 22)  var_decl        -> .name[SEMI COMMA EQUAL LB LPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 25)  var_decl        -> .var_decl LB RB[SEMI COMMA EQUAL LB LPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[SEMI COMMA EQUAL LB LPAR]
 ( 27)  var_decl        -> .STAR var_decl[SEMI COMMA EQUAL LB LPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[LC SEMI COMMA LB LPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[LC SEMI COMMA LB LPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[LC SEMI COMMA LB LPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[LC SEMI COMMA LB LPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[LC SEMI COMMA LB LPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[LC SEMI COMMA LB LPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[LC SEMI COMMA LB LPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[LC SEMI COMMA LB LPAR]
 (164)  name            -> .NAME[SEMI COMMA EQUAL LB LPAR]

   shift to 16 on SEMI
   shift to 21 on STAR
   shift to 22 on LPAR
   shift to 23 on NAME
   goto 15 on ext_decl_list
   goto 17 on funct_decl
   goto 18 on ext_decl
   goto 19 on var_decl
   goto 20 on name

State 4:
 (  7)K opt_specifiers  -> CLASS .TTYPE[SEMI STAR LPAR NAME]
 ( 13)K type_or_class   -> CLASS .[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]

   reduce by 13 on TYPE
   reduce by 13 on STRUCT
   reduce by 13 on ENUM
   reduce by 13 on SEMI
   reduce by 13 on STAR
   reduce by 13 on LPAR
   shift to 24 on TTYPE
   reduce by 13 on CLASS
   reduce by 13 on NAME

State 5:
 (  8)K opt_specifiers  -> TTYPE .[SEMI STAR LPAR NAME]

   reduce by 8 on SEMI
   reduce by 8 on STAR
   reduce by 8 on LPAR
   reduce by 8 on NAME

State 6:
 (  9)K opt_specifiers  -> specifiers .[SEMI STAR LPAR NAME]
 ( 11)K specifiers      -> specifiers .type_or_class[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 12)  type_or_class   -> .type_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 13)  type_or_class   -> .CLASS[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM SEMI STAR LPAR CLASS NAME]
 ( 74)  enum            -> .ENUM[LC NAME]

   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   reduce by 9 on SEMI
   reduce by 9 on STAR
   reduce by 9 on LPAR
   shift to 26 on CLASS
   reduce by 9 on NAME
   goto 25 on type_or_class
   goto 8 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 13 on enum

State 7:
 ( 10)K specifiers      -> type_or_class .[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]

   reduce by 10 on TYPE
   reduce by 10 on STRUCT
   reduce by 10 on ENUM
   reduce by 10 on SEMI
   reduce by 10 on COLON
   reduce by 10 on STAR
   reduce by 10 on LPAR
   reduce by 10 on CLASS
   reduce by 10 on NAME

State 8:
 ( 12)K type_or_class   -> type_specifier .[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]

   reduce by 12 on TYPE
   reduce by 12 on STRUCT
   reduce by 12 on ENUM
   reduce by 12 on SEMI
   reduce by 12 on COLON
   reduce by 12 on STAR
   reduce by 12 on LPAR
   reduce by 12 on CLASS
   reduce by 12 on NAME

State 9:
 ( 14)K type_specifier  -> TYPE .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 14 on TYPE
   reduce by 14 on STRUCT
   reduce by 14 on ENUM
   reduce by 14 on SEMI
   reduce by 14 on COMMA
   reduce by 14 on COLON
   reduce by 14 on STAR
   reduce by 14 on LB
   reduce by 14 on LPAR
   reduce by 14 on RPAR
   reduce by 14 on CLASS
   reduce by 14 on NAME

State 10:
 ( 15)K type_specifier  -> enum_specifier .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 15 on TYPE
   reduce by 15 on STRUCT
   reduce by 15 on ENUM
   reduce by 15 on SEMI
   reduce by 15 on COMMA
   reduce by 15 on COLON
   reduce by 15 on STAR
   reduce by 15 on LB
   reduce by 15 on LPAR
   reduce by 15 on RPAR
   reduce by 15 on CLASS
   reduce by 15 on NAME

State 11:
 ( 16)K type_specifier  -> struct_specifier .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 16 on TYPE
   reduce by 16 on STRUCT
   reduce by 16 on ENUM
   reduce by 16 on SEMI
   reduce by 16 on COMMA
   reduce by 16 on COLON
   reduce by 16 on STAR
   reduce by 16 on LB
   reduce by 16 on LPAR
   reduce by 16 on RPAR
   reduce by 16 on CLASS
   reduce by 16 on NAME

State 12:
 ( 54)K struct_specifier -> STRUCT .opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 55)K struct_specifier -> STRUCT .tag[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 56)  opt_tag         -> .[LC]
 ( 57)  opt_tag         -> .tag[LC]
 ( 58)  tag             -> .NAME[TYPE STRUCT ENUM LC SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 56 on LC
   shift to 29 on NAME
   goto 27 on opt_tag
   goto 28 on tag

State 13:
 ( 70)K enum_specifier  -> enum .name opt_enum_list[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 71)K enum_specifier  -> enum .LC enumerator_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 (164)  name            -> .NAME[TYPE STRUCT ENUM LC SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   shift to 31 on LC
   shift to 23 on NAME
   goto 30 on name

State 14:
 ( 74)K enum            -> ENUM .[LC NAME]

   reduce by 74 on LC
   reduce by 74 on NAME

State 15:
 (  3)K ext_def         -> opt_specifiers ext_decl_list .SEMI[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 ( 18)K ext_decl_list   -> ext_decl_list .COMMA ext_decl[SEMI COMMA]

   shift to 32 on SEMI
   shift to 33 on COMMA

State 16:
 (  4)K ext_def         -> opt_specifiers SEMI .[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   reduce by 4 on EOI
   reduce by 4 on TYPE
   reduce by 4 on STRUCT
   reduce by 4 on ENUM
   reduce by 4 on SEMI
   reduce by 4 on STAR
   reduce by 4 on LPAR
   reduce by 4 on TTYPE
   reduce by 4 on CLASS
   reduce by 4 on NAME

State 17:
 (  5)K ext_def         -> opt_specifiers funct_decl .compound_stmt[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]
 ( 21)K ext_decl        -> funct_decl .[SEMI COMMA]
 ( 30)K funct_decl      -> funct_decl .LB RB[LC SEMI COMMA LB LPAR]
 ( 31)K funct_decl      -> funct_decl .LB const_expr RB[LC SEMI COMMA LB LPAR]
 ( 33)K funct_decl      -> funct_decl .LPAR RPAR[LC SEMI COMMA LB LPAR]
 ( 79)  compound_stmt   -> .LC stmt_list RC[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   shift to 37 on LC
   reduce by 21 on SEMI
   reduce by 21 on COMMA
   shift to 35 on LB
   shift to 36 on LPAR
   goto 34 on compound_stmt

State 18:
 ( 17)K ext_decl_list   -> ext_decl .[SEMI COMMA]

   reduce by 17 on SEMI
   reduce by 17 on COMMA

State 19:
 ( 19)K ext_decl        -> var_decl .[SEMI COMMA]
 ( 20)K ext_decl        -> var_decl .EQUAL initializer[SEMI COMMA]
 ( 23)K var_decl        -> var_decl .LPAR RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 25)K var_decl        -> var_decl .LB RB[SEMI COMMA EQUAL LB LPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[SEMI COMMA EQUAL LB LPAR]

   reduce by 19 on SEMI
   reduce by 19 on COMMA
   shift to 38 on EQUAL
   shift to 40 on LB
   shift to 39 on LPAR

State 20:
 ( 22)K var_decl        -> name .[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 34)K funct_decl      -> name .LPAR RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 35)K funct_decl      -> name .LPAR name_list RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 36)K funct_decl      -> name .LPAR var_list RPAR[LC SEMI COMMA LB LPAR RPAR]

   reduce by 22 on SEMI
   reduce by 22 on COMMA
   reduce by 22 on EQUAL
   reduce by 22 on COLON
   reduce by 22 on LB
   shift to 41 on LPAR
   reduce by 22 on RPAR

warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 22 (prec=1).
State 21:
 ( 27)K var_decl        -> STAR .var_decl[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 29)K funct_decl      -> STAR .funct_decl[LC SEMI COMMA LB LPAR RPAR]
 ( 22)  var_decl        -> .name[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[LC SEMI COMMA LB LPAR RPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[LC SEMI COMMA LB LPAR RPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[LC SEMI COMMA LB LPAR RPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[LC SEMI COMMA LB LPAR RPAR]
 (164)  name            -> .NAME[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   shift to 21 on STAR
   shift to 22 on LPAR
   shift to 23 on NAME
   goto 43 on funct_decl
   goto 42 on var_decl
   goto 20 on name

State 22:
 ( 28)K var_decl        -> LPAR .var_decl RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 32)K funct_decl      -> LPAR .funct_decl RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 22)  var_decl        -> .name[LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[LB LPAR RPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[LB LPAR RPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[LB LPAR RPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[LB LPAR RPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[LB LPAR RPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[LB LPAR RPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[LB LPAR RPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[LB LPAR RPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[LB LPAR RPAR]
 (164)  name            -> .NAME[LB LPAR RPAR]

   shift to 21 on STAR
   shift to 22 on LPAR
   shift to 23 on NAME
   goto 45 on funct_decl
   goto 44 on var_decl
   goto 20 on name

State 23:
 (164)K name            -> NAME .[TYPE STRUCT ENUM LC RC SEMI COMMA EQUAL COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 164 on TYPE
   reduce by 164 on STRUCT
   reduce by 164 on ENUM
   reduce by 164 on LC
   reduce by 164 on RC
   reduce by 164 on SEMI
   reduce by 164 on COMMA
   reduce by 164 on EQUAL
   reduce by 164 on COLON
   reduce by 164 on STAR
   reduce by 164 on LB
   reduce by 164 on LPAR
   reduce by 164 on RPAR
   reduce by 164 on CLASS
   reduce by 164 on NAME

State 24:
 (  7)K opt_specifiers  -> CLASS TTYPE .[SEMI STAR LPAR NAME]

   reduce by 7 on SEMI
   reduce by 7 on STAR
   reduce by 7 on LPAR
   reduce by 7 on NAME

State 25:
 ( 11)K specifiers      -> specifiers type_or_class .[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]

   reduce by 11 on TYPE
   reduce by 11 on STRUCT
   reduce by 11 on ENUM
   reduce by 11 on SEMI
   reduce by 11 on COLON
   reduce by 11 on STAR
   reduce by 11 on LPAR
   reduce by 11 on CLASS
   reduce by 11 on NAME

State 26:
 ( 13)K type_or_class   -> CLASS .[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]

   reduce by 13 on TYPE
   reduce by 13 on STRUCT
   reduce by 13 on ENUM
   reduce by 13 on SEMI
   reduce by 13 on COLON
   reduce by 13 on STAR
   reduce by 13 on LPAR
   reduce by 13 on CLASS
   reduce by 13 on NAME

State 27:
 ( 54)K struct_specifier -> STRUCT opt_tag .LC def_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   shift to 46 on LC

State 28:
 ( 55)K struct_specifier -> STRUCT tag .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 57)K opt_tag         -> tag .[LC]

   reduce by 55 on TYPE
   reduce by 55 on STRUCT
   reduce by 55 on ENUM
   reduce by 57 on LC
   reduce by 55 on SEMI
   reduce by 55 on COMMA
   reduce by 55 on COLON
   reduce by 55 on STAR
   reduce by 55 on LB
   reduce by 55 on LPAR
   reduce by 55 on RPAR
   reduce by 55 on CLASS
   reduce by 55 on NAME

State 29:
 ( 58)K tag             -> NAME .[TYPE STRUCT ENUM LC SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 58 on TYPE
   reduce by 58 on STRUCT
   reduce by 58 on ENUM
   reduce by 58 on LC
   reduce by 58 on SEMI
   reduce by 58 on COMMA
   reduce by 58 on COLON
   reduce by 58 on STAR
   reduce by 58 on LB
   reduce by 58 on LPAR
   reduce by 58 on RPAR
   reduce by 58 on CLASS
   reduce by 58 on NAME

State 30:
 ( 70)K enum_specifier  -> enum name .opt_enum_list[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 72)  opt_enum_list   -> .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 73)  opt_enum_list   -> .LC enumerator_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 72 on TYPE
   reduce by 72 on STRUCT
   reduce by 72 on ENUM
   shift to 48 on LC
   reduce by 72 on SEMI
   reduce by 72 on COMMA
   reduce by 72 on COLON
   reduce by 72 on STAR
   reduce by 72 on LB
   reduce by 72 on LPAR
   reduce by 72 on RPAR
   reduce by 72 on CLASS
   reduce by 72 on NAME
   goto 47 on opt_enum_list

State 31:
 ( 71)K enum_specifier  -> enum LC .enumerator_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 75)  enumerator_list -> .enumerator[RC COMMA]
 ( 76)  enumerator_list -> .enumerator_list COMMA enumerator[RC COMMA]
 ( 77)  enumerator      -> .name[RC COMMA]
 ( 78)  enumerator      -> .name EQUAL const_expr[RC COMMA]
 (164)  name            -> .NAME[RC COMMA EQUAL]

   shift to 23 on NAME
   goto 51 on name
   goto 49 on enumerator_list
   goto 50 on enumerator

State 32:
 (  3)K ext_def         -> opt_specifiers ext_decl_list SEMI .[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   reduce by 3 on EOI
   reduce by 3 on TYPE
   reduce by 3 on STRUCT
   reduce by 3 on ENUM
   reduce by 3 on SEMI
   reduce by 3 on STAR
   reduce by 3 on LPAR
   reduce by 3 on TTYPE
   reduce by 3 on CLASS
   reduce by 3 on NAME

State 33:
 ( 18)K ext_decl_list   -> ext_decl_list COMMA .ext_decl[SEMI COMMA]
 ( 19)  ext_decl        -> .var_decl[SEMI COMMA]
 ( 20)  ext_decl        -> .var_decl EQUAL initializer[SEMI COMMA]
 ( 21)  ext_decl        -> .funct_decl[SEMI COMMA]
 ( 22)  var_decl        -> .name[SEMI COMMA EQUAL LB LPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 25)  var_decl        -> .var_decl LB RB[SEMI COMMA EQUAL LB LPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[SEMI COMMA EQUAL LB LPAR]
 ( 27)  var_decl        -> .STAR var_decl[SEMI COMMA EQUAL LB LPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[SEMI COMMA EQUAL LB LPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[SEMI COMMA LB LPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[SEMI COMMA LB LPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[SEMI COMMA LB LPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[SEMI COMMA LB LPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[SEMI COMMA LB LPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[SEMI COMMA LB LPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[SEMI COMMA LB LPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[SEMI COMMA LB LPAR]
 (164)  name            -> .NAME[SEMI COMMA EQUAL LB LPAR]

   shift to 21 on STAR
   shift to 22 on LPAR
   shift to 23 on NAME
   goto 53 on funct_decl
   goto 52 on ext_decl
   goto 19 on var_decl
   goto 20 on name

State 34:
 (  5)K ext_def         -> opt_specifiers funct_decl compound_stmt .[EOI TYPE STRUCT ENUM SEMI STAR LPAR TTYPE CLASS NAME]

   reduce by 5 on EOI
   reduce by 5 on TYPE
   reduce by 5 on STRUCT
   reduce by 5 on ENUM
   reduce by 5 on SEMI
   reduce by 5 on STAR
   reduce by 5 on LPAR
   reduce by 5 on TTYPE
   reduce by 5 on CLASS
   reduce by 5 on NAME

State 35:
 ( 30)K funct_decl      -> funct_decl LB .RB[LC SEMI COMMA LB LPAR RPAR]
 ( 31)K funct_decl      -> funct_decl LB .const_expr RB[LC SEMI COMMA LB LPAR RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RB]
 (133)  expr            -> .non_comma_expr[COMMA RB]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RB]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (157)  const_expr      -> .expr[RB]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 54 on RB
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 55 on const_expr
   goto 68 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 36:
 ( 33)K funct_decl      -> funct_decl LPAR .RPAR[LC SEMI COMMA LB LPAR RPAR]

   shift to 76 on RPAR

State 37:
 ( 79)K compound_stmt   -> LC .stmt_list RC[EOI STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR TTYPE CLASS NAME ELSE]
 ( 80)  stmt_list       -> .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 81)  stmt_list       -> .stmt_list statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 82)  stmt_list       -> .stmt_list def[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]

   reduce by 80 on STRING
   reduce by 80 on ICON
   reduce by 80 on FCON
   reduce by 80 on TYPE
   reduce by 80 on STRUCT
   reduce by 80 on ENUM
   reduce by 80 on RETURN
   reduce by 80 on GOTO
   reduce by 80 on IF
   reduce by 80 on SWITCH
   reduce by 80 on CASE
   reduce by 80 on DEFAULT
   reduce by 80 on BREAK
   reduce by 80 on CONTINUE
   reduce by 80 on WHILE
   reduce by 80 on DO
   reduce by 80 on FOR
   reduce by 80 on TRYSTMT
   reduce by 80 on THROW
   reduce by 80 on LC
   reduce by 80 on RC
   reduce by 80 on SEMI
   reduce by 80 on AND
   reduce by 80 on MINUS
   reduce by 80 on STAR
   reduce by 80 on SIZEOF
   reduce by 80 on UNOP
   reduce by 80 on INCOP
   reduce by 80 on LPAR
   reduce by 80 on CLASS
   reduce by 80 on NAME
   goto 77 on stmt_list

State 38:
 ( 20)K ext_decl        -> var_decl EQUAL .initializer[SEMI COMMA]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (158)  initializer     -> .expr[SEMI COMMA]
 (159)  initializer     -> .LC initializer_list RC[SEMI COMMA]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 80 on LC
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 78 on initializer
   goto 79 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 39:
 ( 23)K var_decl        -> var_decl LPAR .RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 24)K var_decl        -> var_decl LPAR .var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 39)  var_list        -> .param_declaration[COMMA RPAR]
 ( 40)  var_list        -> .var_list COMMA param_declaration[COMMA RPAR]
 ( 41)  param_declaration -> .type var_decl[COMMA RPAR]
 ( 42)  param_declaration -> .abstract_decl[COMMA RPAR]
 ( 43)  param_declaration -> .ELLIPSIS[COMMA RPAR]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 46)  abstract_decl   -> .type abs_decl[COMMA RPAR]
 ( 47)  abstract_decl   -> .TTYPE abs_decl[COMMA RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]

   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 86 on ELLIPSIS
   shift to 81 on RPAR
   shift to 88 on TTYPE
   goto 87 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 82 on var_list
   goto 83 on param_declaration
   goto 84 on type
   goto 85 on abstract_decl
   goto 13 on enum

State 40:
 ( 25)K var_decl        -> var_decl LB .RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 26)K var_decl        -> var_decl LB .const_expr RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RB]
 (133)  expr            -> .non_comma_expr[COMMA RB]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RB]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (157)  const_expr      -> .expr[RB]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 89 on RB
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 90 on const_expr
   goto 68 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 41:
 ( 34)K funct_decl      -> name LPAR .RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 35)K funct_decl      -> name LPAR .name_list RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 36)K funct_decl      -> name LPAR .var_list RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 37)  name_list       -> .name[COMMA RPAR]
 ( 38)  name_list       -> .name_list COMMA name[COMMA RPAR]
 ( 39)  var_list        -> .param_declaration[COMMA RPAR]
 ( 40)  var_list        -> .var_list COMMA param_declaration[COMMA RPAR]
 ( 41)  param_declaration -> .type var_decl[COMMA RPAR]
 ( 42)  param_declaration -> .abstract_decl[COMMA RPAR]
 ( 43)  param_declaration -> .ELLIPSIS[COMMA RPAR]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 46)  abstract_decl   -> .type abs_decl[COMMA RPAR]
 ( 47)  abstract_decl   -> .TTYPE abs_decl[COMMA RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 (164)  name            -> .NAME[COMMA RPAR]

   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 86 on ELLIPSIS
   shift to 91 on RPAR
   shift to 88 on TTYPE
   shift to 23 on NAME
   goto 87 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 94 on name
   goto 93 on var_list
   goto 92 on name_list
   goto 83 on param_declaration
   goto 84 on type
   goto 85 on abstract_decl
   goto 13 on enum

State 42:
 ( 23)K var_decl        -> var_decl .LPAR RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 25)K var_decl        -> var_decl .LB RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 27)K var_decl        -> STAR var_decl .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   reduce by 27 on SEMI
   reduce by 27 on COMMA
   reduce by 27 on EQUAL
   reduce by 27 on COLON
   shift to 40 on LB
   shift to 39 on LPAR
   reduce by 27 on RPAR

warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 27 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 27 (prec=14).
State 43:
 ( 29)K funct_decl      -> STAR funct_decl .[LC SEMI COMMA LB LPAR RPAR]
 ( 30)K funct_decl      -> funct_decl .LB RB[LC SEMI COMMA LB LPAR RPAR]
 ( 31)K funct_decl      -> funct_decl .LB const_expr RB[LC SEMI COMMA LB LPAR RPAR]
 ( 33)K funct_decl      -> funct_decl .LPAR RPAR[LC SEMI COMMA LB LPAR RPAR]

   reduce by 29 on LC
   reduce by 29 on SEMI
   reduce by 29 on COMMA
   shift to 35 on LB
   shift to 36 on LPAR
   reduce by 29 on RPAR

warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 29 (prec=13).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 29 (prec=13).
State 44:
 ( 23)K var_decl        -> var_decl .LPAR RPAR[LB LPAR RPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)K var_decl        -> var_decl .LB RB[LB LPAR RPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[LB LPAR RPAR]
 ( 28)K var_decl        -> LPAR var_decl .RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   shift to 40 on LB
   shift to 39 on LPAR
   shift to 95 on RPAR

State 45:
 ( 30)K funct_decl      -> funct_decl .LB RB[LB LPAR RPAR]
 ( 31)K funct_decl      -> funct_decl .LB const_expr RB[LB LPAR RPAR]
 ( 32)K funct_decl      -> LPAR funct_decl .RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 33)K funct_decl      -> funct_decl .LPAR RPAR[LB LPAR RPAR]

   shift to 35 on LB
   shift to 36 on LPAR
   shift to 96 on RPAR

State 46:
 ( 54)K struct_specifier -> STRUCT opt_tag LC .def_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 59)  def_list        -> .[TYPE STRUCT ENUM RC CLASS]
 ( 60)  def_list        -> .def_list def[TYPE STRUCT ENUM RC CLASS]

   reduce by 59 on TYPE
   reduce by 59 on STRUCT
   reduce by 59 on ENUM
   reduce by 59 on RC
   reduce by 59 on CLASS
   goto 97 on def_list

State 47:
 ( 70)K enum_specifier  -> enum name opt_enum_list .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 70 on TYPE
   reduce by 70 on STRUCT
   reduce by 70 on ENUM
   reduce by 70 on SEMI
   reduce by 70 on COMMA
   reduce by 70 on COLON
   reduce by 70 on STAR
   reduce by 70 on LB
   reduce by 70 on LPAR
   reduce by 70 on RPAR
   reduce by 70 on CLASS
   reduce by 70 on NAME

State 48:
 ( 73)K opt_enum_list   -> LC .enumerator_list RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 75)  enumerator_list -> .enumerator[RC COMMA]
 ( 76)  enumerator_list -> .enumerator_list COMMA enumerator[RC COMMA]
 ( 77)  enumerator      -> .name[RC COMMA]
 ( 78)  enumerator      -> .name EQUAL const_expr[RC COMMA]
 (164)  name            -> .NAME[RC COMMA EQUAL]

   shift to 23 on NAME
   goto 51 on name
   goto 98 on enumerator_list
   goto 50 on enumerator

State 49:
 ( 71)K enum_specifier  -> enum LC enumerator_list .RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 76)K enumerator_list -> enumerator_list .COMMA enumerator[RC COMMA]

   shift to 99 on RC
   shift to 100 on COMMA

State 50:
 ( 75)K enumerator_list -> enumerator .[RC COMMA]

   reduce by 75 on RC
   reduce by 75 on COMMA

State 51:
 ( 77)K enumerator      -> name .[RC COMMA]
 ( 78)K enumerator      -> name .EQUAL const_expr[RC COMMA]

   reduce by 77 on RC
   reduce by 77 on COMMA
   shift to 101 on EQUAL

State 52:
 ( 18)K ext_decl_list   -> ext_decl_list COMMA ext_decl .[SEMI COMMA]

   reduce by 18 on SEMI
   reduce by 18 on COMMA

State 53:
 ( 21)K ext_decl        -> funct_decl .[SEMI COMMA]
 ( 30)K funct_decl      -> funct_decl .LB RB[SEMI COMMA LB LPAR]
 ( 31)K funct_decl      -> funct_decl .LB const_expr RB[SEMI COMMA LB LPAR]
 ( 33)K funct_decl      -> funct_decl .LPAR RPAR[SEMI COMMA LB LPAR]

   reduce by 21 on SEMI
   reduce by 21 on COMMA
   shift to 35 on LB
   shift to 36 on LPAR

State 54:
 ( 30)K funct_decl      -> funct_decl LB RB .[LC SEMI COMMA LB LPAR RPAR]

   reduce by 30 on LC
   reduce by 30 on SEMI
   reduce by 30 on COMMA
   reduce by 30 on LB
   reduce by 30 on LPAR
   reduce by 30 on RPAR

State 55:
 ( 31)K funct_decl      -> funct_decl LB const_expr .RB[LC SEMI COMMA LB LPAR RPAR]

   shift to 102 on RB

State 56:
 (111)K unary           -> LPAR .expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)K unary           -> LPAR .abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 46)  abstract_decl   -> .type abs_decl[RPAR]
 ( 47)  abstract_decl   -> .TTYPE abs_decl[RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 74)  enum            -> .ENUM[LC NAME]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 88 on TTYPE
   shift to 59 on NAME
   goto 87 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 105 on type
   goto 104 on abstract_decl
   goto 13 on enum
   goto 103 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 57:
 (112)K unary           -> FCON .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 112 on RC
   reduce by 112 on SEMI
   reduce by 112 on COMMA
   reduce by 112 on EQUAL
   reduce by 112 on ASSIGNOP
   reduce by 112 on QUEST
   reduce by 112 on COLON
   reduce by 112 on OROR
   reduce by 112 on ANDAND
   reduce by 112 on OR
   reduce by 112 on XOR
   reduce by 112 on AND
   reduce by 112 on EQUOP
   reduce by 112 on RELOP
   reduce by 112 on SHIFTOP
   reduce by 112 on PLUS
   reduce by 112 on MINUS
   reduce by 112 on STAR
   reduce by 112 on DIVOP
   reduce by 112 on INCOP
   reduce by 112 on LB
   reduce by 112 on RB
   reduce by 112 on LPAR
   reduce by 112 on RPAR
   reduce by 112 on STRUCTOP

State 58:
 (113)K unary           -> ICON .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 113 on RC
   reduce by 113 on SEMI
   reduce by 113 on COMMA
   reduce by 113 on EQUAL
   reduce by 113 on ASSIGNOP
   reduce by 113 on QUEST
   reduce by 113 on COLON
   reduce by 113 on OROR
   reduce by 113 on ANDAND
   reduce by 113 on OR
   reduce by 113 on XOR
   reduce by 113 on AND
   reduce by 113 on EQUOP
   reduce by 113 on RELOP
   reduce by 113 on SHIFTOP
   reduce by 113 on PLUS
   reduce by 113 on MINUS
   reduce by 113 on STAR
   reduce by 113 on DIVOP
   reduce by 113 on INCOP
   reduce by 113 on LB
   reduce by 113 on RB
   reduce by 113 on LPAR
   reduce by 113 on RPAR
   reduce by 113 on STRUCTOP

State 59:
 (114)K unary           -> NAME .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 114 on RC
   reduce by 114 on SEMI
   reduce by 114 on COMMA
   reduce by 114 on EQUAL
   reduce by 114 on ASSIGNOP
   reduce by 114 on QUEST
   reduce by 114 on COLON
   reduce by 114 on OROR
   reduce by 114 on ANDAND
   reduce by 114 on OR
   reduce by 114 on XOR
   reduce by 114 on AND
   reduce by 114 on EQUOP
   reduce by 114 on RELOP
   reduce by 114 on SHIFTOP
   reduce by 114 on PLUS
   reduce by 114 on MINUS
   reduce by 114 on STAR
   reduce by 114 on DIVOP
   reduce by 114 on INCOP
   reduce by 114 on LB
   reduce by 114 on RB
   reduce by 114 on LPAR
   reduce by 114 on RPAR
   reduce by 114 on STRUCTOP

State 60:
 (115)K unary           -> string_const .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)K string_const    -> string_const .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 106 on STRING
   reduce by 115 on RC
   reduce by 115 on SEMI
   reduce by 115 on COMMA
   reduce by 115 on EQUAL
   reduce by 115 on ASSIGNOP
   reduce by 115 on QUEST
   reduce by 115 on COLON
   reduce by 115 on OROR
   reduce by 115 on ANDAND
   reduce by 115 on OR
   reduce by 115 on XOR
   reduce by 115 on AND
   reduce by 115 on EQUOP
   reduce by 115 on RELOP
   reduce by 115 on SHIFTOP
   reduce by 115 on PLUS
   reduce by 115 on MINUS
   reduce by 115 on STAR
   reduce by 115 on DIVOP
   reduce by 115 on INCOP
   reduce by 115 on LB
   reduce by 115 on RB
   reduce by 115 on LPAR
   reduce by 115 on RPAR
   reduce by 115 on STRUCTOP

State 61:
 (116)K unary           -> SIZEOF .LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)K unary           -> SIZEOF .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)K unary           -> SIZEOF .LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 107 on LPAR

State 62:
 (120)K unary           -> MINUS .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 108 on unary
   goto 60 on string_const

State 63:
 (121)K unary           -> UNOP .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 109 on unary
   goto 60 on string_const

State 64:
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (154)K binary          -> unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 154 on RC
   reduce by 154 on SEMI
   reduce by 154 on COMMA
   reduce by 154 on EQUAL
   reduce by 154 on ASSIGNOP
   reduce by 154 on QUEST
   reduce by 154 on COLON
   reduce by 154 on OROR
   reduce by 154 on ANDAND
   reduce by 154 on OR
   reduce by 154 on XOR
   reduce by 154 on AND
   reduce by 154 on EQUOP
   reduce by 154 on RELOP
   reduce by 154 on SHIFTOP
   reduce by 154 on PLUS
   reduce by 154 on MINUS
   reduce by 154 on STAR
   reduce by 154 on DIVOP
   shift to 110 on INCOP
   shift to 111 on LB
   reduce by 154 on RB
   shift to 113 on LPAR
   reduce by 154 on RPAR
   shift to 112 on STRUCTOP

State 65:
 (123)K unary           -> INCOP .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 114 on unary
   goto 60 on string_const

State 66:
 (124)K unary           -> AND .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 115 on unary
   goto 60 on string_const

State 67:
 (125)K unary           -> STAR .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 116 on unary
   goto 60 on string_const

State 68:
 (132)K expr            -> expr .COMMA non_comma_expr[RC SEMI COMMA COLON RB]
 (157)K const_expr      -> expr .[RC SEMI COMMA COLON RB]

   reduce by 157 on RC
   reduce by 157 on SEMI
   reduce by 157 on COMMA
   reduce by 157 on COLON
   reduce by 157 on RB

warning --- Shift/reduce conflict on COMMA (prec=1, left assoc). Choose reduce by prod 157 (prec=1).
State 69:
 (133)K expr            -> non_comma_expr .[RC SEMI COMMA COLON RB RPAR]
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   reduce by 133 on RC
   reduce by 133 on SEMI
   reduce by 133 on COMMA
   shift to 120 on EQUAL
   shift to 119 on ASSIGNOP
   shift to 118 on QUEST
   reduce by 133 on COLON
   reduce by 133 on RB
   reduce by 133 on RPAR

State 70:
 (137)K non_comma_expr  -> or_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   reduce by 137 on RC
   reduce by 137 on SEMI
   reduce by 137 on COMMA
   reduce by 137 on EQUAL
   reduce by 137 on ASSIGNOP
   reduce by 137 on QUEST
   reduce by 137 on COLON
   reduce by 137 on RB
   reduce by 137 on RPAR

State 71:
 (138)K or_expr         -> or_list .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (139)K or_list         -> or_list .OROR and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]

   reduce by 138 on RC
   reduce by 138 on SEMI
   reduce by 138 on COMMA
   reduce by 138 on EQUAL
   reduce by 138 on ASSIGNOP
   reduce by 138 on QUEST
   reduce by 138 on COLON
   shift to 121 on OROR
   reduce by 138 on RB
   reduce by 138 on RPAR

State 72:
 (140)K or_list         -> and_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]

   reduce by 140 on RC
   reduce by 140 on SEMI
   reduce by 140 on COMMA
   reduce by 140 on EQUAL
   reduce by 140 on ASSIGNOP
   reduce by 140 on QUEST
   reduce by 140 on COLON
   reduce by 140 on OROR
   reduce by 140 on RB
   reduce by 140 on RPAR

State 73:
 (141)K and_expr        -> and_list .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)K and_list        -> and_list .ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]

   reduce by 141 on RC
   reduce by 141 on SEMI
   reduce by 141 on COMMA
   reduce by 141 on EQUAL
   reduce by 141 on ASSIGNOP
   reduce by 141 on QUEST
   reduce by 141 on COLON
   reduce by 141 on OROR
   shift to 122 on ANDAND
   reduce by 141 on RB
   reduce by 141 on RPAR

State 74:
 (143)K and_list        -> binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 143 on RC
   reduce by 143 on SEMI
   reduce by 143 on COMMA
   reduce by 143 on EQUAL
   reduce by 143 on ASSIGNOP
   reduce by 143 on QUEST
   reduce by 143 on COLON
   reduce by 143 on OROR
   reduce by 143 on ANDAND
   shift to 130 on OR
   shift to 129 on XOR
   shift to 128 on AND
   shift to 124 on EQUOP
   shift to 123 on RELOP
   shift to 127 on SHIFTOP
   shift to 131 on PLUS
   shift to 132 on MINUS
   shift to 125 on STAR
   shift to 126 on DIVOP
   reduce by 143 on RB
   reduce by 143 on RPAR

State 75:
 (162)K string_const    -> STRING .[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 162 on STRING
   reduce by 162 on RC
   reduce by 162 on SEMI
   reduce by 162 on COMMA
   reduce by 162 on EQUAL
   reduce by 162 on ASSIGNOP
   reduce by 162 on QUEST
   reduce by 162 on COLON
   reduce by 162 on OROR
   reduce by 162 on ANDAND
   reduce by 162 on OR
   reduce by 162 on XOR
   reduce by 162 on AND
   reduce by 162 on EQUOP
   reduce by 162 on RELOP
   reduce by 162 on SHIFTOP
   reduce by 162 on PLUS
   reduce by 162 on MINUS
   reduce by 162 on STAR
   reduce by 162 on DIVOP
   reduce by 162 on INCOP
   reduce by 162 on LB
   reduce by 162 on RB
   reduce by 162 on LPAR
   reduce by 162 on RPAR
   reduce by 162 on STRUCTOP

State 76:
 ( 33)K funct_decl      -> funct_decl LPAR RPAR .[LC SEMI COMMA LB LPAR RPAR]

   reduce by 33 on LC
   reduce by 33 on SEMI
   reduce by 33 on COMMA
   reduce by 33 on LB
   reduce by 33 on LPAR
   reduce by 33 on RPAR

State 77:
 ( 79)K compound_stmt   -> LC stmt_list .RC[EOI STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR TTYPE CLASS NAME ELSE]
 ( 81)K stmt_list       -> stmt_list .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 82)K stmt_list       -> stmt_list .def[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 10)  specifiers      -> .type_or_class[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 11)  specifiers      -> .specifiers type_or_class[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 12)  type_or_class   -> .type_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 13)  type_or_class   -> .CLASS[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 61)  def             -> .specifiers decl_list SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 62)  def             -> .specifiers SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 140 on RETURN
   shift to 141 on GOTO
   shift to 143 on IF
   shift to 149 on SWITCH
   shift to 150 on CASE
   shift to 151 on DEFAULT
   shift to 147 on BREAK
   shift to 148 on CONTINUE
   shift to 144 on WHILE
   shift to 145 on DO
   shift to 146 on FOR
   shift to 153 on TRYSTMT
   shift to 152 on THROW
   shift to 37 on LC
   shift to 133 on RC
   shift to 137 on SEMI
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 26 on CLASS
   shift to 154 on NAME
   goto 138 on compound_stmt
   goto 136 on specifiers
   goto 7 on type_or_class
   goto 8 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 135 on def
   goto 13 on enum
   goto 134 on statement
   goto 139 on expr
   goto 142 on target
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 78:
 ( 20)K ext_decl        -> var_decl EQUAL initializer .[SEMI COMMA]

   reduce by 20 on SEMI
   reduce by 20 on COMMA

State 79:
 (132)K expr            -> expr .COMMA non_comma_expr[RC SEMI COMMA]
 (158)K initializer     -> expr .[RC SEMI COMMA]

   reduce by 158 on RC
   reduce by 158 on SEMI
   reduce by 158 on COMMA

warning --- Shift/reduce conflict on COMMA (prec=1, left assoc). Choose reduce by prod 158 (prec=1).
State 80:
 (159)K initializer     -> LC .initializer_list RC[RC SEMI COMMA]
 (111)  unary           -> .LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[RC COMMA]
 (133)  expr            -> .non_comma_expr[RC COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[RC COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (158)  initializer     -> .expr[RC COMMA]
 (159)  initializer     -> .LC initializer_list RC[RC COMMA]
 (160)  initializer_list -> .initializer[RC COMMA]
 (161)  initializer_list -> .initializer_list COMMA initializer[RC COMMA]
 (162)  string_const    -> .STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 80 on LC
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 156 on initializer
   goto 79 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary
   goto 155 on initializer_list

State 81:
 ( 23)K var_decl        -> var_decl LPAR RPAR .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   reduce by 23 on SEMI
   reduce by 23 on COMMA
   reduce by 23 on EQUAL
   reduce by 23 on COLON
   reduce by 23 on LB
   reduce by 23 on LPAR
   reduce by 23 on RPAR

State 82:
 ( 24)K var_decl        -> var_decl LPAR var_list .RPAR[SEMI COMMA EQUAL COLON LB LPAR RPAR]
 ( 40)K var_list        -> var_list .COMMA param_declaration[COMMA RPAR]

   shift to 158 on COMMA
   shift to 157 on RPAR

State 83:
 ( 39)K var_list        -> param_declaration .[COMMA RPAR]

   reduce by 39 on COMMA
   reduce by 39 on RPAR

State 84:
 ( 41)K param_declaration -> type .var_decl[COMMA RPAR]
 ( 45)K type            -> type .type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 46)K abstract_decl   -> type .abs_decl[COMMA RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 22)  var_decl        -> .name[COMMA LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[COMMA LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[COMMA LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[COMMA LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[COMMA LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[COMMA LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[COMMA LB LPAR RPAR]
 ( 48)  abs_decl        -> .[COMMA LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[COMMA LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[COMMA LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[COMMA LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[COMMA LB RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 (164)  name            -> .NAME[COMMA LB LPAR RPAR]

   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   reduce by 48 on COMMA
   shift to 163 on STAR
   reduce by 48 on LB
   shift to 164 on LPAR
   reduce by 48 on RPAR
   shift to 23 on NAME
   goto 160 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 159 on var_decl
   goto 162 on name
   goto 161 on abs_decl
   goto 13 on enum

State 85:
 ( 42)K param_declaration -> abstract_decl .[COMMA RPAR]

   reduce by 42 on COMMA
   reduce by 42 on RPAR

State 86:
 ( 43)K param_declaration -> ELLIPSIS .[COMMA RPAR]

   reduce by 43 on COMMA
   reduce by 43 on RPAR

State 87:
 ( 44)K type            -> type_specifier .[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]

   reduce by 44 on TYPE
   reduce by 44 on STRUCT
   reduce by 44 on ENUM
   reduce by 44 on COMMA
   reduce by 44 on STAR
   reduce by 44 on LB
   reduce by 44 on LPAR
   reduce by 44 on RPAR
   reduce by 44 on NAME

State 88:
 ( 47)K abstract_decl   -> TTYPE .abs_decl[COMMA RPAR]
 ( 48)  abs_decl        -> .[COMMA LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[COMMA LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[COMMA LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[COMMA LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[COMMA LB RPAR]

   reduce by 48 on COMMA
   shift to 167 on STAR
   reduce by 48 on LB
   shift to 166 on LPAR
   reduce by 48 on RPAR
   goto 165 on abs_decl

State 89:
 ( 25)K var_decl        -> var_decl LB RB .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   reduce by 25 on SEMI
   reduce by 25 on COMMA
   reduce by 25 on EQUAL
   reduce by 25 on COLON
   reduce by 25 on LB
   reduce by 25 on LPAR
   reduce by 25 on RPAR

State 90:
 ( 26)K var_decl        -> var_decl LB const_expr .RB[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   shift to 168 on RB

State 91:
 ( 34)K funct_decl      -> name LPAR RPAR .[LC SEMI COMMA LB LPAR RPAR]

   reduce by 34 on LC
   reduce by 34 on SEMI
   reduce by 34 on COMMA
   reduce by 34 on LB
   reduce by 34 on LPAR
   reduce by 34 on RPAR

State 92:
 ( 35)K funct_decl      -> name LPAR name_list .RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 38)K name_list       -> name_list .COMMA name[COMMA RPAR]

   shift to 170 on COMMA
   shift to 169 on RPAR

State 93:
 ( 36)K funct_decl      -> name LPAR var_list .RPAR[LC SEMI COMMA LB LPAR RPAR]
 ( 40)K var_list        -> var_list .COMMA param_declaration[COMMA RPAR]

   shift to 158 on COMMA
   shift to 171 on RPAR

State 94:
 ( 37)K name_list       -> name .[COMMA RPAR]

   reduce by 37 on COMMA
   reduce by 37 on RPAR

State 95:
 ( 28)K var_decl        -> LPAR var_decl RPAR .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   reduce by 28 on SEMI
   reduce by 28 on COMMA
   reduce by 28 on EQUAL
   reduce by 28 on COLON
   reduce by 28 on LB
   reduce by 28 on LPAR
   reduce by 28 on RPAR

State 96:
 ( 32)K funct_decl      -> LPAR funct_decl RPAR .[LC SEMI COMMA LB LPAR RPAR]

   reduce by 32 on LC
   reduce by 32 on SEMI
   reduce by 32 on COMMA
   reduce by 32 on LB
   reduce by 32 on LPAR
   reduce by 32 on RPAR

State 97:
 ( 54)K struct_specifier -> STRUCT opt_tag LC def_list .RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 60)K def_list        -> def_list .def[TYPE STRUCT ENUM RC CLASS]
 ( 10)  specifiers      -> .type_or_class[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 11)  specifiers      -> .specifiers type_or_class[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 12)  type_or_class   -> .type_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 13)  type_or_class   -> .CLASS[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 61)  def             -> .specifiers decl_list SEMI[TYPE STRUCT ENUM RC CLASS]
 ( 62)  def             -> .specifiers SEMI[TYPE STRUCT ENUM RC CLASS]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 74)  enum            -> .ENUM[LC NAME]

   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 172 on RC
   shift to 26 on CLASS
   goto 136 on specifiers
   goto 7 on type_or_class
   goto 8 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 173 on def
   goto 13 on enum

State 98:
 ( 73)K opt_enum_list   -> LC enumerator_list .RC[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]
 ( 76)K enumerator_list -> enumerator_list .COMMA enumerator[RC COMMA]

   shift to 174 on RC
   shift to 100 on COMMA

State 99:
 ( 71)K enum_specifier  -> enum LC enumerator_list RC .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 71 on TYPE
   reduce by 71 on STRUCT
   reduce by 71 on ENUM
   reduce by 71 on SEMI
   reduce by 71 on COMMA
   reduce by 71 on COLON
   reduce by 71 on STAR
   reduce by 71 on LB
   reduce by 71 on LPAR
   reduce by 71 on RPAR
   reduce by 71 on CLASS
   reduce by 71 on NAME

State 100:
 ( 76)K enumerator_list -> enumerator_list COMMA .enumerator[RC COMMA]
 ( 77)  enumerator      -> .name[RC COMMA]
 ( 78)  enumerator      -> .name EQUAL const_expr[RC COMMA]
 (164)  name            -> .NAME[RC COMMA EQUAL]

   shift to 23 on NAME
   goto 51 on name
   goto 175 on enumerator

State 101:
 ( 78)K enumerator      -> name EQUAL .const_expr[RC COMMA]
 (111)  unary           -> .LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[RC COMMA]
 (133)  expr            -> .non_comma_expr[RC COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[RC COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (157)  const_expr      -> .expr[RC COMMA]
 (162)  string_const    -> .STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 176 on const_expr
   goto 68 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 102:
 ( 31)K funct_decl      -> funct_decl LB const_expr RB .[LC SEMI COMMA LB LPAR RPAR]

   reduce by 31 on LC
   reduce by 31 on SEMI
   reduce by 31 on COMMA
   reduce by 31 on LB
   reduce by 31 on LPAR
   reduce by 31 on RPAR

State 103:
 (111)K unary           -> LPAR expr .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (132)K expr            -> expr .COMMA non_comma_expr[COMMA RPAR]

   shift to 117 on COMMA
   shift to 177 on RPAR

State 104:
 (119)K unary           -> LPAR abstract_decl .RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 178 on RPAR

State 105:
 ( 45)K type            -> type .type_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 46)K abstract_decl   -> type .abs_decl[RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 48)  abs_decl        -> .[LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[LB RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 74)  enum            -> .ENUM[LC NAME]

   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 167 on STAR
   reduce by 48 on LB
   shift to 166 on LPAR
   reduce by 48 on RPAR
   goto 160 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 161 on abs_decl
   goto 13 on enum

State 106:
 (163)K string_const    -> string_const STRING .[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 163 on STRING
   reduce by 163 on RC
   reduce by 163 on SEMI
   reduce by 163 on COMMA
   reduce by 163 on EQUAL
   reduce by 163 on ASSIGNOP
   reduce by 163 on QUEST
   reduce by 163 on COLON
   reduce by 163 on OROR
   reduce by 163 on ANDAND
   reduce by 163 on OR
   reduce by 163 on XOR
   reduce by 163 on AND
   reduce by 163 on EQUOP
   reduce by 163 on RELOP
   reduce by 163 on SHIFTOP
   reduce by 163 on PLUS
   reduce by 163 on MINUS
   reduce by 163 on STAR
   reduce by 163 on DIVOP
   reduce by 163 on INCOP
   reduce by 163 on LB
   reduce by 163 on RB
   reduce by 163 on LPAR
   reduce by 163 on RPAR
   reduce by 163 on STRUCTOP

State 107:
 (116)K unary           -> SIZEOF LPAR .string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)K unary           -> SIZEOF LPAR .expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)K unary           -> SIZEOF LPAR .abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 46)  abstract_decl   -> .type abs_decl[RPAR]
 ( 47)  abstract_decl   -> .TTYPE abs_decl[RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM STAR LB LPAR RPAR]
 ( 74)  enum            -> .ENUM[LC NAME]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 88 on TTYPE
   shift to 59 on NAME
   goto 87 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 105 on type
   goto 181 on abstract_decl
   goto 13 on enum
   goto 180 on expr
   goto 64 on unary
   goto 179 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 108:
 (120)K unary           -> MINUS unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 120 on RC
   reduce by 120 on SEMI
   reduce by 120 on COMMA
   reduce by 120 on EQUAL
   reduce by 120 on ASSIGNOP
   reduce by 120 on QUEST
   reduce by 120 on COLON
   reduce by 120 on OROR
   reduce by 120 on ANDAND
   reduce by 120 on OR
   reduce by 120 on XOR
   reduce by 120 on AND
   reduce by 120 on EQUOP
   reduce by 120 on RELOP
   reduce by 120 on SHIFTOP
   reduce by 120 on PLUS
   reduce by 120 on MINUS
   reduce by 120 on STAR
   reduce by 120 on DIVOP
   shift to 110 on INCOP
   shift to 111 on LB
   reduce by 120 on RB
   shift to 113 on LPAR
   reduce by 120 on RPAR
   shift to 112 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 120 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 120 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 120 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 120 (prec=14).
State 109:
 (121)K unary           -> UNOP unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 121 on RC
   reduce by 121 on SEMI
   reduce by 121 on COMMA
   reduce by 121 on EQUAL
   reduce by 121 on ASSIGNOP
   reduce by 121 on QUEST
   reduce by 121 on COLON
   reduce by 121 on OROR
   reduce by 121 on ANDAND
   reduce by 121 on OR
   reduce by 121 on XOR
   reduce by 121 on AND
   reduce by 121 on EQUOP
   reduce by 121 on RELOP
   reduce by 121 on SHIFTOP
   reduce by 121 on PLUS
   reduce by 121 on MINUS
   reduce by 121 on STAR
   reduce by 121 on DIVOP
   shift to 110 on INCOP
   shift to 111 on LB
   reduce by 121 on RB
   shift to 113 on LPAR
   reduce by 121 on RPAR
   shift to 112 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 121 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 121 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 121 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 121 (prec=14).
State 110:
 (122)K unary           -> unary INCOP .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 122 on RC
   reduce by 122 on SEMI
   reduce by 122 on COMMA
   reduce by 122 on EQUAL
   reduce by 122 on ASSIGNOP
   reduce by 122 on QUEST
   reduce by 122 on COLON
   reduce by 122 on OROR
   reduce by 122 on ANDAND
   reduce by 122 on OR
   reduce by 122 on XOR
   reduce by 122 on AND
   reduce by 122 on EQUOP
   reduce by 122 on RELOP
   reduce by 122 on SHIFTOP
   reduce by 122 on PLUS
   reduce by 122 on MINUS
   reduce by 122 on STAR
   reduce by 122 on DIVOP
   reduce by 122 on INCOP
   reduce by 122 on LB
   reduce by 122 on RB
   reduce by 122 on LPAR
   reduce by 122 on RPAR
   reduce by 122 on STRUCTOP

State 111:
 (126)K unary           -> unary LB .expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RB]
 (133)  expr            -> .non_comma_expr[COMMA RB]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RB]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 182 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 112:
 (127)K unary           -> unary STRUCTOP .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 183 on NAME

State 113:
 (128)K unary           -> unary LPAR .args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary LPAR .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (130)  args            -> .non_comma_expr[RPAR]
 (131)  args            -> .non_comma_expr COMMA args[RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 185 on RPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 184 on args
   goto 186 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 114:
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)K unary           -> INCOP unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 123 on RC
   reduce by 123 on SEMI
   reduce by 123 on COMMA
   reduce by 123 on EQUAL
   reduce by 123 on ASSIGNOP
   reduce by 123 on QUEST
   reduce by 123 on COLON
   reduce by 123 on OROR
   reduce by 123 on ANDAND
   reduce by 123 on OR
   reduce by 123 on XOR
   reduce by 123 on AND
   reduce by 123 on EQUOP
   reduce by 123 on RELOP
   reduce by 123 on SHIFTOP
   reduce by 123 on PLUS
   reduce by 123 on MINUS
   reduce by 123 on STAR
   reduce by 123 on DIVOP
   shift to 110 on INCOP
   shift to 111 on LB
   reduce by 123 on RB
   shift to 113 on LPAR
   reduce by 123 on RPAR
   shift to 112 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 123 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 123 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 123 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 123 (prec=14).
State 115:
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)K unary           -> AND unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 124 on RC
   reduce by 124 on SEMI
   reduce by 124 on COMMA
   reduce by 124 on EQUAL
   reduce by 124 on ASSIGNOP
   reduce by 124 on QUEST
   reduce by 124 on COLON
   reduce by 124 on OROR
   reduce by 124 on ANDAND
   reduce by 124 on OR
   reduce by 124 on XOR
   reduce by 124 on AND
   reduce by 124 on EQUOP
   reduce by 124 on RELOP
   reduce by 124 on SHIFTOP
   reduce by 124 on PLUS
   reduce by 124 on MINUS
   reduce by 124 on STAR
   reduce by 124 on DIVOP
   shift to 110 on INCOP
   shift to 111 on LB
   reduce by 124 on RB
   shift to 113 on LPAR
   reduce by 124 on RPAR
   shift to 112 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 124 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 124 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 124 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 124 (prec=14).
State 116:
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)K unary           -> STAR unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 125 on RC
   reduce by 125 on SEMI
   reduce by 125 on COMMA
   reduce by 125 on EQUAL
   reduce by 125 on ASSIGNOP
   reduce by 125 on QUEST
   reduce by 125 on COLON
   reduce by 125 on OROR
   reduce by 125 on ANDAND
   reduce by 125 on OR
   reduce by 125 on XOR
   reduce by 125 on AND
   reduce by 125 on EQUOP
   reduce by 125 on RELOP
   reduce by 125 on SHIFTOP
   reduce by 125 on PLUS
   reduce by 125 on MINUS
   reduce by 125 on STAR
   reduce by 125 on DIVOP
   shift to 110 on INCOP
   shift to 111 on LB
   reduce by 125 on RB
   shift to 113 on LPAR
   reduce by 125 on RPAR
   shift to 112 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 125 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 125 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 125 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 125 (prec=14).
State 117:
 (132)K expr            -> expr COMMA .non_comma_expr[RC SEMI COMMA COLON RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (137)  non_comma_expr  -> .or_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (138)  or_expr         -> .or_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (139)  or_list         -> .or_list OROR and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (140)  or_list         -> .and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (141)  and_expr        -> .and_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)  and_list        -> .and_list ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (143)  and_list        -> .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 187 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 118:
 (134)K non_comma_expr  -> non_comma_expr QUEST .non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[EQUAL ASSIGNOP QUEST COLON]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[EQUAL ASSIGNOP QUEST COLON]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[EQUAL ASSIGNOP QUEST COLON]
 (137)  non_comma_expr  -> .or_expr[EQUAL ASSIGNOP QUEST COLON]
 (138)  or_expr         -> .or_list[EQUAL ASSIGNOP QUEST COLON]
 (139)  or_list         -> .or_list OROR and_expr[EQUAL ASSIGNOP QUEST COLON OROR]
 (140)  or_list         -> .and_expr[EQUAL ASSIGNOP QUEST COLON OROR]
 (141)  and_expr        -> .and_list[EQUAL ASSIGNOP QUEST COLON OROR]
 (142)  and_list        -> .and_list ANDAND binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND]
 (143)  and_list        -> .binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 188 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 119:
 (135)K non_comma_expr  -> non_comma_expr ASSIGNOP .non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (137)  non_comma_expr  -> .or_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (138)  or_expr         -> .or_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (139)  or_list         -> .or_list OROR and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (140)  or_list         -> .and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (141)  and_expr        -> .and_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)  and_list        -> .and_list ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (143)  and_list        -> .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 189 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 120:
 (136)K non_comma_expr  -> non_comma_expr EQUAL .non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (137)  non_comma_expr  -> .or_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (138)  or_expr         -> .or_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (139)  or_list         -> .or_list OROR and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (140)  or_list         -> .and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (141)  and_expr        -> .and_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)  and_list        -> .and_list ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (143)  and_list        -> .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 190 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 121:
 (139)K or_list         -> or_list OROR .and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (141)  and_expr        -> .and_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)  and_list        -> .and_list ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (143)  and_list        -> .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 191 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 122:
 (142)K and_list        -> and_list ANDAND .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 192 on binary

State 123:
 (144)K binary          -> binary RELOP .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 193 on binary

State 124:
 (145)K binary          -> binary EQUOP .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 194 on binary

State 125:
 (146)K binary          -> binary STAR .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 195 on binary

State 126:
 (147)K binary          -> binary DIVOP .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 196 on binary

State 127:
 (148)K binary          -> binary SHIFTOP .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 197 on binary

State 128:
 (149)K binary          -> binary AND .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 198 on binary

State 129:
 (150)K binary          -> binary XOR .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 199 on binary

State 130:
 (151)K binary          -> binary OR .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 200 on binary

State 131:
 (152)K binary          -> binary PLUS .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 201 on binary

State 132:
 (153)K binary          -> binary MINUS .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 202 on binary

State 133:
 ( 79)K compound_stmt   -> LC stmt_list RC .[EOI STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR TTYPE CLASS NAME ELSE]

   reduce by 79 on EOI
   reduce by 79 on STRING
   reduce by 79 on ICON
   reduce by 79 on FCON
   reduce by 79 on TYPE
   reduce by 79 on STRUCT
   reduce by 79 on ENUM
   reduce by 79 on RETURN
   reduce by 79 on GOTO
   reduce by 79 on IF
   reduce by 79 on SWITCH
   reduce by 79 on CASE
   reduce by 79 on DEFAULT
   reduce by 79 on BREAK
   reduce by 79 on CONTINUE
   reduce by 79 on WHILE
   reduce by 79 on DO
   reduce by 79 on FOR
   reduce by 79 on TRYSTMT
   reduce by 79 on CATCH
   reduce by 79 on THROW
   reduce by 79 on LC
   reduce by 79 on RC
   reduce by 79 on SEMI
   reduce by 79 on AND
   reduce by 79 on MINUS
   reduce by 79 on STAR
   reduce by 79 on SIZEOF
   reduce by 79 on UNOP
   reduce by 79 on INCOP
   reduce by 79 on LPAR
   reduce by 79 on TTYPE
   reduce by 79 on CLASS
   reduce by 79 on NAME
   reduce by 79 on ELSE

State 134:
 ( 81)K stmt_list       -> stmt_list statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]

   reduce by 81 on STRING
   reduce by 81 on ICON
   reduce by 81 on FCON
   reduce by 81 on TYPE
   reduce by 81 on STRUCT
   reduce by 81 on ENUM
   reduce by 81 on RETURN
   reduce by 81 on GOTO
   reduce by 81 on IF
   reduce by 81 on SWITCH
   reduce by 81 on CASE
   reduce by 81 on DEFAULT
   reduce by 81 on BREAK
   reduce by 81 on CONTINUE
   reduce by 81 on WHILE
   reduce by 81 on DO
   reduce by 81 on FOR
   reduce by 81 on TRYSTMT
   reduce by 81 on THROW
   reduce by 81 on LC
   reduce by 81 on RC
   reduce by 81 on SEMI
   reduce by 81 on AND
   reduce by 81 on MINUS
   reduce by 81 on STAR
   reduce by 81 on SIZEOF
   reduce by 81 on UNOP
   reduce by 81 on INCOP
   reduce by 81 on LPAR
   reduce by 81 on CLASS
   reduce by 81 on NAME

State 135:
 ( 82)K stmt_list       -> stmt_list def .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]

   reduce by 82 on STRING
   reduce by 82 on ICON
   reduce by 82 on FCON
   reduce by 82 on TYPE
   reduce by 82 on STRUCT
   reduce by 82 on ENUM
   reduce by 82 on RETURN
   reduce by 82 on GOTO
   reduce by 82 on IF
   reduce by 82 on SWITCH
   reduce by 82 on CASE
   reduce by 82 on DEFAULT
   reduce by 82 on BREAK
   reduce by 82 on CONTINUE
   reduce by 82 on WHILE
   reduce by 82 on DO
   reduce by 82 on FOR
   reduce by 82 on TRYSTMT
   reduce by 82 on THROW
   reduce by 82 on LC
   reduce by 82 on RC
   reduce by 82 on SEMI
   reduce by 82 on AND
   reduce by 82 on MINUS
   reduce by 82 on STAR
   reduce by 82 on SIZEOF
   reduce by 82 on UNOP
   reduce by 82 on INCOP
   reduce by 82 on LPAR
   reduce by 82 on CLASS
   reduce by 82 on NAME

State 136:
 ( 11)K specifiers      -> specifiers .type_or_class[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 61)K def             -> specifiers .decl_list SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 62)K def             -> specifiers .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 12)  type_or_class   -> .type_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 13)  type_or_class   -> .CLASS[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 22)  var_decl        -> .name[SEMI COMMA EQUAL COLON LB LPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 25)  var_decl        -> .var_decl LB RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 27)  var_decl        -> .STAR var_decl[SEMI COMMA EQUAL COLON LB LPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[SEMI COMMA LB LPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[SEMI COMMA LB LPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[SEMI COMMA LB LPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[SEMI COMMA LB LPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[SEMI COMMA LB LPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[SEMI COMMA LB LPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[SEMI COMMA LB LPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[SEMI COMMA LB LPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 63)  decl_list       -> .decl[SEMI COMMA]
 ( 64)  decl_list       -> .decl_list COMMA decl[SEMI COMMA]
 ( 65)  decl            -> .funct_decl[SEMI COMMA]
 ( 66)  decl            -> .var_decl[SEMI COMMA]
 ( 67)  decl            -> .var_decl EQUAL initializer[SEMI COMMA]
 ( 68)  decl            -> .var_decl COLON const_expr[SEMI COMMA]
 ( 69)  decl            -> .COLON const_expr[SEMI COMMA]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM SEMI COLON STAR LPAR CLASS NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 (164)  name            -> .NAME[SEMI COMMA EQUAL COLON LB LPAR]

   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 204 on SEMI
   shift to 208 on COLON
   shift to 21 on STAR
   shift to 22 on LPAR
   shift to 26 on CLASS
   shift to 23 on NAME
   goto 206 on funct_decl
   goto 25 on type_or_class
   goto 8 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 205 on var_decl
   goto 20 on name
   goto 203 on decl_list
   goto 207 on decl
   goto 13 on enum

State 137:
 ( 83)K statement       -> SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 83 on STRING
   reduce by 83 on ICON
   reduce by 83 on FCON
   reduce by 83 on TYPE
   reduce by 83 on STRUCT
   reduce by 83 on ENUM
   reduce by 83 on RETURN
   reduce by 83 on GOTO
   reduce by 83 on IF
   reduce by 83 on SWITCH
   reduce by 83 on CASE
   reduce by 83 on DEFAULT
   reduce by 83 on BREAK
   reduce by 83 on CONTINUE
   reduce by 83 on WHILE
   reduce by 83 on DO
   reduce by 83 on FOR
   reduce by 83 on TRYSTMT
   reduce by 83 on THROW
   reduce by 83 on LC
   reduce by 83 on RC
   reduce by 83 on SEMI
   reduce by 83 on AND
   reduce by 83 on MINUS
   reduce by 83 on STAR
   reduce by 83 on SIZEOF
   reduce by 83 on UNOP
   reduce by 83 on INCOP
   reduce by 83 on LPAR
   reduce by 83 on CLASS
   reduce by 83 on NAME
   reduce by 83 on ELSE

State 138:
 ( 84)K statement       -> compound_stmt .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 84 on STRING
   reduce by 84 on ICON
   reduce by 84 on FCON
   reduce by 84 on TYPE
   reduce by 84 on STRUCT
   reduce by 84 on ENUM
   reduce by 84 on RETURN
   reduce by 84 on GOTO
   reduce by 84 on IF
   reduce by 84 on SWITCH
   reduce by 84 on CASE
   reduce by 84 on DEFAULT
   reduce by 84 on BREAK
   reduce by 84 on CONTINUE
   reduce by 84 on WHILE
   reduce by 84 on DO
   reduce by 84 on FOR
   reduce by 84 on TRYSTMT
   reduce by 84 on THROW
   reduce by 84 on LC
   reduce by 84 on RC
   reduce by 84 on SEMI
   reduce by 84 on AND
   reduce by 84 on MINUS
   reduce by 84 on STAR
   reduce by 84 on SIZEOF
   reduce by 84 on UNOP
   reduce by 84 on INCOP
   reduce by 84 on LPAR
   reduce by 84 on CLASS
   reduce by 84 on NAME
   reduce by 84 on ELSE

State 139:
 ( 85)K statement       -> expr .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (132)K expr            -> expr .COMMA non_comma_expr[SEMI COMMA]

   shift to 209 on SEMI
   shift to 117 on COMMA

State 140:
 ( 86)K statement       -> RETURN .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)K statement       -> RETURN .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 210 on SEMI
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 211 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 141:
 ( 88)K statement       -> GOTO .target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[SEMI]

   shift to 213 on NAME
   goto 212 on target

State 142:
 ( 89)K statement       -> target .COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 214 on COLON

State 143:
 ( 90)K statement       -> IF .LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)K statement       -> IF .LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 215 on LPAR

State 144:
 ( 92)K statement       -> WHILE .LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 216 on LPAR

State 145:
 ( 93)K statement       -> DO .statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[WHILE]
 ( 83)  statement       -> .SEMI[WHILE]
 ( 84)  statement       -> .compound_stmt[WHILE]
 ( 85)  statement       -> .expr SEMI[WHILE]
 ( 86)  statement       -> .RETURN SEMI[WHILE]
 ( 87)  statement       -> .RETURN expr SEMI[WHILE]
 ( 88)  statement       -> .GOTO target SEMI[WHILE]
 ( 89)  statement       -> .target COLON statement[WHILE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[WHILE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[WHILE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[WHILE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[WHILE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[WHILE]
 ( 95)  statement       -> .BREAK SEMI[WHILE]
 ( 96)  statement       -> .CONTINUE SEMI[WHILE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[WHILE]
 ( 98)  statement       -> .CASE const_expr COLON[WHILE]
 ( 99)  statement       -> .DEFAULT COLON[WHILE]
 (100)  statement       -> .THROW expr SEMI[WHILE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[WHILE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 140 on RETURN
   shift to 141 on GOTO
   shift to 143 on IF
   shift to 149 on SWITCH
   shift to 150 on CASE
   shift to 151 on DEFAULT
   shift to 147 on BREAK
   shift to 148 on CONTINUE
   shift to 144 on WHILE
   shift to 145 on DO
   shift to 146 on FOR
   shift to 153 on TRYSTMT
   shift to 152 on THROW
   shift to 37 on LC
   shift to 137 on SEMI
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 154 on NAME
   goto 138 on compound_stmt
   goto 217 on statement
   goto 139 on expr
   goto 142 on target
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 146:
 ( 94)K statement       -> FOR .LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 218 on LPAR

State 147:
 ( 95)K statement       -> BREAK .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 219 on SEMI

State 148:
 ( 96)K statement       -> CONTINUE .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 220 on SEMI

State 149:
 ( 97)K statement       -> SWITCH .LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 221 on LPAR

State 150:
 ( 98)K statement       -> CASE .const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA COLON]
 (133)  expr            -> .non_comma_expr[COMMA COLON]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST COLON]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST COLON]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST COLON]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST COLON]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST COLON]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST COLON OROR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST COLON OROR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST COLON OROR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (157)  const_expr      -> .expr[COLON]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 222 on const_expr
   goto 68 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 151:
 ( 99)K statement       -> DEFAULT .COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 223 on COLON

State 152:
 (100)K statement       -> THROW .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 224 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 153:
 (101)K statement       -> TRYSTMT .compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[CATCH]

   shift to 37 on LC
   goto 225 on compound_stmt

State 154:
 (108)K target          -> NAME .[COLON]
 (114)K unary           -> NAME .[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   reduce by 114 on SEMI
   reduce by 114 on COMMA
   reduce by 114 on EQUAL
   reduce by 114 on ASSIGNOP
   reduce by 114 on QUEST
   reduce by 108 on COLON
   reduce by 114 on OROR
   reduce by 114 on ANDAND
   reduce by 114 on OR
   reduce by 114 on XOR
   reduce by 114 on AND
   reduce by 114 on EQUOP
   reduce by 114 on RELOP
   reduce by 114 on SHIFTOP
   reduce by 114 on PLUS
   reduce by 114 on MINUS
   reduce by 114 on STAR
   reduce by 114 on DIVOP
   reduce by 114 on INCOP
   reduce by 114 on LB
   reduce by 114 on LPAR
   reduce by 114 on STRUCTOP

State 155:
 (159)K initializer     -> LC initializer_list .RC[RC SEMI COMMA]
 (161)K initializer_list -> initializer_list .COMMA initializer[RC COMMA]

   shift to 226 on RC
   shift to 227 on COMMA

State 156:
 (160)K initializer_list -> initializer .[RC COMMA]

   reduce by 160 on RC
   reduce by 160 on COMMA

State 157:
 ( 24)K var_decl        -> var_decl LPAR var_list RPAR .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   reduce by 24 on SEMI
   reduce by 24 on COMMA
   reduce by 24 on EQUAL
   reduce by 24 on COLON
   reduce by 24 on LB
   reduce by 24 on LPAR
   reduce by 24 on RPAR

State 158:
 ( 40)K var_list        -> var_list COMMA .param_declaration[COMMA RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 41)  param_declaration -> .type var_decl[COMMA RPAR]
 ( 42)  param_declaration -> .abstract_decl[COMMA RPAR]
 ( 43)  param_declaration -> .ELLIPSIS[COMMA RPAR]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 46)  abstract_decl   -> .type abs_decl[COMMA RPAR]
 ( 47)  abstract_decl   -> .TTYPE abs_decl[COMMA RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]

   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 86 on ELLIPSIS
   shift to 88 on TTYPE
   goto 87 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 228 on param_declaration
   goto 84 on type
   goto 85 on abstract_decl
   goto 13 on enum

State 159:
 ( 23)K var_decl        -> var_decl .LPAR RPAR[COMMA LB LPAR RPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[COMMA LB LPAR RPAR]
 ( 25)K var_decl        -> var_decl .LB RB[COMMA LB LPAR RPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[COMMA LB LPAR RPAR]
 ( 41)K param_declaration -> type var_decl .[COMMA RPAR]

   reduce by 41 on COMMA
   shift to 40 on LB
   shift to 39 on LPAR
   reduce by 41 on RPAR

State 160:
 ( 45)K type            -> type type_specifier .[TYPE STRUCT ENUM COMMA STAR LB LPAR RPAR NAME]

   reduce by 45 on TYPE
   reduce by 45 on STRUCT
   reduce by 45 on ENUM
   reduce by 45 on COMMA
   reduce by 45 on STAR
   reduce by 45 on LB
   reduce by 45 on LPAR
   reduce by 45 on RPAR
   reduce by 45 on NAME

State 161:
 ( 46)K abstract_decl   -> type abs_decl .[COMMA RPAR]
 ( 51)K abs_decl        -> abs_decl .LB RB[COMMA LB RPAR]
 ( 52)K abs_decl        -> abs_decl .LB const_expr RB[COMMA LB RPAR]

   reduce by 46 on COMMA
   shift to 229 on LB
   reduce by 46 on RPAR

State 162:
 ( 22)K var_decl        -> name .[COMMA LB LPAR RPAR]

   reduce by 22 on COMMA
   reduce by 22 on LB
   reduce by 22 on LPAR
   reduce by 22 on RPAR

State 163:
 ( 27)K var_decl        -> STAR .var_decl[COMMA LB LPAR RPAR]
 ( 50)K abs_decl        -> STAR .abs_decl[COMMA LB RPAR]
 ( 22)  var_decl        -> .name[COMMA LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[COMMA LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[COMMA LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[COMMA LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[COMMA LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[COMMA LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[COMMA LB LPAR RPAR]
 ( 48)  abs_decl        -> .[COMMA LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[COMMA LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[COMMA LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[COMMA LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[COMMA LB RPAR]
 (164)  name            -> .NAME[COMMA LB LPAR RPAR]

   reduce by 48 on COMMA
   shift to 163 on STAR
   reduce by 48 on LB
   shift to 164 on LPAR
   reduce by 48 on RPAR
   shift to 23 on NAME
   goto 42 on var_decl
   goto 162 on name
   goto 230 on abs_decl

State 164:
 ( 28)K var_decl        -> LPAR .var_decl RPAR[COMMA LB LPAR RPAR]
 ( 49)K abs_decl        -> LPAR .abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 53)K abs_decl        -> LPAR .abs_decl RPAR[COMMA LB RPAR]
 ( 22)  var_decl        -> .name[LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[LB LPAR RPAR]
 ( 48)  abs_decl        -> .[LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[LB RPAR]
 (164)  name            -> .NAME[LB LPAR RPAR]

   shift to 163 on STAR
   reduce by 48 on LB
   shift to 164 on LPAR
   reduce by 48 on RPAR
   shift to 23 on NAME
   goto 44 on var_decl
   goto 162 on name
   goto 231 on abs_decl

State 165:
 ( 47)K abstract_decl   -> TTYPE abs_decl .[COMMA RPAR]
 ( 51)K abs_decl        -> abs_decl .LB RB[COMMA LB RPAR]
 ( 52)K abs_decl        -> abs_decl .LB const_expr RB[COMMA LB RPAR]

   reduce by 47 on COMMA
   shift to 229 on LB
   reduce by 47 on RPAR

State 166:
 ( 49)K abs_decl        -> LPAR .abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 53)K abs_decl        -> LPAR .abs_decl RPAR[COMMA LB RPAR]
 ( 48)  abs_decl        -> .[LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[LB RPAR]

   shift to 167 on STAR
   reduce by 48 on LB
   shift to 166 on LPAR
   reduce by 48 on RPAR
   goto 231 on abs_decl

State 167:
 ( 50)K abs_decl        -> STAR .abs_decl[COMMA LB RPAR]
 ( 48)  abs_decl        -> .[COMMA LB RPAR]
 ( 49)  abs_decl        -> .LPAR abs_decl RPAR LPAR RPAR[COMMA LB RPAR]
 ( 50)  abs_decl        -> .STAR abs_decl[COMMA LB RPAR]
 ( 51)  abs_decl        -> .abs_decl LB RB[COMMA LB RPAR]
 ( 52)  abs_decl        -> .abs_decl LB const_expr RB[COMMA LB RPAR]
 ( 53)  abs_decl        -> .LPAR abs_decl RPAR[COMMA LB RPAR]

   reduce by 48 on COMMA
   shift to 167 on STAR
   reduce by 48 on LB
   shift to 166 on LPAR
   reduce by 48 on RPAR
   goto 230 on abs_decl

State 168:
 ( 26)K var_decl        -> var_decl LB const_expr RB .[SEMI COMMA EQUAL COLON LB LPAR RPAR]

   reduce by 26 on SEMI
   reduce by 26 on COMMA
   reduce by 26 on EQUAL
   reduce by 26 on COLON
   reduce by 26 on LB
   reduce by 26 on LPAR
   reduce by 26 on RPAR

State 169:
 ( 35)K funct_decl      -> name LPAR name_list RPAR .[LC SEMI COMMA LB LPAR RPAR]

   reduce by 35 on LC
   reduce by 35 on SEMI
   reduce by 35 on COMMA
   reduce by 35 on LB
   reduce by 35 on LPAR
   reduce by 35 on RPAR

State 170:
 ( 38)K name_list       -> name_list COMMA .name[COMMA RPAR]
 (164)  name            -> .NAME[COMMA RPAR]

   shift to 23 on NAME
   goto 232 on name

State 171:
 ( 36)K funct_decl      -> name LPAR var_list RPAR .[LC SEMI COMMA LB LPAR RPAR]

   reduce by 36 on LC
   reduce by 36 on SEMI
   reduce by 36 on COMMA
   reduce by 36 on LB
   reduce by 36 on LPAR
   reduce by 36 on RPAR

State 172:
 ( 54)K struct_specifier -> STRUCT opt_tag LC def_list RC .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 54 on TYPE
   reduce by 54 on STRUCT
   reduce by 54 on ENUM
   reduce by 54 on SEMI
   reduce by 54 on COMMA
   reduce by 54 on COLON
   reduce by 54 on STAR
   reduce by 54 on LB
   reduce by 54 on LPAR
   reduce by 54 on RPAR
   reduce by 54 on CLASS
   reduce by 54 on NAME

State 173:
 ( 60)K def_list        -> def_list def .[TYPE STRUCT ENUM RC CLASS]

   reduce by 60 on TYPE
   reduce by 60 on STRUCT
   reduce by 60 on ENUM
   reduce by 60 on RC
   reduce by 60 on CLASS

State 174:
 ( 73)K opt_enum_list   -> LC enumerator_list RC .[TYPE STRUCT ENUM SEMI COMMA COLON STAR LB LPAR RPAR CLASS NAME]

   reduce by 73 on TYPE
   reduce by 73 on STRUCT
   reduce by 73 on ENUM
   reduce by 73 on SEMI
   reduce by 73 on COMMA
   reduce by 73 on COLON
   reduce by 73 on STAR
   reduce by 73 on LB
   reduce by 73 on LPAR
   reduce by 73 on RPAR
   reduce by 73 on CLASS
   reduce by 73 on NAME

State 175:
 ( 76)K enumerator_list -> enumerator_list COMMA enumerator .[RC COMMA]

   reduce by 76 on RC
   reduce by 76 on COMMA

State 176:
 ( 78)K enumerator      -> name EQUAL const_expr .[RC COMMA]

   reduce by 78 on RC
   reduce by 78 on COMMA

State 177:
 (111)K unary           -> LPAR expr RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 111 on RC
   reduce by 111 on SEMI
   reduce by 111 on COMMA
   reduce by 111 on EQUAL
   reduce by 111 on ASSIGNOP
   reduce by 111 on QUEST
   reduce by 111 on COLON
   reduce by 111 on OROR
   reduce by 111 on ANDAND
   reduce by 111 on OR
   reduce by 111 on XOR
   reduce by 111 on AND
   reduce by 111 on EQUOP
   reduce by 111 on RELOP
   reduce by 111 on SHIFTOP
   reduce by 111 on PLUS
   reduce by 111 on MINUS
   reduce by 111 on STAR
   reduce by 111 on DIVOP
   reduce by 111 on INCOP
   reduce by 111 on LB
   reduce by 111 on RB
   reduce by 111 on LPAR
   reduce by 111 on RPAR
   reduce by 111 on STRUCTOP

State 178:
 (119)K unary           -> LPAR abstract_decl RPAR .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 233 on unary
   goto 60 on string_const

State 179:
 (115)K unary           -> string_const .[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)K unary           -> SIZEOF LPAR string_const .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)K string_const    -> string_const .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   shift to 106 on STRING
   reduce by 115 on COMMA
   reduce by 115 on EQUAL
   reduce by 115 on ASSIGNOP
   reduce by 115 on QUEST
   reduce by 115 on OROR
   reduce by 115 on ANDAND
   reduce by 115 on OR
   reduce by 115 on XOR
   reduce by 115 on AND
   reduce by 115 on EQUOP
   reduce by 115 on RELOP
   reduce by 115 on SHIFTOP
   reduce by 115 on PLUS
   reduce by 115 on MINUS
   reduce by 115 on STAR
   reduce by 115 on DIVOP
   reduce by 115 on INCOP
   reduce by 115 on LB
   reduce by 115 on LPAR
   shift to 234 on RPAR
   reduce by 115 on STRUCTOP

warning --- Shift/reduce conflict on RPAR (prec=15, left assoc). Choose shift instead of reduce by prod 115 (prec=1).
State 180:
 (117)K unary           -> SIZEOF LPAR expr .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (132)K expr            -> expr .COMMA non_comma_expr[COMMA RPAR]

   shift to 117 on COMMA
   shift to 235 on RPAR

State 181:
 (118)K unary           -> SIZEOF LPAR abstract_decl .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 236 on RPAR

State 182:
 (126)K unary           -> unary LB expr .RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (132)K expr            -> expr .COMMA non_comma_expr[COMMA RB]

   shift to 117 on COMMA
   shift to 237 on RB

State 183:
 (127)K unary           -> unary STRUCTOP NAME .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 127 on RC
   reduce by 127 on SEMI
   reduce by 127 on COMMA
   reduce by 127 on EQUAL
   reduce by 127 on ASSIGNOP
   reduce by 127 on QUEST
   reduce by 127 on COLON
   reduce by 127 on OROR
   reduce by 127 on ANDAND
   reduce by 127 on OR
   reduce by 127 on XOR
   reduce by 127 on AND
   reduce by 127 on EQUOP
   reduce by 127 on RELOP
   reduce by 127 on SHIFTOP
   reduce by 127 on PLUS
   reduce by 127 on MINUS
   reduce by 127 on STAR
   reduce by 127 on DIVOP
   reduce by 127 on INCOP
   reduce by 127 on LB
   reduce by 127 on RB
   reduce by 127 on LPAR
   reduce by 127 on RPAR
   reduce by 127 on STRUCTOP

State 184:
 (128)K unary           -> unary LPAR args .RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 238 on RPAR

State 185:
 (129)K unary           -> unary LPAR RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 129 on RC
   reduce by 129 on SEMI
   reduce by 129 on COMMA
   reduce by 129 on EQUAL
   reduce by 129 on ASSIGNOP
   reduce by 129 on QUEST
   reduce by 129 on COLON
   reduce by 129 on OROR
   reduce by 129 on ANDAND
   reduce by 129 on OR
   reduce by 129 on XOR
   reduce by 129 on AND
   reduce by 129 on EQUOP
   reduce by 129 on RELOP
   reduce by 129 on SHIFTOP
   reduce by 129 on PLUS
   reduce by 129 on MINUS
   reduce by 129 on STAR
   reduce by 129 on DIVOP
   reduce by 129 on INCOP
   reduce by 129 on LB
   reduce by 129 on RB
   reduce by 129 on LPAR
   reduce by 129 on RPAR
   reduce by 129 on STRUCTOP

State 186:
 (130)K args            -> non_comma_expr .[RPAR]
 (131)K args            -> non_comma_expr .COMMA args[RPAR]
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]

   shift to 239 on COMMA
   shift to 120 on EQUAL
   shift to 119 on ASSIGNOP
   shift to 118 on QUEST
   reduce by 130 on RPAR

State 187:
 (132)K expr            -> expr COMMA non_comma_expr .[RC SEMI COMMA COLON RB RPAR]
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   reduce by 132 on RC
   reduce by 132 on SEMI
   reduce by 132 on COMMA
   shift to 120 on EQUAL
   shift to 119 on ASSIGNOP
   shift to 118 on QUEST
   reduce by 132 on COLON
   reduce by 132 on RB
   reduce by 132 on RPAR

State 188:
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[EQUAL ASSIGNOP QUEST COLON]
 (134)K non_comma_expr  -> non_comma_expr QUEST non_comma_expr .COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[EQUAL ASSIGNOP QUEST COLON]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[EQUAL ASSIGNOP QUEST COLON]

   shift to 120 on EQUAL
   shift to 119 on ASSIGNOP
   shift to 118 on QUEST
   shift to 240 on COLON

State 189:
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr ASSIGNOP non_comma_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   reduce by 135 on RC
   reduce by 135 on SEMI
   reduce by 135 on COMMA
   shift to 120 on EQUAL
   shift to 119 on ASSIGNOP
   shift to 118 on QUEST
   reduce by 135 on COLON
   reduce by 135 on RB
   reduce by 135 on RPAR

warning --- Shift/reduce conflict on QUEST (prec=3, right assoc). Choose shift instead of reduce by prod 135 (prec=2).
warning --- Shift/reduce conflict on ASSIGNOP (prec=2, right assoc). Choose shift instead of reduce by prod 135 (prec=2).
warning --- Shift/reduce conflict on EQUAL (prec=2, right assoc). Choose shift instead of reduce by prod 135 (prec=2).
State 190:
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr EQUAL non_comma_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   reduce by 136 on RC
   reduce by 136 on SEMI
   reduce by 136 on COMMA
   shift to 120 on EQUAL
   shift to 119 on ASSIGNOP
   shift to 118 on QUEST
   reduce by 136 on COLON
   reduce by 136 on RB
   reduce by 136 on RPAR

warning --- Shift/reduce conflict on QUEST (prec=3, right assoc). Choose shift instead of reduce by prod 136 (prec=2).
warning --- Shift/reduce conflict on ASSIGNOP (prec=2, right assoc). Choose shift instead of reduce by prod 136 (prec=2).
warning --- Shift/reduce conflict on EQUAL (prec=2, right assoc). Choose shift instead of reduce by prod 136 (prec=2).
State 191:
 (139)K or_list         -> or_list OROR and_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]

   reduce by 139 on RC
   reduce by 139 on SEMI
   reduce by 139 on COMMA
   reduce by 139 on EQUAL
   reduce by 139 on ASSIGNOP
   reduce by 139 on QUEST
   reduce by 139 on COLON
   reduce by 139 on OROR
   reduce by 139 on RB
   reduce by 139 on RPAR

State 192:
 (142)K and_list        -> and_list ANDAND binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 142 on RC
   reduce by 142 on SEMI
   reduce by 142 on COMMA
   reduce by 142 on EQUAL
   reduce by 142 on ASSIGNOP
   reduce by 142 on QUEST
   reduce by 142 on COLON
   reduce by 142 on OROR
   reduce by 142 on ANDAND
   shift to 130 on OR
   shift to 129 on XOR
   shift to 128 on AND
   shift to 124 on EQUOP
   shift to 123 on RELOP
   shift to 127 on SHIFTOP
   shift to 131 on PLUS
   shift to 132 on MINUS
   shift to 125 on STAR
   shift to 126 on DIVOP
   reduce by 142 on RB
   reduce by 142 on RPAR

State 193:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (144)K binary          -> binary RELOP binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 144 on RC
   reduce by 144 on SEMI
   reduce by 144 on COMMA
   reduce by 144 on EQUAL
   reduce by 144 on ASSIGNOP
   reduce by 144 on QUEST
   reduce by 144 on COLON
   reduce by 144 on OROR
   reduce by 144 on ANDAND
   reduce by 144 on OR
   reduce by 144 on XOR
   reduce by 144 on AND
   reduce by 144 on EQUOP
   reduce by 144 on RELOP
   shift to 127 on SHIFTOP
   shift to 131 on PLUS
   shift to 132 on MINUS
   shift to 125 on STAR
   shift to 126 on DIVOP
   reduce by 144 on RB
   reduce by 144 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose shift instead of reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 144 (prec=10).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 144 (prec=10).
State 194:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary EQUOP binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 145 on RC
   reduce by 145 on SEMI
   reduce by 145 on COMMA
   reduce by 145 on EQUAL
   reduce by 145 on ASSIGNOP
   reduce by 145 on QUEST
   reduce by 145 on COLON
   reduce by 145 on OROR
   reduce by 145 on ANDAND
   reduce by 145 on OR
   reduce by 145 on XOR
   reduce by 145 on AND
   reduce by 145 on EQUOP
   shift to 123 on RELOP
   shift to 127 on SHIFTOP
   shift to 131 on PLUS
   shift to 132 on MINUS
   shift to 125 on STAR
   shift to 126 on DIVOP
   reduce by 145 on RB
   reduce by 145 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 145 (prec=9).
State 195:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary STAR binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 146 on RC
   reduce by 146 on SEMI
   reduce by 146 on COMMA
   reduce by 146 on EQUAL
   reduce by 146 on ASSIGNOP
   reduce by 146 on QUEST
   reduce by 146 on COLON
   reduce by 146 on OROR
   reduce by 146 on ANDAND
   reduce by 146 on OR
   reduce by 146 on XOR
   reduce by 146 on AND
   reduce by 146 on EQUOP
   reduce by 146 on RELOP
   reduce by 146 on SHIFTOP
   reduce by 146 on PLUS
   reduce by 146 on MINUS
   reduce by 146 on STAR
   reduce by 146 on DIVOP
   reduce by 146 on RB
   reduce by 146 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose reduce by prod 146 (prec=13).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose reduce by prod 146 (prec=13).
State 196:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary DIVOP binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 147 on RC
   reduce by 147 on SEMI
   reduce by 147 on COMMA
   reduce by 147 on EQUAL
   reduce by 147 on ASSIGNOP
   reduce by 147 on QUEST
   reduce by 147 on COLON
   reduce by 147 on OROR
   reduce by 147 on ANDAND
   reduce by 147 on OR
   reduce by 147 on XOR
   reduce by 147 on AND
   reduce by 147 on EQUOP
   reduce by 147 on RELOP
   reduce by 147 on SHIFTOP
   reduce by 147 on PLUS
   reduce by 147 on MINUS
   reduce by 147 on STAR
   reduce by 147 on DIVOP
   reduce by 147 on RB
   reduce by 147 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose reduce by prod 147 (prec=13).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose reduce by prod 147 (prec=13).
State 197:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary SHIFTOP binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 148 on RC
   reduce by 148 on SEMI
   reduce by 148 on COMMA
   reduce by 148 on EQUAL
   reduce by 148 on ASSIGNOP
   reduce by 148 on QUEST
   reduce by 148 on COLON
   reduce by 148 on OROR
   reduce by 148 on ANDAND
   reduce by 148 on OR
   reduce by 148 on XOR
   reduce by 148 on AND
   reduce by 148 on EQUOP
   reduce by 148 on RELOP
   reduce by 148 on SHIFTOP
   shift to 131 on PLUS
   shift to 132 on MINUS
   shift to 125 on STAR
   shift to 126 on DIVOP
   reduce by 148 on RB
   reduce by 148 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 148 (prec=11).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 148 (prec=11).
State 198:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary AND binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 149 on RC
   reduce by 149 on SEMI
   reduce by 149 on COMMA
   reduce by 149 on EQUAL
   reduce by 149 on ASSIGNOP
   reduce by 149 on QUEST
   reduce by 149 on COLON
   reduce by 149 on OROR
   reduce by 149 on ANDAND
   reduce by 149 on OR
   reduce by 149 on XOR
   reduce by 149 on AND
   shift to 124 on EQUOP
   shift to 123 on RELOP
   shift to 127 on SHIFTOP
   shift to 131 on PLUS
   shift to 132 on MINUS
   shift to 125 on STAR
   shift to 126 on DIVOP
   reduce by 149 on RB
   reduce by 149 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 149 (prec=8).
State 199:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary XOR binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 150 on RC
   reduce by 150 on SEMI
   reduce by 150 on COMMA
   reduce by 150 on EQUAL
   reduce by 150 on ASSIGNOP
   reduce by 150 on QUEST
   reduce by 150 on COLON
   reduce by 150 on OROR
   reduce by 150 on ANDAND
   reduce by 150 on OR
   reduce by 150 on XOR
   shift to 128 on AND
   shift to 124 on EQUOP
   shift to 123 on RELOP
   shift to 127 on SHIFTOP
   shift to 131 on PLUS
   shift to 132 on MINUS
   shift to 125 on STAR
   shift to 126 on DIVOP
   reduce by 150 on RB
   reduce by 150 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 150 (prec=7).
State 200:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary OR binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 151 on RC
   reduce by 151 on SEMI
   reduce by 151 on COMMA
   reduce by 151 on EQUAL
   reduce by 151 on ASSIGNOP
   reduce by 151 on QUEST
   reduce by 151 on COLON
   reduce by 151 on OROR
   reduce by 151 on ANDAND
   reduce by 151 on OR
   shift to 129 on XOR
   shift to 128 on AND
   shift to 124 on EQUOP
   shift to 123 on RELOP
   shift to 127 on SHIFTOP
   shift to 131 on PLUS
   shift to 132 on MINUS
   shift to 125 on STAR
   shift to 126 on DIVOP
   reduce by 151 on RB
   reduce by 151 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose shift instead of reduce by prod 151 (prec=6).
State 201:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary PLUS binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 152 on RC
   reduce by 152 on SEMI
   reduce by 152 on COMMA
   reduce by 152 on EQUAL
   reduce by 152 on ASSIGNOP
   reduce by 152 on QUEST
   reduce by 152 on COLON
   reduce by 152 on OROR
   reduce by 152 on ANDAND
   reduce by 152 on OR
   reduce by 152 on XOR
   reduce by 152 on AND
   reduce by 152 on EQUOP
   reduce by 152 on RELOP
   reduce by 152 on SHIFTOP
   reduce by 152 on PLUS
   reduce by 152 on MINUS
   shift to 125 on STAR
   shift to 126 on DIVOP
   reduce by 152 on RB
   reduce by 152 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose reduce by prod 152 (prec=12).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose reduce by prod 152 (prec=12).
State 202:
 (144)K binary          -> binary .RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)K binary          -> binary .EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)K binary          -> binary .STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)K binary          -> binary .DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)K binary          -> binary .SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)K binary          -> binary .AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)K binary          -> binary .XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)K binary          -> binary .OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)K binary          -> binary .PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary .MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)K binary          -> binary MINUS binary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]

   reduce by 153 on RC
   reduce by 153 on SEMI
   reduce by 153 on COMMA
   reduce by 153 on EQUAL
   reduce by 153 on ASSIGNOP
   reduce by 153 on QUEST
   reduce by 153 on COLON
   reduce by 153 on OROR
   reduce by 153 on ANDAND
   reduce by 153 on OR
   reduce by 153 on XOR
   reduce by 153 on AND
   reduce by 153 on EQUOP
   reduce by 153 on RELOP
   reduce by 153 on SHIFTOP
   reduce by 153 on PLUS
   reduce by 153 on MINUS
   shift to 125 on STAR
   shift to 126 on DIVOP
   reduce by 153 on RB
   reduce by 153 on RPAR

warning --- Shift/reduce conflict on RELOP (prec=10, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on EQUOP (prec=9, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on STAR (prec=13, left assoc). Choose shift instead of reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on DIVOP (prec=13, left assoc). Choose shift instead of reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on SHIFTOP (prec=11, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on AND (prec=8, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on XOR (prec=7, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on OR (prec=6, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on PLUS (prec=12, left assoc). Choose reduce by prod 153 (prec=12).
warning --- Shift/reduce conflict on MINUS (prec=12, left assoc). Choose reduce by prod 153 (prec=12).
State 203:
 ( 61)K def             -> specifiers decl_list .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]
 ( 64)K decl_list       -> decl_list .COMMA decl[SEMI COMMA]

   shift to 241 on SEMI
   shift to 242 on COMMA

State 204:
 ( 62)K def             -> specifiers SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]

   reduce by 62 on STRING
   reduce by 62 on ICON
   reduce by 62 on FCON
   reduce by 62 on TYPE
   reduce by 62 on STRUCT
   reduce by 62 on ENUM
   reduce by 62 on RETURN
   reduce by 62 on GOTO
   reduce by 62 on IF
   reduce by 62 on SWITCH
   reduce by 62 on CASE
   reduce by 62 on DEFAULT
   reduce by 62 on BREAK
   reduce by 62 on CONTINUE
   reduce by 62 on WHILE
   reduce by 62 on DO
   reduce by 62 on FOR
   reduce by 62 on TRYSTMT
   reduce by 62 on THROW
   reduce by 62 on LC
   reduce by 62 on RC
   reduce by 62 on SEMI
   reduce by 62 on AND
   reduce by 62 on MINUS
   reduce by 62 on STAR
   reduce by 62 on SIZEOF
   reduce by 62 on UNOP
   reduce by 62 on INCOP
   reduce by 62 on LPAR
   reduce by 62 on CLASS
   reduce by 62 on NAME

State 205:
 ( 23)K var_decl        -> var_decl .LPAR RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 25)K var_decl        -> var_decl .LB RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 66)K decl            -> var_decl .[SEMI COMMA]
 ( 67)K decl            -> var_decl .EQUAL initializer[SEMI COMMA]
 ( 68)K decl            -> var_decl .COLON const_expr[SEMI COMMA]

   reduce by 66 on SEMI
   reduce by 66 on COMMA
   shift to 243 on EQUAL
   shift to 244 on COLON
   shift to 40 on LB
   shift to 39 on LPAR

State 206:
 ( 30)K funct_decl      -> funct_decl .LB RB[SEMI COMMA LB LPAR]
 ( 31)K funct_decl      -> funct_decl .LB const_expr RB[SEMI COMMA LB LPAR]
 ( 33)K funct_decl      -> funct_decl .LPAR RPAR[SEMI COMMA LB LPAR]
 ( 65)K decl            -> funct_decl .[SEMI COMMA]

   reduce by 65 on SEMI
   reduce by 65 on COMMA
   shift to 35 on LB
   shift to 36 on LPAR

State 207:
 ( 63)K decl_list       -> decl .[SEMI COMMA]

   reduce by 63 on SEMI
   reduce by 63 on COMMA

State 208:
 ( 69)K decl            -> COLON .const_expr[SEMI COMMA]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (157)  const_expr      -> .expr[SEMI COMMA]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 245 on const_expr
   goto 68 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 209:
 ( 85)K statement       -> expr SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 85 on STRING
   reduce by 85 on ICON
   reduce by 85 on FCON
   reduce by 85 on TYPE
   reduce by 85 on STRUCT
   reduce by 85 on ENUM
   reduce by 85 on RETURN
   reduce by 85 on GOTO
   reduce by 85 on IF
   reduce by 85 on SWITCH
   reduce by 85 on CASE
   reduce by 85 on DEFAULT
   reduce by 85 on BREAK
   reduce by 85 on CONTINUE
   reduce by 85 on WHILE
   reduce by 85 on DO
   reduce by 85 on FOR
   reduce by 85 on TRYSTMT
   reduce by 85 on THROW
   reduce by 85 on LC
   reduce by 85 on RC
   reduce by 85 on SEMI
   reduce by 85 on AND
   reduce by 85 on MINUS
   reduce by 85 on STAR
   reduce by 85 on SIZEOF
   reduce by 85 on UNOP
   reduce by 85 on INCOP
   reduce by 85 on LPAR
   reduce by 85 on CLASS
   reduce by 85 on NAME
   reduce by 85 on ELSE

State 210:
 ( 86)K statement       -> RETURN SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 86 on STRING
   reduce by 86 on ICON
   reduce by 86 on FCON
   reduce by 86 on TYPE
   reduce by 86 on STRUCT
   reduce by 86 on ENUM
   reduce by 86 on RETURN
   reduce by 86 on GOTO
   reduce by 86 on IF
   reduce by 86 on SWITCH
   reduce by 86 on CASE
   reduce by 86 on DEFAULT
   reduce by 86 on BREAK
   reduce by 86 on CONTINUE
   reduce by 86 on WHILE
   reduce by 86 on DO
   reduce by 86 on FOR
   reduce by 86 on TRYSTMT
   reduce by 86 on THROW
   reduce by 86 on LC
   reduce by 86 on RC
   reduce by 86 on SEMI
   reduce by 86 on AND
   reduce by 86 on MINUS
   reduce by 86 on STAR
   reduce by 86 on SIZEOF
   reduce by 86 on UNOP
   reduce by 86 on INCOP
   reduce by 86 on LPAR
   reduce by 86 on CLASS
   reduce by 86 on NAME
   reduce by 86 on ELSE

State 211:
 ( 87)K statement       -> RETURN expr .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (132)K expr            -> expr .COMMA non_comma_expr[SEMI COMMA]

   shift to 246 on SEMI
   shift to 117 on COMMA

State 212:
 ( 88)K statement       -> GOTO target .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 247 on SEMI

State 213:
 (108)K target          -> NAME .[SEMI]

   reduce by 108 on SEMI

State 214:
 ( 89)K statement       -> target COLON .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 140 on RETURN
   shift to 141 on GOTO
   shift to 143 on IF
   shift to 149 on SWITCH
   shift to 150 on CASE
   shift to 151 on DEFAULT
   shift to 147 on BREAK
   shift to 148 on CONTINUE
   shift to 144 on WHILE
   shift to 145 on DO
   shift to 146 on FOR
   shift to 153 on TRYSTMT
   shift to 152 on THROW
   shift to 37 on LC
   shift to 137 on SEMI
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 154 on NAME
   goto 138 on compound_stmt
   goto 248 on statement
   goto 139 on expr
   goto 142 on target
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 215:
 ( 90)K statement       -> IF LPAR .test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)K statement       -> IF LPAR .test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (109)  test            -> .[RPAR]
 (110)  test            -> .expr[RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   reduce by 109 on RPAR
   shift to 59 on NAME
   goto 250 on expr
   goto 249 on test
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 216:
 ( 92)K statement       -> WHILE LPAR .test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (109)  test            -> .[RPAR]
 (110)  test            -> .expr[RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   reduce by 109 on RPAR
   shift to 59 on NAME
   goto 250 on expr
   goto 251 on test
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 217:
 ( 93)K statement       -> DO statement .WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 252 on WHILE

State 218:
 ( 94)K statement       -> FOR LPAR .opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (155)  opt_expr        -> .[SEMI]
 (156)  opt_expr        -> .expr[SEMI]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   reduce by 155 on SEMI
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 254 on expr
   goto 253 on opt_expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 219:
 ( 95)K statement       -> BREAK SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 95 on STRING
   reduce by 95 on ICON
   reduce by 95 on FCON
   reduce by 95 on TYPE
   reduce by 95 on STRUCT
   reduce by 95 on ENUM
   reduce by 95 on RETURN
   reduce by 95 on GOTO
   reduce by 95 on IF
   reduce by 95 on SWITCH
   reduce by 95 on CASE
   reduce by 95 on DEFAULT
   reduce by 95 on BREAK
   reduce by 95 on CONTINUE
   reduce by 95 on WHILE
   reduce by 95 on DO
   reduce by 95 on FOR
   reduce by 95 on TRYSTMT
   reduce by 95 on THROW
   reduce by 95 on LC
   reduce by 95 on RC
   reduce by 95 on SEMI
   reduce by 95 on AND
   reduce by 95 on MINUS
   reduce by 95 on STAR
   reduce by 95 on SIZEOF
   reduce by 95 on UNOP
   reduce by 95 on INCOP
   reduce by 95 on LPAR
   reduce by 95 on CLASS
   reduce by 95 on NAME
   reduce by 95 on ELSE

State 220:
 ( 96)K statement       -> CONTINUE SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 96 on STRING
   reduce by 96 on ICON
   reduce by 96 on FCON
   reduce by 96 on TYPE
   reduce by 96 on STRUCT
   reduce by 96 on ENUM
   reduce by 96 on RETURN
   reduce by 96 on GOTO
   reduce by 96 on IF
   reduce by 96 on SWITCH
   reduce by 96 on CASE
   reduce by 96 on DEFAULT
   reduce by 96 on BREAK
   reduce by 96 on CONTINUE
   reduce by 96 on WHILE
   reduce by 96 on DO
   reduce by 96 on FOR
   reduce by 96 on TRYSTMT
   reduce by 96 on THROW
   reduce by 96 on LC
   reduce by 96 on RC
   reduce by 96 on SEMI
   reduce by 96 on AND
   reduce by 96 on MINUS
   reduce by 96 on STAR
   reduce by 96 on SIZEOF
   reduce by 96 on UNOP
   reduce by 96 on INCOP
   reduce by 96 on LPAR
   reduce by 96 on CLASS
   reduce by 96 on NAME
   reduce by 96 on ELSE

State 221:
 ( 97)K statement       -> SWITCH LPAR .expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 255 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 222:
 ( 98)K statement       -> CASE const_expr .COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 256 on COLON

State 223:
 ( 99)K statement       -> DEFAULT COLON .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 99 on STRING
   reduce by 99 on ICON
   reduce by 99 on FCON
   reduce by 99 on TYPE
   reduce by 99 on STRUCT
   reduce by 99 on ENUM
   reduce by 99 on RETURN
   reduce by 99 on GOTO
   reduce by 99 on IF
   reduce by 99 on SWITCH
   reduce by 99 on CASE
   reduce by 99 on DEFAULT
   reduce by 99 on BREAK
   reduce by 99 on CONTINUE
   reduce by 99 on WHILE
   reduce by 99 on DO
   reduce by 99 on FOR
   reduce by 99 on TRYSTMT
   reduce by 99 on THROW
   reduce by 99 on LC
   reduce by 99 on RC
   reduce by 99 on SEMI
   reduce by 99 on AND
   reduce by 99 on MINUS
   reduce by 99 on STAR
   reduce by 99 on SIZEOF
   reduce by 99 on UNOP
   reduce by 99 on INCOP
   reduce by 99 on LPAR
   reduce by 99 on CLASS
   reduce by 99 on NAME
   reduce by 99 on ELSE

State 224:
 (100)K statement       -> THROW expr .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (132)K expr            -> expr .COMMA non_comma_expr[SEMI COMMA]

   shift to 257 on SEMI
   shift to 117 on COMMA

State 225:
 (101)K statement       -> TRYSTMT compound_stmt .handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (102)  handler_list    -> .exception_handler[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (103)  handler_list    -> .handler_list exception_handler[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (104)  exception_handler -> .CATCH LPAR catch_type RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 260 on CATCH
   goto 258 on handler_list
   goto 259 on exception_handler

State 226:
 (159)K initializer     -> LC initializer_list RC .[RC SEMI COMMA]

   reduce by 159 on RC
   reduce by 159 on SEMI
   reduce by 159 on COMMA

State 227:
 (161)K initializer_list -> initializer_list COMMA .initializer[RC COMMA]
 (111)  unary           -> .LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[RC COMMA]
 (133)  expr            -> .non_comma_expr[RC COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[RC COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[RC COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[RC COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (158)  initializer     -> .expr[RC COMMA]
 (159)  initializer     -> .LC initializer_list RC[RC COMMA]
 (162)  string_const    -> .STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 80 on LC
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 261 on initializer
   goto 79 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 228:
 ( 40)K var_list        -> var_list COMMA param_declaration .[COMMA RPAR]

   reduce by 40 on COMMA
   reduce by 40 on RPAR

State 229:
 ( 51)K abs_decl        -> abs_decl LB .RB[COMMA LB RPAR]
 ( 52)K abs_decl        -> abs_decl LB .const_expr RB[COMMA LB RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RB]
 (133)  expr            -> .non_comma_expr[COMMA RB]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RB]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RB]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RB]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RB]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB]
 (157)  const_expr      -> .expr[RB]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 262 on RB
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 263 on const_expr
   goto 68 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 230:
 ( 50)K abs_decl        -> STAR abs_decl .[COMMA LB RPAR]
 ( 51)K abs_decl        -> abs_decl .LB RB[COMMA LB RPAR]
 ( 52)K abs_decl        -> abs_decl .LB const_expr RB[COMMA LB RPAR]

   reduce by 50 on COMMA
   shift to 229 on LB
   reduce by 50 on RPAR

warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 50 (prec=13).
State 231:
 ( 49)K abs_decl        -> LPAR abs_decl .RPAR LPAR RPAR[COMMA LB RPAR]
 ( 51)K abs_decl        -> abs_decl .LB RB[LB RPAR]
 ( 52)K abs_decl        -> abs_decl .LB const_expr RB[LB RPAR]
 ( 53)K abs_decl        -> LPAR abs_decl .RPAR[COMMA LB RPAR]

   shift to 229 on LB
   shift to 264 on RPAR

State 232:
 ( 38)K name_list       -> name_list COMMA name .[COMMA RPAR]

   reduce by 38 on COMMA
   reduce by 38 on RPAR

State 233:
 (119)K unary           -> LPAR abstract_decl RPAR unary .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)K unary           -> unary .INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)K unary           -> unary .LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)K unary           -> unary .STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)K unary           -> unary .LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)K unary           -> unary .LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 119 on RC
   reduce by 119 on SEMI
   reduce by 119 on COMMA
   reduce by 119 on EQUAL
   reduce by 119 on ASSIGNOP
   reduce by 119 on QUEST
   reduce by 119 on COLON
   reduce by 119 on OROR
   reduce by 119 on ANDAND
   reduce by 119 on OR
   reduce by 119 on XOR
   reduce by 119 on AND
   reduce by 119 on EQUOP
   reduce by 119 on RELOP
   reduce by 119 on SHIFTOP
   reduce by 119 on PLUS
   reduce by 119 on MINUS
   reduce by 119 on STAR
   reduce by 119 on DIVOP
   shift to 110 on INCOP
   shift to 111 on LB
   reduce by 119 on RB
   shift to 113 on LPAR
   reduce by 119 on RPAR
   shift to 112 on STRUCTOP

warning --- Shift/reduce conflict on INCOP (prec=14, right assoc). Choose shift instead of reduce by prod 119 (prec=14).
warning --- Shift/reduce conflict on LB (prec=15, left assoc). Choose shift instead of reduce by prod 119 (prec=14).
warning --- Shift/reduce conflict on STRUCTOP (prec=15, left assoc). Choose shift instead of reduce by prod 119 (prec=14).
warning --- Shift/reduce conflict on LPAR (prec=15, left assoc). Choose shift instead of reduce by prod 119 (prec=14).
State 234:
 (116)K unary           -> SIZEOF LPAR string_const RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 116 on RC
   reduce by 116 on SEMI
   reduce by 116 on COMMA
   reduce by 116 on EQUAL
   reduce by 116 on ASSIGNOP
   reduce by 116 on QUEST
   reduce by 116 on COLON
   reduce by 116 on OROR
   reduce by 116 on ANDAND
   reduce by 116 on OR
   reduce by 116 on XOR
   reduce by 116 on AND
   reduce by 116 on EQUOP
   reduce by 116 on RELOP
   reduce by 116 on SHIFTOP
   reduce by 116 on PLUS
   reduce by 116 on MINUS
   reduce by 116 on STAR
   reduce by 116 on DIVOP
   reduce by 116 on INCOP
   reduce by 116 on LB
   reduce by 116 on RB
   reduce by 116 on LPAR
   reduce by 116 on RPAR
   reduce by 116 on STRUCTOP

State 235:
 (117)K unary           -> SIZEOF LPAR expr RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 117 on RC
   reduce by 117 on SEMI
   reduce by 117 on COMMA
   reduce by 117 on EQUAL
   reduce by 117 on ASSIGNOP
   reduce by 117 on QUEST
   reduce by 117 on COLON
   reduce by 117 on OROR
   reduce by 117 on ANDAND
   reduce by 117 on OR
   reduce by 117 on XOR
   reduce by 117 on AND
   reduce by 117 on EQUOP
   reduce by 117 on RELOP
   reduce by 117 on SHIFTOP
   reduce by 117 on PLUS
   reduce by 117 on MINUS
   reduce by 117 on STAR
   reduce by 117 on DIVOP
   reduce by 117 on INCOP
   reduce by 117 on LB
   reduce by 117 on RB
   reduce by 117 on LPAR
   reduce by 117 on RPAR
   reduce by 117 on STRUCTOP

State 236:
 (118)K unary           -> SIZEOF LPAR abstract_decl RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 118 on RC
   reduce by 118 on SEMI
   reduce by 118 on COMMA
   reduce by 118 on EQUAL
   reduce by 118 on ASSIGNOP
   reduce by 118 on QUEST
   reduce by 118 on COLON
   reduce by 118 on OROR
   reduce by 118 on ANDAND
   reduce by 118 on OR
   reduce by 118 on XOR
   reduce by 118 on AND
   reduce by 118 on EQUOP
   reduce by 118 on RELOP
   reduce by 118 on SHIFTOP
   reduce by 118 on PLUS
   reduce by 118 on MINUS
   reduce by 118 on STAR
   reduce by 118 on DIVOP
   reduce by 118 on INCOP
   reduce by 118 on LB
   reduce by 118 on RB
   reduce by 118 on LPAR
   reduce by 118 on RPAR
   reduce by 118 on STRUCTOP

State 237:
 (126)K unary           -> unary LB expr RB .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 126 on RC
   reduce by 126 on SEMI
   reduce by 126 on COMMA
   reduce by 126 on EQUAL
   reduce by 126 on ASSIGNOP
   reduce by 126 on QUEST
   reduce by 126 on COLON
   reduce by 126 on OROR
   reduce by 126 on ANDAND
   reduce by 126 on OR
   reduce by 126 on XOR
   reduce by 126 on AND
   reduce by 126 on EQUOP
   reduce by 126 on RELOP
   reduce by 126 on SHIFTOP
   reduce by 126 on PLUS
   reduce by 126 on MINUS
   reduce by 126 on STAR
   reduce by 126 on DIVOP
   reduce by 126 on INCOP
   reduce by 126 on LB
   reduce by 126 on RB
   reduce by 126 on LPAR
   reduce by 126 on RPAR
   reduce by 126 on STRUCTOP

State 238:
 (128)K unary           -> unary LPAR args RPAR .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   reduce by 128 on RC
   reduce by 128 on SEMI
   reduce by 128 on COMMA
   reduce by 128 on EQUAL
   reduce by 128 on ASSIGNOP
   reduce by 128 on QUEST
   reduce by 128 on COLON
   reduce by 128 on OROR
   reduce by 128 on ANDAND
   reduce by 128 on OR
   reduce by 128 on XOR
   reduce by 128 on AND
   reduce by 128 on EQUOP
   reduce by 128 on RELOP
   reduce by 128 on SHIFTOP
   reduce by 128 on PLUS
   reduce by 128 on MINUS
   reduce by 128 on STAR
   reduce by 128 on DIVOP
   reduce by 128 on INCOP
   reduce by 128 on LB
   reduce by 128 on RB
   reduce by 128 on LPAR
   reduce by 128 on RPAR
   reduce by 128 on STRUCTOP

State 239:
 (131)K args            -> non_comma_expr COMMA .args[RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (130)  args            -> .non_comma_expr[RPAR]
 (131)  args            -> .non_comma_expr COMMA args[RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 265 on args
   goto 186 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 240:
 (134)K non_comma_expr  -> non_comma_expr QUEST non_comma_expr COLON .non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (111)  unary           -> .LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (137)  non_comma_expr  -> .or_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (138)  or_expr         -> .or_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (139)  or_list         -> .or_list OROR and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (140)  or_list         -> .and_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (141)  and_expr        -> .and_list[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR RB RPAR]
 (142)  and_list        -> .and_list ANDAND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (143)  and_list        -> .binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND RB RPAR]
 (144)  binary          -> .binary RELOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (145)  binary          -> .binary EQUOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (146)  binary          -> .binary STAR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (147)  binary          -> .binary DIVOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (148)  binary          -> .binary SHIFTOP binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (149)  binary          -> .binary AND binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (150)  binary          -> .binary XOR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (151)  binary          -> .binary OR binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (152)  binary          -> .binary PLUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (153)  binary          -> .binary MINUS binary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (154)  binary          -> .unary[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RB RPAR]
 (162)  string_const    -> .STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB RB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 64 on unary
   goto 60 on string_const
   goto 266 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 241:
 ( 61)K def             -> specifiers decl_list SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME]

   reduce by 61 on STRING
   reduce by 61 on ICON
   reduce by 61 on FCON
   reduce by 61 on TYPE
   reduce by 61 on STRUCT
   reduce by 61 on ENUM
   reduce by 61 on RETURN
   reduce by 61 on GOTO
   reduce by 61 on IF
   reduce by 61 on SWITCH
   reduce by 61 on CASE
   reduce by 61 on DEFAULT
   reduce by 61 on BREAK
   reduce by 61 on CONTINUE
   reduce by 61 on WHILE
   reduce by 61 on DO
   reduce by 61 on FOR
   reduce by 61 on TRYSTMT
   reduce by 61 on THROW
   reduce by 61 on LC
   reduce by 61 on RC
   reduce by 61 on SEMI
   reduce by 61 on AND
   reduce by 61 on MINUS
   reduce by 61 on STAR
   reduce by 61 on SIZEOF
   reduce by 61 on UNOP
   reduce by 61 on INCOP
   reduce by 61 on LPAR
   reduce by 61 on CLASS
   reduce by 61 on NAME

State 242:
 ( 64)K decl_list       -> decl_list COMMA .decl[SEMI COMMA]
 ( 22)  var_decl        -> .name[SEMI COMMA EQUAL COLON LB LPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 25)  var_decl        -> .var_decl LB RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[SEMI COMMA EQUAL COLON LB LPAR]
 ( 27)  var_decl        -> .STAR var_decl[SEMI COMMA EQUAL COLON LB LPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[SEMI COMMA EQUAL COLON LB LPAR]
 ( 29)  funct_decl      -> .STAR funct_decl[SEMI COMMA LB LPAR]
 ( 30)  funct_decl      -> .funct_decl LB RB[SEMI COMMA LB LPAR]
 ( 31)  funct_decl      -> .funct_decl LB const_expr RB[SEMI COMMA LB LPAR]
 ( 32)  funct_decl      -> .LPAR funct_decl RPAR[SEMI COMMA LB LPAR]
 ( 33)  funct_decl      -> .funct_decl LPAR RPAR[SEMI COMMA LB LPAR]
 ( 34)  funct_decl      -> .name LPAR RPAR[SEMI COMMA LB LPAR]
 ( 35)  funct_decl      -> .name LPAR name_list RPAR[SEMI COMMA LB LPAR]
 ( 36)  funct_decl      -> .name LPAR var_list RPAR[SEMI COMMA LB LPAR]
 ( 65)  decl            -> .funct_decl[SEMI COMMA]
 ( 66)  decl            -> .var_decl[SEMI COMMA]
 ( 67)  decl            -> .var_decl EQUAL initializer[SEMI COMMA]
 ( 68)  decl            -> .var_decl COLON const_expr[SEMI COMMA]
 ( 69)  decl            -> .COLON const_expr[SEMI COMMA]
 (164)  name            -> .NAME[SEMI COMMA EQUAL COLON LB LPAR]

   shift to 208 on COLON
   shift to 21 on STAR
   shift to 22 on LPAR
   shift to 23 on NAME
   goto 206 on funct_decl
   goto 205 on var_decl
   goto 20 on name
   goto 267 on decl

State 243:
 ( 67)K decl            -> var_decl EQUAL .initializer[SEMI COMMA]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (158)  initializer     -> .expr[SEMI COMMA]
 (159)  initializer     -> .LC initializer_list RC[SEMI COMMA]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 80 on LC
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 268 on initializer
   goto 79 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 244:
 ( 68)K decl            -> var_decl COLON .const_expr[SEMI COMMA]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (157)  const_expr      -> .expr[SEMI COMMA]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 269 on const_expr
   goto 68 on expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 245:
 ( 69)K decl            -> COLON const_expr .[SEMI COMMA]

   reduce by 69 on SEMI
   reduce by 69 on COMMA

State 246:
 ( 87)K statement       -> RETURN expr SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 87 on STRING
   reduce by 87 on ICON
   reduce by 87 on FCON
   reduce by 87 on TYPE
   reduce by 87 on STRUCT
   reduce by 87 on ENUM
   reduce by 87 on RETURN
   reduce by 87 on GOTO
   reduce by 87 on IF
   reduce by 87 on SWITCH
   reduce by 87 on CASE
   reduce by 87 on DEFAULT
   reduce by 87 on BREAK
   reduce by 87 on CONTINUE
   reduce by 87 on WHILE
   reduce by 87 on DO
   reduce by 87 on FOR
   reduce by 87 on TRYSTMT
   reduce by 87 on THROW
   reduce by 87 on LC
   reduce by 87 on RC
   reduce by 87 on SEMI
   reduce by 87 on AND
   reduce by 87 on MINUS
   reduce by 87 on STAR
   reduce by 87 on SIZEOF
   reduce by 87 on UNOP
   reduce by 87 on INCOP
   reduce by 87 on LPAR
   reduce by 87 on CLASS
   reduce by 87 on NAME
   reduce by 87 on ELSE

State 247:
 ( 88)K statement       -> GOTO target SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 88 on STRING
   reduce by 88 on ICON
   reduce by 88 on FCON
   reduce by 88 on TYPE
   reduce by 88 on STRUCT
   reduce by 88 on ENUM
   reduce by 88 on RETURN
   reduce by 88 on GOTO
   reduce by 88 on IF
   reduce by 88 on SWITCH
   reduce by 88 on CASE
   reduce by 88 on DEFAULT
   reduce by 88 on BREAK
   reduce by 88 on CONTINUE
   reduce by 88 on WHILE
   reduce by 88 on DO
   reduce by 88 on FOR
   reduce by 88 on TRYSTMT
   reduce by 88 on THROW
   reduce by 88 on LC
   reduce by 88 on RC
   reduce by 88 on SEMI
   reduce by 88 on AND
   reduce by 88 on MINUS
   reduce by 88 on STAR
   reduce by 88 on SIZEOF
   reduce by 88 on UNOP
   reduce by 88 on INCOP
   reduce by 88 on LPAR
   reduce by 88 on CLASS
   reduce by 88 on NAME
   reduce by 88 on ELSE

State 248:
 ( 89)K statement       -> target COLON statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 89 on STRING
   reduce by 89 on ICON
   reduce by 89 on FCON
   reduce by 89 on TYPE
   reduce by 89 on STRUCT
   reduce by 89 on ENUM
   reduce by 89 on RETURN
   reduce by 89 on GOTO
   reduce by 89 on IF
   reduce by 89 on SWITCH
   reduce by 89 on CASE
   reduce by 89 on DEFAULT
   reduce by 89 on BREAK
   reduce by 89 on CONTINUE
   reduce by 89 on WHILE
   reduce by 89 on DO
   reduce by 89 on FOR
   reduce by 89 on TRYSTMT
   reduce by 89 on THROW
   reduce by 89 on LC
   reduce by 89 on RC
   reduce by 89 on SEMI
   reduce by 89 on AND
   reduce by 89 on MINUS
   reduce by 89 on STAR
   reduce by 89 on SIZEOF
   reduce by 89 on UNOP
   reduce by 89 on INCOP
   reduce by 89 on LPAR
   reduce by 89 on CLASS
   reduce by 89 on NAME
   reduce by 89 on ELSE

State 249:
 ( 90)K statement       -> IF LPAR test .RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)K statement       -> IF LPAR test .RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 270 on RPAR

State 250:
 (110)K test            -> expr .[SEMI RPAR]
 (132)K expr            -> expr .COMMA non_comma_expr[SEMI COMMA RPAR]

   reduce by 110 on SEMI
   shift to 117 on COMMA
   reduce by 110 on RPAR

State 251:
 ( 92)K statement       -> WHILE LPAR test .RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 271 on RPAR

State 252:
 ( 93)K statement       -> DO statement WHILE .LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 272 on LPAR

State 253:
 ( 94)K statement       -> FOR LPAR opt_expr .SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 273 on SEMI

State 254:
 (132)K expr            -> expr .COMMA non_comma_expr[SEMI COMMA RPAR]
 (156)K opt_expr        -> expr .[SEMI RPAR]

   reduce by 156 on SEMI
   shift to 117 on COMMA
   reduce by 156 on RPAR

State 255:
 ( 97)K statement       -> SWITCH LPAR expr .RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (132)K expr            -> expr .COMMA non_comma_expr[COMMA RPAR]

   shift to 117 on COMMA
   shift to 274 on RPAR

State 256:
 ( 98)K statement       -> CASE const_expr COLON .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 98 on STRING
   reduce by 98 on ICON
   reduce by 98 on FCON
   reduce by 98 on TYPE
   reduce by 98 on STRUCT
   reduce by 98 on ENUM
   reduce by 98 on RETURN
   reduce by 98 on GOTO
   reduce by 98 on IF
   reduce by 98 on SWITCH
   reduce by 98 on CASE
   reduce by 98 on DEFAULT
   reduce by 98 on BREAK
   reduce by 98 on CONTINUE
   reduce by 98 on WHILE
   reduce by 98 on DO
   reduce by 98 on FOR
   reduce by 98 on TRYSTMT
   reduce by 98 on THROW
   reduce by 98 on LC
   reduce by 98 on RC
   reduce by 98 on SEMI
   reduce by 98 on AND
   reduce by 98 on MINUS
   reduce by 98 on STAR
   reduce by 98 on SIZEOF
   reduce by 98 on UNOP
   reduce by 98 on INCOP
   reduce by 98 on LPAR
   reduce by 98 on CLASS
   reduce by 98 on NAME
   reduce by 98 on ELSE

State 257:
 (100)K statement       -> THROW expr SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 100 on STRING
   reduce by 100 on ICON
   reduce by 100 on FCON
   reduce by 100 on TYPE
   reduce by 100 on STRUCT
   reduce by 100 on ENUM
   reduce by 100 on RETURN
   reduce by 100 on GOTO
   reduce by 100 on IF
   reduce by 100 on SWITCH
   reduce by 100 on CASE
   reduce by 100 on DEFAULT
   reduce by 100 on BREAK
   reduce by 100 on CONTINUE
   reduce by 100 on WHILE
   reduce by 100 on DO
   reduce by 100 on FOR
   reduce by 100 on TRYSTMT
   reduce by 100 on THROW
   reduce by 100 on LC
   reduce by 100 on RC
   reduce by 100 on SEMI
   reduce by 100 on AND
   reduce by 100 on MINUS
   reduce by 100 on STAR
   reduce by 100 on SIZEOF
   reduce by 100 on UNOP
   reduce by 100 on INCOP
   reduce by 100 on LPAR
   reduce by 100 on CLASS
   reduce by 100 on NAME
   reduce by 100 on ELSE

State 258:
 (101)K statement       -> TRYSTMT compound_stmt handler_list .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (103)K handler_list    -> handler_list .exception_handler[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (104)  exception_handler -> .CATCH LPAR catch_type RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 101 on STRING
   reduce by 101 on ICON
   reduce by 101 on FCON
   reduce by 101 on TYPE
   reduce by 101 on STRUCT
   reduce by 101 on ENUM
   reduce by 101 on RETURN
   reduce by 101 on GOTO
   reduce by 101 on IF
   reduce by 101 on SWITCH
   reduce by 101 on CASE
   reduce by 101 on DEFAULT
   reduce by 101 on BREAK
   reduce by 101 on CONTINUE
   reduce by 101 on WHILE
   reduce by 101 on DO
   reduce by 101 on FOR
   reduce by 101 on TRYSTMT
   shift to 260 on CATCH
   reduce by 101 on THROW
   reduce by 101 on LC
   reduce by 101 on RC
   reduce by 101 on SEMI
   reduce by 101 on AND
   reduce by 101 on MINUS
   reduce by 101 on STAR
   reduce by 101 on SIZEOF
   reduce by 101 on UNOP
   reduce by 101 on INCOP
   reduce by 101 on LPAR
   reduce by 101 on CLASS
   reduce by 101 on NAME
   reduce by 101 on ELSE
   goto 275 on exception_handler

State 259:
 (102)K handler_list    -> exception_handler .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 102 on STRING
   reduce by 102 on ICON
   reduce by 102 on FCON
   reduce by 102 on TYPE
   reduce by 102 on STRUCT
   reduce by 102 on ENUM
   reduce by 102 on RETURN
   reduce by 102 on GOTO
   reduce by 102 on IF
   reduce by 102 on SWITCH
   reduce by 102 on CASE
   reduce by 102 on DEFAULT
   reduce by 102 on BREAK
   reduce by 102 on CONTINUE
   reduce by 102 on WHILE
   reduce by 102 on DO
   reduce by 102 on FOR
   reduce by 102 on TRYSTMT
   reduce by 102 on CATCH
   reduce by 102 on THROW
   reduce by 102 on LC
   reduce by 102 on RC
   reduce by 102 on SEMI
   reduce by 102 on AND
   reduce by 102 on MINUS
   reduce by 102 on STAR
   reduce by 102 on SIZEOF
   reduce by 102 on UNOP
   reduce by 102 on INCOP
   reduce by 102 on LPAR
   reduce by 102 on CLASS
   reduce by 102 on NAME
   reduce by 102 on ELSE

State 260:
 (104)K exception_handler -> CATCH .LPAR catch_type RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 276 on LPAR

State 261:
 (161)K initializer_list -> initializer_list COMMA initializer .[RC COMMA]

   reduce by 161 on RC
   reduce by 161 on COMMA

State 262:
 ( 51)K abs_decl        -> abs_decl LB RB .[COMMA LB RPAR]

   reduce by 51 on COMMA
   reduce by 51 on LB
   reduce by 51 on RPAR

State 263:
 ( 52)K abs_decl        -> abs_decl LB const_expr .RB[COMMA LB RPAR]

   shift to 277 on RB

State 264:
 ( 49)K abs_decl        -> LPAR abs_decl RPAR .LPAR RPAR[COMMA LB RPAR]
 ( 53)K abs_decl        -> LPAR abs_decl RPAR .[COMMA LB RPAR]

   reduce by 53 on COMMA
   reduce by 53 on LB
   shift to 278 on LPAR
   reduce by 53 on RPAR

State 265:
 (131)K args            -> non_comma_expr COMMA args .[RPAR]

   reduce by 131 on RPAR

State 266:
 (134)K non_comma_expr  -> non_comma_expr .QUEST non_comma_expr COLON non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (134)K non_comma_expr  -> non_comma_expr QUEST non_comma_expr COLON non_comma_expr .[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (135)K non_comma_expr  -> non_comma_expr .ASSIGNOP non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]
 (136)K non_comma_expr  -> non_comma_expr .EQUAL non_comma_expr[RC SEMI COMMA EQUAL ASSIGNOP QUEST COLON RB RPAR]

   reduce by 134 on RC
   reduce by 134 on SEMI
   reduce by 134 on COMMA
   reduce by 134 on EQUAL
   reduce by 134 on ASSIGNOP
   shift to 118 on QUEST
   reduce by 134 on COLON
   reduce by 134 on RB
   reduce by 134 on RPAR

warning --- Shift/reduce conflict on QUEST (prec=3, right assoc). Choose shift instead of reduce by prod 134 (prec=3).
warning --- Shift/reduce conflict on ASSIGNOP (prec=2, right assoc). Choose reduce by prod 134 (prec=3).
warning --- Shift/reduce conflict on EQUAL (prec=2, right assoc). Choose reduce by prod 134 (prec=3).
State 267:
 ( 64)K decl_list       -> decl_list COMMA decl .[SEMI COMMA]

   reduce by 64 on SEMI
   reduce by 64 on COMMA

State 268:
 ( 67)K decl            -> var_decl EQUAL initializer .[SEMI COMMA]

   reduce by 67 on SEMI
   reduce by 67 on COMMA

State 269:
 ( 68)K decl            -> var_decl COLON const_expr .[SEMI COMMA]

   reduce by 68 on SEMI
   reduce by 68 on COMMA

State 270:
 ( 90)K statement       -> IF LPAR test RPAR .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)K statement       -> IF LPAR test RPAR .statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 140 on RETURN
   shift to 141 on GOTO
   shift to 143 on IF
   shift to 149 on SWITCH
   shift to 150 on CASE
   shift to 151 on DEFAULT
   shift to 147 on BREAK
   shift to 148 on CONTINUE
   shift to 144 on WHILE
   shift to 145 on DO
   shift to 146 on FOR
   shift to 153 on TRYSTMT
   shift to 152 on THROW
   shift to 37 on LC
   shift to 137 on SEMI
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 154 on NAME
   goto 138 on compound_stmt
   goto 279 on statement
   goto 139 on expr
   goto 142 on target
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 271:
 ( 92)K statement       -> WHILE LPAR test RPAR .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 140 on RETURN
   shift to 141 on GOTO
   shift to 143 on IF
   shift to 149 on SWITCH
   shift to 150 on CASE
   shift to 151 on DEFAULT
   shift to 147 on BREAK
   shift to 148 on CONTINUE
   shift to 144 on WHILE
   shift to 145 on DO
   shift to 146 on FOR
   shift to 153 on TRYSTMT
   shift to 152 on THROW
   shift to 37 on LC
   shift to 137 on SEMI
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 154 on NAME
   goto 138 on compound_stmt
   goto 280 on statement
   goto 139 on expr
   goto 142 on target
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 272:
 ( 93)K statement       -> DO statement WHILE LPAR .test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (109)  test            -> .[RPAR]
 (110)  test            -> .expr[RPAR]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   reduce by 109 on RPAR
   shift to 59 on NAME
   goto 250 on expr
   goto 281 on test
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 273:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI .test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (109)  test            -> .[SEMI]
 (110)  test            -> .expr[SEMI]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   reduce by 109 on SEMI
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 59 on NAME
   goto 250 on expr
   goto 282 on test
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 274:
 ( 97)K statement       -> SWITCH LPAR expr RPAR .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 37 on LC
   goto 283 on compound_stmt

State 275:
 (103)K handler_list    -> handler_list exception_handler .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 103 on STRING
   reduce by 103 on ICON
   reduce by 103 on FCON
   reduce by 103 on TYPE
   reduce by 103 on STRUCT
   reduce by 103 on ENUM
   reduce by 103 on RETURN
   reduce by 103 on GOTO
   reduce by 103 on IF
   reduce by 103 on SWITCH
   reduce by 103 on CASE
   reduce by 103 on DEFAULT
   reduce by 103 on BREAK
   reduce by 103 on CONTINUE
   reduce by 103 on WHILE
   reduce by 103 on DO
   reduce by 103 on FOR
   reduce by 103 on TRYSTMT
   reduce by 103 on CATCH
   reduce by 103 on THROW
   reduce by 103 on LC
   reduce by 103 on RC
   reduce by 103 on SEMI
   reduce by 103 on AND
   reduce by 103 on MINUS
   reduce by 103 on STAR
   reduce by 103 on SIZEOF
   reduce by 103 on UNOP
   reduce by 103 on INCOP
   reduce by 103 on LPAR
   reduce by 103 on CLASS
   reduce by 103 on NAME
   reduce by 103 on ELSE

State 276:
 (104)K exception_handler -> CATCH LPAR .catch_type RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 44)  type            -> .type_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 45)  type            -> .type type_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 (105)  catch_type      -> .ELLIPSIS[RPAR]
 (106)  catch_type      -> .type var_decl[RPAR]
 (107)  catch_type      -> .type[RPAR]

   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 286 on ELLIPSIS
   goto 87 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 285 on type
   goto 13 on enum
   goto 284 on catch_type

State 277:
 ( 52)K abs_decl        -> abs_decl LB const_expr RB .[COMMA LB RPAR]

   reduce by 52 on COMMA
   reduce by 52 on LB
   reduce by 52 on RPAR

State 278:
 ( 49)K abs_decl        -> LPAR abs_decl RPAR LPAR .RPAR[COMMA LB RPAR]

   shift to 287 on RPAR

State 279:
 ( 90)K statement       -> IF LPAR test RPAR statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)K statement       -> IF LPAR test RPAR statement .ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 90 on STRING
   reduce by 90 on ICON
   reduce by 90 on FCON
   reduce by 90 on TYPE
   reduce by 90 on STRUCT
   reduce by 90 on ENUM
   reduce by 90 on RETURN
   reduce by 90 on GOTO
   reduce by 90 on IF
   reduce by 90 on SWITCH
   reduce by 90 on CASE
   reduce by 90 on DEFAULT
   reduce by 90 on BREAK
   reduce by 90 on CONTINUE
   reduce by 90 on WHILE
   reduce by 90 on DO
   reduce by 90 on FOR
   reduce by 90 on TRYSTMT
   reduce by 90 on THROW
   reduce by 90 on LC
   reduce by 90 on RC
   reduce by 90 on SEMI
   reduce by 90 on AND
   reduce by 90 on MINUS
   reduce by 90 on STAR
   reduce by 90 on SIZEOF
   reduce by 90 on UNOP
   reduce by 90 on INCOP
   reduce by 90 on LPAR
   reduce by 90 on CLASS
   reduce by 90 on NAME
   shift to 288 on ELSE

warning --- Shift/reduce conflict on ELSE (prec=20, non assoc). Choose shift instead of reduce by prod 90 (prec=15).
State 280:
 ( 92)K statement       -> WHILE LPAR test RPAR statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 92 on STRING
   reduce by 92 on ICON
   reduce by 92 on FCON
   reduce by 92 on TYPE
   reduce by 92 on STRUCT
   reduce by 92 on ENUM
   reduce by 92 on RETURN
   reduce by 92 on GOTO
   reduce by 92 on IF
   reduce by 92 on SWITCH
   reduce by 92 on CASE
   reduce by 92 on DEFAULT
   reduce by 92 on BREAK
   reduce by 92 on CONTINUE
   reduce by 92 on WHILE
   reduce by 92 on DO
   reduce by 92 on FOR
   reduce by 92 on TRYSTMT
   reduce by 92 on THROW
   reduce by 92 on LC
   reduce by 92 on RC
   reduce by 92 on SEMI
   reduce by 92 on AND
   reduce by 92 on MINUS
   reduce by 92 on STAR
   reduce by 92 on SIZEOF
   reduce by 92 on UNOP
   reduce by 92 on INCOP
   reduce by 92 on LPAR
   reduce by 92 on CLASS
   reduce by 92 on NAME
   reduce by 92 on ELSE

State 281:
 ( 93)K statement       -> DO statement WHILE LPAR test .RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 289 on RPAR

State 282:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI test .SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 290 on SEMI

State 283:
 ( 97)K statement       -> SWITCH LPAR expr RPAR compound_stmt .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 97 on STRING
   reduce by 97 on ICON
   reduce by 97 on FCON
   reduce by 97 on TYPE
   reduce by 97 on STRUCT
   reduce by 97 on ENUM
   reduce by 97 on RETURN
   reduce by 97 on GOTO
   reduce by 97 on IF
   reduce by 97 on SWITCH
   reduce by 97 on CASE
   reduce by 97 on DEFAULT
   reduce by 97 on BREAK
   reduce by 97 on CONTINUE
   reduce by 97 on WHILE
   reduce by 97 on DO
   reduce by 97 on FOR
   reduce by 97 on TRYSTMT
   reduce by 97 on THROW
   reduce by 97 on LC
   reduce by 97 on RC
   reduce by 97 on SEMI
   reduce by 97 on AND
   reduce by 97 on MINUS
   reduce by 97 on STAR
   reduce by 97 on SIZEOF
   reduce by 97 on UNOP
   reduce by 97 on INCOP
   reduce by 97 on LPAR
   reduce by 97 on CLASS
   reduce by 97 on NAME
   reduce by 97 on ELSE

State 284:
 (104)K exception_handler -> CATCH LPAR catch_type .RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 291 on RPAR

State 285:
 ( 45)K type            -> type .type_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 (106)K catch_type      -> type .var_decl[RPAR]
 (107)K catch_type      -> type .[RPAR]
 ( 14)  type_specifier  -> .TYPE[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 15)  type_specifier  -> .enum_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 16)  type_specifier  -> .struct_specifier[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 22)  var_decl        -> .name[LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[LB LPAR RPAR]
 ( 54)  struct_specifier -> .STRUCT opt_tag LC def_list RC[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 55)  struct_specifier -> .STRUCT tag[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 70)  enum_specifier  -> .enum name opt_enum_list[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 71)  enum_specifier  -> .enum LC enumerator_list RC[TYPE STRUCT ENUM STAR LPAR RPAR NAME]
 ( 74)  enum            -> .ENUM[LC NAME]
 (164)  name            -> .NAME[LB LPAR RPAR]

   shift to 9 on TYPE
   shift to 12 on STRUCT
   shift to 14 on ENUM
   shift to 293 on STAR
   shift to 294 on LPAR
   reduce by 107 on RPAR
   shift to 23 on NAME
   goto 160 on type_specifier
   goto 10 on enum_specifier
   goto 11 on struct_specifier
   goto 292 on var_decl
   goto 162 on name
   goto 13 on enum

State 286:
 (105)K catch_type      -> ELLIPSIS .[RPAR]

   reduce by 105 on RPAR

State 287:
 ( 49)K abs_decl        -> LPAR abs_decl RPAR LPAR RPAR .[COMMA LB RPAR]

   reduce by 49 on COMMA
   reduce by 49 on LB
   reduce by 49 on RPAR

State 288:
 ( 91)K statement       -> IF LPAR test RPAR statement ELSE .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 140 on RETURN
   shift to 141 on GOTO
   shift to 143 on IF
   shift to 149 on SWITCH
   shift to 150 on CASE
   shift to 151 on DEFAULT
   shift to 147 on BREAK
   shift to 148 on CONTINUE
   shift to 144 on WHILE
   shift to 145 on DO
   shift to 146 on FOR
   shift to 153 on TRYSTMT
   shift to 152 on THROW
   shift to 37 on LC
   shift to 137 on SEMI
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 154 on NAME
   goto 138 on compound_stmt
   goto 295 on statement
   goto 139 on expr
   goto 142 on target
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 289:
 ( 93)K statement       -> DO statement WHILE LPAR test RPAR .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 296 on SEMI

State 290:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI test SEMI .opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (111)  unary           -> .LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (112)  unary           -> .FCON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (113)  unary           -> .ICON[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (114)  unary           -> .NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (115)  unary           -> .string_const[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (124)  unary           -> .AND unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (125)  unary           -> .STAR unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[COMMA RPAR]
 (133)  expr            -> .non_comma_expr[COMMA RPAR]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (137)  non_comma_expr  -> .or_expr[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (138)  or_expr         -> .or_list[COMMA EQUAL ASSIGNOP QUEST RPAR]
 (139)  or_list         -> .or_list OROR and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (140)  or_list         -> .and_expr[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (141)  and_expr        -> .and_list[COMMA EQUAL ASSIGNOP QUEST OROR RPAR]
 (142)  and_list        -> .and_list ANDAND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (143)  and_list        -> .binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND RPAR]
 (144)  binary          -> .binary RELOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (145)  binary          -> .binary EQUOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (146)  binary          -> .binary STAR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (147)  binary          -> .binary DIVOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (148)  binary          -> .binary SHIFTOP binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (149)  binary          -> .binary AND binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (150)  binary          -> .binary XOR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (151)  binary          -> .binary OR binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (152)  binary          -> .binary PLUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (153)  binary          -> .binary MINUS binary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (154)  binary          -> .unary[COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP RPAR]
 (155)  opt_expr        -> .[RPAR]
 (156)  opt_expr        -> .expr[RPAR]
 (162)  string_const    -> .STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR RPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   reduce by 155 on RPAR
   shift to 59 on NAME
   goto 254 on expr
   goto 297 on opt_expr
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 291:
 (104)K exception_handler -> CATCH LPAR catch_type RPAR .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 37 on LC
   goto 298 on compound_stmt

State 292:
 ( 23)K var_decl        -> var_decl .LPAR RPAR[LB LPAR RPAR]
 ( 24)K var_decl        -> var_decl .LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)K var_decl        -> var_decl .LB RB[LB LPAR RPAR]
 ( 26)K var_decl        -> var_decl .LB const_expr RB[LB LPAR RPAR]
 (106)K catch_type      -> type var_decl .[RPAR]

   shift to 40 on LB
   shift to 39 on LPAR
   reduce by 106 on RPAR

State 293:
 ( 27)K var_decl        -> STAR .var_decl[LB LPAR RPAR]
 ( 22)  var_decl        -> .name[LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[LB LPAR RPAR]
 (164)  name            -> .NAME[LB LPAR RPAR]

   shift to 293 on STAR
   shift to 294 on LPAR
   shift to 23 on NAME
   goto 42 on var_decl
   goto 162 on name

State 294:
 ( 28)K var_decl        -> LPAR .var_decl RPAR[LB LPAR RPAR]
 ( 22)  var_decl        -> .name[LB LPAR RPAR]
 ( 23)  var_decl        -> .var_decl LPAR RPAR[LB LPAR RPAR]
 ( 24)  var_decl        -> .var_decl LPAR var_list RPAR[LB LPAR RPAR]
 ( 25)  var_decl        -> .var_decl LB RB[LB LPAR RPAR]
 ( 26)  var_decl        -> .var_decl LB const_expr RB[LB LPAR RPAR]
 ( 27)  var_decl        -> .STAR var_decl[LB LPAR RPAR]
 ( 28)  var_decl        -> .LPAR var_decl RPAR[LB LPAR RPAR]
 (164)  name            -> .NAME[LB LPAR RPAR]

   shift to 293 on STAR
   shift to 294 on LPAR
   shift to 23 on NAME
   goto 44 on var_decl
   goto 162 on name

State 295:
 ( 91)K statement       -> IF LPAR test RPAR statement ELSE statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 91 on STRING
   reduce by 91 on ICON
   reduce by 91 on FCON
   reduce by 91 on TYPE
   reduce by 91 on STRUCT
   reduce by 91 on ENUM
   reduce by 91 on RETURN
   reduce by 91 on GOTO
   reduce by 91 on IF
   reduce by 91 on SWITCH
   reduce by 91 on CASE
   reduce by 91 on DEFAULT
   reduce by 91 on BREAK
   reduce by 91 on CONTINUE
   reduce by 91 on WHILE
   reduce by 91 on DO
   reduce by 91 on FOR
   reduce by 91 on TRYSTMT
   reduce by 91 on THROW
   reduce by 91 on LC
   reduce by 91 on RC
   reduce by 91 on SEMI
   reduce by 91 on AND
   reduce by 91 on MINUS
   reduce by 91 on STAR
   reduce by 91 on SIZEOF
   reduce by 91 on UNOP
   reduce by 91 on INCOP
   reduce by 91 on LPAR
   reduce by 91 on CLASS
   reduce by 91 on NAME
   reduce by 91 on ELSE

State 296:
 ( 93)K statement       -> DO statement WHILE LPAR test RPAR SEMI .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 93 on STRING
   reduce by 93 on ICON
   reduce by 93 on FCON
   reduce by 93 on TYPE
   reduce by 93 on STRUCT
   reduce by 93 on ENUM
   reduce by 93 on RETURN
   reduce by 93 on GOTO
   reduce by 93 on IF
   reduce by 93 on SWITCH
   reduce by 93 on CASE
   reduce by 93 on DEFAULT
   reduce by 93 on BREAK
   reduce by 93 on CONTINUE
   reduce by 93 on WHILE
   reduce by 93 on DO
   reduce by 93 on FOR
   reduce by 93 on TRYSTMT
   reduce by 93 on THROW
   reduce by 93 on LC
   reduce by 93 on RC
   reduce by 93 on SEMI
   reduce by 93 on AND
   reduce by 93 on MINUS
   reduce by 93 on STAR
   reduce by 93 on SIZEOF
   reduce by 93 on UNOP
   reduce by 93 on INCOP
   reduce by 93 on LPAR
   reduce by 93 on CLASS
   reduce by 93 on NAME
   reduce by 93 on ELSE

State 297:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI test SEMI opt_expr .RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   shift to 299 on RPAR

State 298:
 (104)K exception_handler -> CATCH LPAR catch_type RPAR compound_stmt .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT CATCH THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 104 on STRING
   reduce by 104 on ICON
   reduce by 104 on FCON
   reduce by 104 on TYPE
   reduce by 104 on STRUCT
   reduce by 104 on ENUM
   reduce by 104 on RETURN
   reduce by 104 on GOTO
   reduce by 104 on IF
   reduce by 104 on SWITCH
   reduce by 104 on CASE
   reduce by 104 on DEFAULT
   reduce by 104 on BREAK
   reduce by 104 on CONTINUE
   reduce by 104 on WHILE
   reduce by 104 on DO
   reduce by 104 on FOR
   reduce by 104 on TRYSTMT
   reduce by 104 on CATCH
   reduce by 104 on THROW
   reduce by 104 on LC
   reduce by 104 on RC
   reduce by 104 on SEMI
   reduce by 104 on AND
   reduce by 104 on MINUS
   reduce by 104 on STAR
   reduce by 104 on SIZEOF
   reduce by 104 on UNOP
   reduce by 104 on INCOP
   reduce by 104 on LPAR
   reduce by 104 on CLASS
   reduce by 104 on NAME
   reduce by 104 on ELSE

State 299:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR .statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 79)  compound_stmt   -> .LC stmt_list RC[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 83)  statement       -> .SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 84)  statement       -> .compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 85)  statement       -> .expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 86)  statement       -> .RETURN SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 87)  statement       -> .RETURN expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 88)  statement       -> .GOTO target SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 89)  statement       -> .target COLON statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 90)  statement       -> .IF LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 91)  statement       -> .IF LPAR test RPAR statement ELSE statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 92)  statement       -> .WHILE LPAR test RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 93)  statement       -> .DO statement WHILE LPAR test RPAR SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 94)  statement       -> .FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 95)  statement       -> .BREAK SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 96)  statement       -> .CONTINUE SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 97)  statement       -> .SWITCH LPAR expr RPAR compound_stmt[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 98)  statement       -> .CASE const_expr COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 ( 99)  statement       -> .DEFAULT COLON[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (100)  statement       -> .THROW expr SEMI[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (101)  statement       -> .TRYSTMT compound_stmt handler_list[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]
 (108)  target          -> .NAME[COLON]
 (111)  unary           -> .LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (112)  unary           -> .FCON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (113)  unary           -> .ICON[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (114)  unary           -> .NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (115)  unary           -> .string_const[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (116)  unary           -> .SIZEOF LPAR string_const RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (117)  unary           -> .SIZEOF LPAR expr RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (118)  unary           -> .SIZEOF LPAR abstract_decl RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (119)  unary           -> .LPAR abstract_decl RPAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (120)  unary           -> .MINUS unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (121)  unary           -> .UNOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (122)  unary           -> .unary INCOP[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (123)  unary           -> .INCOP unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (124)  unary           -> .AND unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (125)  unary           -> .STAR unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (126)  unary           -> .unary LB expr RB[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (127)  unary           -> .unary STRUCTOP NAME[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (128)  unary           -> .unary LPAR args RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (129)  unary           -> .unary LPAR RPAR[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (132)  expr            -> .expr COMMA non_comma_expr[SEMI COMMA]
 (133)  expr            -> .non_comma_expr[SEMI COMMA]
 (134)  non_comma_expr  -> .non_comma_expr QUEST non_comma_expr COLON non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (135)  non_comma_expr  -> .non_comma_expr ASSIGNOP non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (136)  non_comma_expr  -> .non_comma_expr EQUAL non_comma_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (137)  non_comma_expr  -> .or_expr[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (138)  or_expr         -> .or_list[SEMI COMMA EQUAL ASSIGNOP QUEST]
 (139)  or_list         -> .or_list OROR and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (140)  or_list         -> .and_expr[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (141)  and_expr        -> .and_list[SEMI COMMA EQUAL ASSIGNOP QUEST OROR]
 (142)  and_list        -> .and_list ANDAND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (143)  and_list        -> .binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND]
 (144)  binary          -> .binary RELOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (145)  binary          -> .binary EQUOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (146)  binary          -> .binary STAR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (147)  binary          -> .binary DIVOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (148)  binary          -> .binary SHIFTOP binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (149)  binary          -> .binary AND binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (150)  binary          -> .binary XOR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (151)  binary          -> .binary OR binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (152)  binary          -> .binary PLUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (153)  binary          -> .binary MINUS binary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (154)  binary          -> .unary[SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP]
 (162)  string_const    -> .STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]
 (163)  string_const    -> .string_const STRING[STRING SEMI COMMA EQUAL ASSIGNOP QUEST OROR ANDAND OR XOR AND EQUOP RELOP SHIFTOP PLUS MINUS STAR DIVOP INCOP LB LPAR STRUCTOP]

   shift to 75 on STRING
   shift to 58 on ICON
   shift to 57 on FCON
   shift to 140 on RETURN
   shift to 141 on GOTO
   shift to 143 on IF
   shift to 149 on SWITCH
   shift to 150 on CASE
   shift to 151 on DEFAULT
   shift to 147 on BREAK
   shift to 148 on CONTINUE
   shift to 144 on WHILE
   shift to 145 on DO
   shift to 146 on FOR
   shift to 153 on TRYSTMT
   shift to 152 on THROW
   shift to 37 on LC
   shift to 137 on SEMI
   shift to 66 on AND
   shift to 62 on MINUS
   shift to 67 on STAR
   shift to 61 on SIZEOF
   shift to 63 on UNOP
   shift to 65 on INCOP
   shift to 56 on LPAR
   shift to 154 on NAME
   goto 138 on compound_stmt
   goto 300 on statement
   goto 139 on expr
   goto 142 on target
   goto 64 on unary
   goto 60 on string_const
   goto 69 on non_comma_expr
   goto 70 on or_expr
   goto 71 on or_list
   goto 72 on and_expr
   goto 73 on and_list
   goto 74 on binary

State 300:
 ( 94)K statement       -> FOR LPAR opt_expr SEMI test SEMI opt_expr RPAR statement .[STRING ICON FCON TYPE STRUCT ENUM RETURN GOTO IF SWITCH CASE DEFAULT BREAK CONTINUE WHILE DO FOR TRYSTMT THROW LC RC SEMI AND MINUS STAR SIZEOF UNOP INCOP LPAR CLASS NAME ELSE]

   reduce by 94 on STRING
   reduce by 94 on ICON
   reduce by 94 on FCON
   reduce by 94 on TYPE
   reduce by 94 on STRUCT
   reduce by 94 on ENUM
   reduce by 94 on RETURN
   reduce by 94 on GOTO
   reduce by 94 on IF
   reduce by 94 on SWITCH
   reduce by 94 on CASE
   reduce by 94 on DEFAULT
   reduce by 94 on BREAK
   reduce by 94 on CONTINUE
   reduce by 94 on WHILE
   reduce by 94 on DO
   reduce by 94 on FOR
   reduce by 94 on TRYSTMT
   reduce by 94 on THROW
   reduce by 94 on LC
   reduce by 94 on RC
   reduce by 94 on SEMI
   reduce by 94 on AND
   reduce by 94 on MINUS
   reduce by 94 on STAR
   reduce by 94 on SIZEOF
   reduce by 94 on UNOP
   reduce by 94 on INCOP
   reduce by 94 on LPAR
   reduce by 94 on CLASS
   reduce by 94 on NAME
   reduce by 94 on ELSE


  74	terminals
  52	nonterminals
 165	productions
 301	LALR(1) states
3332	items
7.560(x86)/7.640(x64) bytes	 required for parsertables

   0	shift/reduce  conflicts
   0	reduce/reduce conflicts
 143	warnings
